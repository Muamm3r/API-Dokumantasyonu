/api/FirmaKodlar/add:
  post:
    description: Yeni bir firma kodu kaydı ekler. Bu işlem, sisteme yeni firma kodu
      bilgileri eklemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/FirmaKodlar'
        application/json:
          schema:
            $ref: '#/components/schemas/FirmaKodlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/FirmaKodlar'
        text/json:
          schema:
            $ref: '#/components/schemas/FirmaKodlar'
    responses:
      '200':
        description: Success
    summary: Firma Kodları Ekleme
    tags:
    - Firma Kodlar
/api/FirmaKodlar/addrange:
  post:
    description: Belirtilen aralıkta birden fazla firma kodu kaydı ekler. Bu işlem,
      toplu firma kodu bilgilerini sisteme eklemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/FirmaKodlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/FirmaKodlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/FirmaKodlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/FirmaKodlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Firma Kodları Aralığı Ekleme
    tags:
    - Firma Kodlar
/api/FirmaKodlar/delete:
  post:
    description: Belirtilen firma kodu bilgilerini siler. Bu işlem, kullanıcıların
      belirli firma kodu bilgilerini sistemden kaldırmalarına olanak tanır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/FirmaKodlar'
        application/json:
          schema:
            $ref: '#/components/schemas/FirmaKodlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/FirmaKodlar'
        text/json:
          schema:
            $ref: '#/components/schemas/FirmaKodlar'
    responses:
      '200':
        description: Success
    summary: Firma Kodları Silme
    tags:
    - Firma Kodlar
/api/FirmaKodlar/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip firma kodunu siler. Bu işlem, belirli bir
      firma kodunun sistemden kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Firma Kodunu Silme
    tags:
    - Firma Kodlar
/api/FirmaKodlar/deleterange:
  post:
    description: Belirtilen aralıkta bulunan firma kodu kayıtlarını toplu olarak siler.
      Bu işlem, birden fazla firma kodu bilgisinin aynı anda kaldırılması gerektiğinde
      kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/FirmaKodlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/FirmaKodlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/FirmaKodlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/FirmaKodlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Firma Kodları Silme
    tags:
    - Firma Kodlar
/api/FirmaKodlar/getall:
  post:
    description: Veritabanındaki tüm firma kodu kayıtlarını getirir. Bu işlem, kullanıcıların
      tüm firma kodu bilgilerini listelemelerini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/FirmaKodlarFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/FirmaKodlarFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/FirmaKodlarFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/FirmaKodlarFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Firma Kodlarını Getir
    tags:
    - Firma Kodlar
/api/FirmaKodlar/getbyid:
  get:
    description: Belirtilen ID'ye sahip firma kodu kaydını getirir. Bu işlem, belirli
      bir firma kodu bilgisini görüntülemek için kullanılır.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Firma Kodunu Getir
    tags:
    - Firma Kodlar
/api/FirmaKodlar/update:
  put:
    description: Belirtilen ID'ye sahip firma kodunu günceller. Bu işlem, mevcut bir
      firma kodu bilgisindeki bilgileri güncellemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/FirmaKodlar'
        application/json:
          schema:
            $ref: '#/components/schemas/FirmaKodlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/FirmaKodlar'
        text/json:
          schema:
            $ref: '#/components/schemas/FirmaKodlar'
    responses:
      '200':
        description: Success
    summary: Firma Kodunu Güncelleme
    tags:
    - Firma Kodlar
/api/FirmaKodlar/updaterange:
  put:
    description: Belirtilen aralıkta bulunan firma kodu kayıtlarını toplu olarak günceller.
      Bu işlem, birden fazla firma kodu bilgisinin aynı anda güncellenmesi gerektiğinde
      kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/FirmaKodlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/FirmaKodlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/FirmaKodlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/FirmaKodlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Firma Kodlarını Güncelleme
    tags:
    - Firma Kodlar
/api/Genelayar/add:
  post:
    description: Sisteme yeni bir genel ayar kaydı ekler. Bu işlem, sistemde genel
      ayar bilgilerini güncellemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Genelayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Genelayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Genelayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Genelayar'
    responses:
      '200':
        description: Success
    summary: Yeni Genel Ayar Ekleme
    tags:
    - Genel Ayar İşlemleri
/api/Genelayar/addrange:
  post:
    description: Birden fazla genel ayar kaydını toplu olarak sisteme ekler. Bu işlem,
      çok sayıda genel ayar bilgisinin aynı anda eklenmesi gerektiğinde kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Genelayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Genelayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Genelayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Genelayar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Genel Ayar Ekleme
    tags:
    - Genel Ayar İşlemleri
/api/Genelayar/delete:
  post:
    description: Belirtilen genel ayar bilgilerini sistemden siler. Bu işlem, genel
      ayarları kaldırmak için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Genelayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Genelayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Genelayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Genelayar'
    responses:
      '200':
        description: Success
    summary: Genel Ayar Silme
    tags:
    - Genel Ayar İşlemleri
/api/Genelayar/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip genel ayar kaydını sistemden siler. Bu işlem,
      belirli bir genel ayar bilgisinin kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Genel Ayar Silme
    tags:
    - Genel Ayar İşlemleri
/api/Genelayar/deleterange:
  post:
    description: Belirtilen aralıkta bulunan genel ayar kayıtlarını toplu olarak siler.
      Bu işlem, birden fazla genel ayar bilgisinin aynı anda kaldırılması gerektiğinde
      kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Genelayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Genelayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Genelayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Genelayar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Genel Ayar Silme
    tags:
    - Genel Ayar İşlemleri
/api/Genelayar/getall:
  post:
    description: Sistemdeki tüm genel ayar kayıtlarını getirir. Bu işlem, genel ayar
      bilgilerini listelemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/GenelayarFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/GenelayarFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/GenelayarFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/GenelayarFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Genel Ayarları Getir
    tags:
    - Genel Ayar İşlemleri
/api/Genelayar/getbyid:
  get:
    description: Belirtilen ID'ye sahip genel ayar kaydını getirir. Bu işlem, belirli
      bir genel ayar bilgisini görüntülemek için kullanılır.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Genel Ayarı Getir
    tags:
    - Genel Ayar İşlemleri
/api/Genelayar/update:
  put:
    description: Belirtilen ID'ye sahip genel ayar kaydını günceller. Bu işlem, mevcut
      genel ayar bilgisindeki bilgileri güncellemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Genelayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Genelayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Genelayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Genelayar'
    responses:
      '200':
        description: Success
    summary: Genel Ayarı Güncelle
    tags:
    - Genel Ayar İşlemleri
/api/Genelayar/updaterange:
  put:
    description: Belirtilen aralıkta bulunan genel ayar kayıtlarını toplu olarak günceller.
      Bu işlem, birden fazla genel ayar bilgisinin aynı anda güncellenmesi gerektiğinde
      kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Genelayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Genelayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Genelayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Genelayar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Genel Ayar Güncelleme
    tags:
    - Genel Ayar İşlemleri
/api/Gider/ControlDelete:
  post:
    description: Belirtilen gider bilgilerini kontrol eder ve silme işlemi için uygun
      olup olmadığını değerlendirir. Bu işlem, giderlerin silinmesi öncesinde doğruluk
      ve uygunluk kontrolü yapmak için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Gider'
        application/json:
          schema:
            $ref: '#/components/schemas/Gider'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Gider'
        text/json:
          schema:
            $ref: '#/components/schemas/Gider'
    responses:
      '200':
        description: Success
    summary: Gider Silme Kontrolü
    tags:
    - Gider
/api/Gider/ControlDeleteById:
  delete:
    description: Belirtilen ID'ye sahip gider kaydını kontrol eder ve silme işlemi
      için uygun olup olmadığını değerlendirir. Bu işlem, belirli bir giderin silinmeden
      önce kontrol edilmesini sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Gider Silme Kontrolü
    tags:
    - Gider
/api/Gider/add:
  post:
    description: Sisteme yeni bir gider kaydı ekler. Bu işlem, finansal kayıtları
      güncellemek ve yeni gider bilgilerini eklemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Gider'
        application/json:
          schema:
            $ref: '#/components/schemas/Gider'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Gider'
        text/json:
          schema:
            $ref: '#/components/schemas/Gider'
    responses:
      '200':
        description: Success
    summary: Yeni Gider Ekleme
    tags:
    - Gider
/api/Gider/addrange:
  post:
    description: Birden fazla gider kaydını toplu olarak sisteme ekler. Bu işlem,
      çok sayıda gider bilgisinin aynı anda eklenmesi gerektiğinde kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Gider'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Gider'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Gider'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Gider'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Gider Ekleme
    tags:
    - Gider
/api/Gider/delete:
  post:
    description: Belirtilen gider bilgilerini sistemden siler. Bu işlem, mevcut gider
      kayıtlarını kaldırmak için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Gider'
        application/json:
          schema:
            $ref: '#/components/schemas/Gider'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Gider'
        text/json:
          schema:
            $ref: '#/components/schemas/Gider'
    responses:
      '200':
        description: Success
    summary: Gider Silme
    tags:
    - Gider
/api/Gider/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip gider kaydını sistemden siler. Bu işlem, belirli
      bir gider bilgisinin kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Gider Silme
    tags:
    - Gider
/api/Gider/deleterange:
  post:
    description: Belirtilen aralıkta bulunan gider kayıtlarını toplu olarak siler.
      Bu işlem, birden fazla gider bilgisinin aynı anda kaldırılması gerektiğinde
      kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Gider'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Gider'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Gider'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Gider'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Gider Silme
    tags:
    - Gider
/api/Gider/getall:
  post:
    description: Sistemdeki tüm gider kayıtlarını getirir. Bu işlem, gider bilgilerini
      listelemek ve incelemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/GiderFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/GiderFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/GiderFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/GiderFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Giderleri Getir
    tags:
    - Gider
/api/Gider/getbyid:
  get:
    description: Belirtilen ID'ye sahip gider kaydını getirir. Bu işlem, belirli bir
      gider bilgisini görüntülemek için kullanılır.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Gider Getir
    tags:
    - Gider
/api/Gider/update:
  put:
    description: Belirtilen ID'ye sahip gider kaydını günceller. Bu işlem, mevcut
      gider bilgisindeki bilgileri güncellemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Gider'
        application/json:
          schema:
            $ref: '#/components/schemas/Gider'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Gider'
        text/json:
          schema:
            $ref: '#/components/schemas/Gider'
    responses:
      '200':
        description: Success
    summary: Gider Güncelleme
    tags:
    - Gider
/api/Gider/updaterange:
  /api/GiderIsl/GelirGiderIslemYap: null
  post:
    description: Gelir ve gider işlemleri için gerekli verileri işleyerek belirli
      finansal işlemleri gerçekleştirir. Bu işlem, sistemde gelir ve gider kayıtlarının
      yönetilmesi için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
    responses:
      '200':
        description: Success
    summary: Gelir ve Gider İşlemi Yap
    tags:
    - GiderIsl
  put:
    description: Belirtilen aralıkta bulunan gider kayıtlarını toplu olarak günceller.
      Bu işlem, birden fazla gider bilgisinin aynı anda güncellenmesi gerektiğinde
      kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Gider'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Gider'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Gider'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Gider'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Gider Güncelleme
    tags:
    - Gider
/api/GiderIsl/add:
  post:
    description: Sisteme yeni bir gider işlemi kaydı ekler. Bu işlem, finansal kayıtların
      güncellenmesi ve yeni gider bilgilerini eklemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
    responses:
      '200':
        description: Success
    summary: Yeni Gider İşlemi Ekle
    tags:
    - GiderIsl
/api/GiderIsl/addrange:
  post:
    description: Birden fazla gider işlemi kaydını toplu olarak sisteme ekler. Bu
      işlem, çok sayıda finansal kaydın aynı anda eklenmesi gerektiğinde kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/GiderIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/GiderIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/GiderIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/GiderIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Gider İşlemi Ekle
    tags:
    - GiderIsl
/api/GiderIsl/delete:
  post:
    description: Belirtilen gider işlemi bilgilerini sistemden siler. Bu işlem, mevcut
      gider kayıtlarının kaldırılması için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
    responses:
      '200':
        description: Success
    summary: Gider İşlemi Silme
    tags:
    - GiderIsl
/api/GiderIsl/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip gider işlemi kaydını sistemden siler. Bu işlem,
      belirli bir gider kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Gider İşlemi Silme
    tags:
    - GiderIsl
/api/GiderIsl/deleterange:
  post:
    description: Belirtilen aralıkta bulunan gider işlemi kayıtlarını toplu olarak
      siler. Bu işlem, birden fazla gider kaydının aynı anda kaldırılması gerektiğinde
      kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/GiderIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/GiderIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/GiderIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/GiderIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Gider İşlemi Silme
    tags:
    - GiderIsl
/api/GiderIsl/getall:
  post:
    description: Sistemdeki tüm gider işlemi kayıtlarını getirir. Bu işlem, gider
      bilgilerini listelemek ve incelemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/GiderIslFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/GiderIslFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/GiderIslFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/GiderIslFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Gider İşlemlerini Getir
    tags:
    - GiderIsl
/api/GiderIsl/getbyid:
  get:
    description: Belirtilen ID'ye sahip gider işlemi kaydını getirir. Bu işlem, belirli
      bir gider bilgisini görüntülemek için kullanılır.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Gider İşlemi Getir
    tags:
    - GiderIsl
/api/GiderIsl/update:
  put:
    description: Belirtilen ID'ye sahip gider işlemi kaydını günceller. Bu işlem,
      mevcut gider bilgisindeki bilgileri güncellemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/GiderIsl'
    responses:
      '200':
        description: Success
    summary: Gider İşlemi Güncelleme
    tags:
    - GiderIsl
/api/GiderIsl/updaterange:
  /api/Hizlisatisayar/add: null
  post:
    description: Yeni bir hızlı satış ayarı kaydı ekler. Bu işlem, hızlı satış süreçlerinin
      yapılandırılması ve yönetilmesi için gerekli ayarların sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Hizlisatisayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Hizlisatisayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Hizlisatisayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Hizlisatisayar'
    responses:
      '200':
        description: Success
    summary: Hızlı Satış Ayarı Ekle
    tags:
    - Hızlı Satış Ayar İşlemleri
  put:
    description: Belirtilen aralıkta bulunan gider işlemi kayıtlarını toplu olarak
      günceller. Bu işlem, birden fazla gider bilgisinin aynı anda güncellenmesi gerektiğinde
      kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/GiderIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/GiderIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/GiderIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/GiderIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Gider İşlemi Güncelleme
    tags:
    - GiderIsl
/api/Hizlisatisayar/addrange:
  post:
    description: Birden fazla hızlı satış ayarı kaydını toplu olarak sisteme ekler.
      Bu işlem, çok sayıda hızlı satış ayarının aynı anda eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisayar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Hızlı Satış Ayarı Ekle
    tags:
    - Hızlı Satış Ayar İşlemleri
/api/Hizlisatisayar/delete:
  post:
    description: Belirtilen hızlı satış ayarı kaydını sistemden siler. Bu işlem, mevcut
      bir hızlı satış ayarının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Hizlisatisayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Hizlisatisayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Hizlisatisayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Hizlisatisayar'
    responses:
      '200':
        description: Success
    summary: Hızlı Satış Ayarını Sil
    tags:
    - Hızlı Satış Ayar İşlemleri
/api/Hizlisatisayar/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip hızlı satış ayarı kaydını sistemden siler.
      Bu işlem, belirli bir hızlı satış ayarının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Hızlı Satış Ayarını Sil
    tags:
    - Hızlı Satış Ayar İşlemleri
/api/Hizlisatisayar/deleterange:
  post:
    description: Belirtilen aralıkta bulunan hızlı satış ayarı kayıtlarını toplu olarak
      siler. Bu işlem, birden fazla hızlı satış ayarının aynı anda kaldırılması gerektiğinde
      kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisayar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Hızlı Satış Ayarı Sil
    tags:
    - Hızlı Satış Ayar İşlemleri
/api/Hizlisatisayar/getall:
  post:
    description: Sistemdeki tüm hızlı satış ayarı kayıtlarını getirir. Bu işlem, hızlı
      satış ayarlarının listelenmesi ve gözden geçirilmesi için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/HizlisatisayarFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/HizlisatisayarFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/HizlisatisayarFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/HizlisatisayarFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Hızlı Satış Ayarlarını Getir
    tags:
    - Hızlı Satış Ayar İşlemleri
/api/Hizlisatisayar/getbyid:
  get:
    description: Belirtilen ID'ye sahip hızlı satış ayarı kaydını getirir. Bu işlem,
      belirli bir hızlı satış ayarının detaylarını görüntülemek için kullanılır.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Hızlı Satış Ayarını Getir
    tags:
    - Hızlı Satış Ayar İşlemleri
/api/Hizlisatisayar/update:
  put:
    description: Belirtilen ID'ye sahip hızlı satış ayarı kaydını günceller. Bu işlem,
      mevcut hızlı satış ayarlarının bilgilerini güncellemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Hizlisatisayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Hizlisatisayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Hizlisatisayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Hizlisatisayar'
    responses:
      '200':
        description: Success
    summary: Hızlı Satış Ayarını Güncelle
    tags:
    - Hızlı Satış Ayar İşlemleri
/api/Hizlisatisayar/updaterange:
  /api/Hizlisatisbutonayarlari/add: null
  post:
    description: Yeni bir hızlı satış buton ayarı kaydı ekler. Bu işlem, hızlı satış
      işlemlerinde kullanılacak buton ayarlarının sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Hizlisatisbutonayarlari'
        application/json:
          schema:
            $ref: '#/components/schemas/Hizlisatisbutonayarlari'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Hizlisatisbutonayarlari'
        text/json:
          schema:
            $ref: '#/components/schemas/Hizlisatisbutonayarlari'
    responses:
      '200':
        description: Success
    summary: Hızlı Satış Buton Ayarı Ekle
    tags:
    - Hızlı Satış Buton Ayarları
  put:
    description: Belirtilen aralıkta bulunan hızlı satış ayarı kayıtlarını toplu olarak
      günceller. Bu işlem, birden fazla hızlı satış ayarının aynı anda güncellenmesi
      gerektiğinde kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisayar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Hızlı Satış Ayarını Güncelle
    tags:
    - Hızlı Satış Ayar İşlemleri
/api/Hizlisatisbutonayarlari/addrange:
  post:
    description: Birden fazla hızlı satış buton ayarını toplu olarak sisteme ekler.
      Bu işlem, çok sayıda hızlı satış buton ayarının aynı anda eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisbutonayarlari'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisbutonayarlari'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisbutonayarlari'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisbutonayarlari'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Hızlı Satış Buton Ayarı Ekle
    tags:
    - Hızlı Satış Buton Ayarları
/api/Hizlisatisbutonayarlari/delete:
  post:
    description: Belirtilen hızlı satış buton ayarını sistemden siler. Bu işlem, mevcut
      bir hızlı satış buton ayarının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Hizlisatisbutonayarlari'
        application/json:
          schema:
            $ref: '#/components/schemas/Hizlisatisbutonayarlari'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Hizlisatisbutonayarlari'
        text/json:
          schema:
            $ref: '#/components/schemas/Hizlisatisbutonayarlari'
    responses:
      '200':
        description: Success
    summary: Hızlı Satış Buton Ayarını Sil
    tags:
    - Hızlı Satış Buton Ayarları
/api/Hizlisatisbutonayarlari/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip hızlı satış buton ayarını sistemden siler.
      Bu işlem, belirli bir hızlı satış buton ayarının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Hızlı Satış Buton Ayarını Sil
    tags:
    - Hızlı Satış Buton Ayarları
/api/Hizlisatisbutonayarlari/deleterange:
  post:
    description: Belirtilen aralıkta bulunan hızlı satış buton ayarlarını toplu olarak
      siler. Bu işlem, birden fazla hızlı satış buton ayarının aynı anda kaldırılması
      gerektiğinde kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisbutonayarlari'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisbutonayarlari'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisbutonayarlari'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisbutonayarlari'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Hızlı Satış Buton Ayarını Sil
    tags:
    - Hızlı Satış Buton Ayarları
/api/Hizlisatisbutonayarlari/getall:
  post:
    description: Sistemdeki tüm hızlı satış buton ayarlarını getirir. Bu işlem, hızlı
      satış buton ayarlarının listelenmesi ve gözden geçirilmesi için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/HizlisatisbutonayarlariFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/HizlisatisbutonayarlariFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/HizlisatisbutonayarlariFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/HizlisatisbutonayarlariFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Hızlı Satış Buton Ayarlarını Getir
    tags:
    - Hızlı Satış Buton Ayarları
/api/Hizlisatisbutonayarlari/getbyid:
  get:
    description: Belirtilen ID'ye sahip hızlı satış buton ayarını getirir. Bu işlem,
      belirli bir hızlı satış buton ayarının detaylarını görüntülemek için kullanılır.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Hızlı Satış Buton Ayarını Getir
    tags:
    - Hızlı Satış Buton Ayarları
/api/Hizlisatisbutonayarlari/update:
  put:
    description: Belirtilen ID'ye sahip hızlı satış buton ayarını günceller. Bu işlem,
      mevcut hızlı satış buton ayarlarının bilgilerini güncellemek için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Hizlisatisbutonayarlari'
        application/json:
          schema:
            $ref: '#/components/schemas/Hizlisatisbutonayarlari'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Hizlisatisbutonayarlari'
        text/json:
          schema:
            $ref: '#/components/schemas/Hizlisatisbutonayarlari'
    responses:
      '200':
        description: Success
    summary: Hızlı Satış Buton Ayarını Güncelle
    tags:
    - Hızlı Satış Buton Ayarları
/api/Hizlisatisbutonayarlari/updaterange:
  put:
    description: Belirtilen aralıkta bulunan hızlı satış buton ayarlarını toplu olarak
      günceller. Bu işlem, birden fazla hızlı satış buton ayarının aynı anda güncellenmesi
      gerektiğinde kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisbutonayarlari'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisbutonayarlari'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisbutonayarlari'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Hizlisatisbutonayarlari'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Hızlı Satış Buton Ayarını Güncelle
    tags:
    - Hızlı Satış Buton Ayarları
/api/Kasalar/ControlDelete:
  post:
    description: Belirtilen kasa kaydını kontrol eder ve siler. Bu işlem, kasaların
      varlık durumu kontrol edilerek, gerekiyorsa sistemden kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Kasalar'
        application/json:
          schema:
            $ref: '#/components/schemas/Kasalar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Kasalar'
        text/json:
          schema:
            $ref: '#/components/schemas/Kasalar'
    responses:
      '200':
        description: Success
    summary: Kasayı Kontrol Et ve Sil
    tags:
    - Kasalar
/api/Kasalar/ControlDeleteById:
  delete:
    description: Belirtilen ID'ye sahip kasa kaydını kontrol eder ve siler. Bu işlem,
      belirli bir kasanın varlık durumu kontrol edilerek sistemden kaldırılmasını
      sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Kasayı Kontrol Et ve Sil
    tags:
    - Kasalar
/api/Kasalar/GetListWithBakiye:
  post:
    description: Kasaları ve bunların bakiye bilgilerini listeler. Bu işlem, kasa
      kayıtlarının ve her bir kasanın mevcut bakiye durumunun görüntülenmesi için
      kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KasalarFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/KasalarFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KasalarFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/KasalarFilterHelper'
    responses:
      '200':
        description: Success
    summary: Kasalar ve Bakiye Listele
    tags:
    - Kasalar
/api/Kasalar/add:
  post:
    description: Yeni bir kasa kaydı ekler. Bu işlem, sistemde yeni bir kasa oluşturulmasını
      sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Kasalar'
        application/json:
          schema:
            $ref: '#/components/schemas/Kasalar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Kasalar'
        text/json:
          schema:
            $ref: '#/components/schemas/Kasalar'
    responses:
      '200':
        description: Success
    summary: Kasa Ekle
    tags:
    - Kasalar
/api/Kasalar/addrange:
  post:
    description: Birden fazla kasa kaydını toplu olarak ekler. Bu işlem, çok sayıda
      kasa kaydının aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Kasalar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Kasalar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Kasalar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Kasalar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kasa Ekle
    tags:
    - Kasalar
/api/Kasalar/delete:
  post:
    description: Belirtilen kasa kaydını sistemden siler. Bu işlem, mevcut bir kasa
      kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Kasalar'
        application/json:
          schema:
            $ref: '#/components/schemas/Kasalar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Kasalar'
        text/json:
          schema:
            $ref: '#/components/schemas/Kasalar'
    responses:
      '200':
        description: Success
    summary: Kasa Sil
    tags:
    - Kasalar
/api/Kasalar/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip kasa kaydını sistemden siler. Bu işlem, belirli
      bir kasa kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Kasa Sil
    tags:
    - Kasalar
/api/Kasalar/deleterange:
  post:
    description: Belirtilen aralıkta bulunan kasa kayıtlarını toplu olarak siler.
      Bu işlem, birden fazla kasa kaydının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Kasalar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Kasalar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Kasalar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Kasalar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kasa Sil
    tags:
    - Kasalar
/api/Kasalar/getall:
  post:
    description: Sistemdeki tüm kasa kayıtlarını getirir. Bu işlem, kasa kayıtlarının
      listelenmesi ve detaylarının görüntülenmesi için kullanılır.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KasalarFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/KasalarFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KasalarFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/KasalarFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Kasaları Getir
    tags:
    - Kasalar
/api/Kasalar/getbyid:
  get:
    description: Belirtilen ID'ye sahip kasa kaydını getirir. Bu işlem, belirli bir
      kasa kaydının detaylarının görüntülenmesi için kullanılır.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Kasa Getir
    tags:
    - Kasalar
/api/Kasalar/update:
  put:
    description: Belirtilen ID'ye sahip kasa kaydını günceller. Bu işlem, mevcut bir
      kasa kaydının bilgilerinin güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Kasalar'
        application/json:
          schema:
            $ref: '#/components/schemas/Kasalar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Kasalar'
        text/json:
          schema:
            $ref: '#/components/schemas/Kasalar'
    responses:
      '200':
        description: Success
    summary: Kasa Güncelle
    tags:
    - Kasalar
/api/Kasalar/updaterange:
  put:
    description: Belirtilen aralıkta bulunan kasa kayıtlarını toplu olarak günceller.
      Bu işlem, birden fazla kasa kaydının aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Kasalar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Kasalar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Kasalar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Kasalar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kasa Güncelle
    tags:
    - Kasalar
/api/KasalarIsl/GetListAll:
  post:
    description: Sistemdeki tüm kasa işlem kayıtlarını listeler. Bu işlem, kullanıcıların
      kasa işlemlerinin detaylarını görmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
    responses:
      '200':
        description: Success
    summary: Kasalar İşlem Listele
    tags:
    - KasalarIsl
/api/KasalarIsl/GetListAllWithBakiye:
  post:
    description: Tüm kasa işlem kayıtlarını ve her bir işlemin bakiye bilgisini listeler.
      Bu işlem, kasa işlemleri ve bakiye durumunun birlikte görüntülenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
    responses:
      '200':
        description: Success
    summary: Kasalar İşlem ve Bakiye Listele
    tags:
    - KasalarIsl
/api/KasalarIsl/GetListWithBakiye:
  post:
    description: Kasalar işlemlerini ve her bir kasanın bakiye bilgisini listeler.
      Bu işlem, belirli bir tarih aralığı veya filtreye göre işlemler ve bakiye bilgilerini
      sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
    responses:
      '200':
        description: Success
    summary: Kasalar İşlem Listele ve Bakiye Görüntüle
    tags:
    - KasalarIsl
/api/KasalarIsl/KasaIslBorcAlacakBakiye:
  post:
    description: Belirtilen kasa işlemleri için borç ve alacak bakiye bilgilerini
      hesaplar. Bu işlem, kasa işlemleri üzerinden borç ve alacak durumlarının hesaplanmasını
      sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
    responses:
      '200':
        description: Success
    summary: Kasa İşlem Borç ve Alacak Bakiye
    tags:
    - KasalarIsl
/api/KasalarIsl/KasaIslemYap:
  post:
    description: Yeni bir kasa işlemi oluşturur. Bu işlem, belirli bir kasa üzerinde
      işlem gerçekleştirerek sistemde yeni bir kayıt oluşturur.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
    responses:
      '200':
        description: Success
    summary: Kasa İşlemi Yap
    tags:
    - KasalarIsl
/api/KasalarIsl/add:
  post:
    description: Yeni bir kasa işlemi ekler. Bu işlem, sistemde yeni bir kasa işlem
      kaydının oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
    responses:
      '200':
        description: Success
    summary: Kasa İşlemi Ekle
    tags:
    - KasalarIsl
/api/KasalarIsl/addrange:
  post:
    description: Birden fazla kasa işlem kaydını toplu olarak ekler. Bu işlem, çok
      sayıda kasa işleminin aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/KasalarIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/KasalarIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/KasalarIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/KasalarIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kasa İşlemi Ekle
    tags:
    - KasalarIsl
/api/KasalarIsl/delete:
  post:
    description: Belirtilen kasa işlem kaydını sistemden siler. Bu işlem, mevcut bir
      kasa işlem kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
    responses:
      '200':
        description: Success
    summary: Kasa İşlemi Sil
    tags:
    - KasalarIsl
/api/KasalarIsl/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip kasa işlem kaydını sistemden siler. Bu işlem,
      belirli bir kasa işlem kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Kasa İşlemi Sil
    tags:
    - KasalarIsl
/api/KasalarIsl/deleterange:
  post:
    description: Belirtilen aralıkta bulunan kasa işlem kayıtlarını toplu olarak siler.
      Bu işlem, birden fazla kasa işlem kaydının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/KasalarIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/KasalarIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/KasalarIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/KasalarIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kasa İşlemi Sil
    tags:
    - KasalarIsl
/api/KasalarIsl/getall:
  post:
    description: Tüm kasa işlem kayıtlarını getirir. Bu işlem, belirli filtrelere
      göre tüm kasa işlemlerinin görüntülenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/KasalarIslFilterHelper'
    responses:
      '200':
        description: Success
    summary: Kasa İşlemi Listele
    tags:
    - KasalarIsl
/api/KasalarIsl/getbyid:
  get:
    description: Belirtilen ID'ye sahip kasa işlem kaydını getirir. Bu işlem, belirli
      bir kasa işlem kaydının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Kasa İşlemi Getir
    tags:
    - KasalarIsl
/api/KasalarIsl/update:
  put:
    description: Belirtilen kasa işlem kaydını günceller. Bu işlem, mevcut bir kasa
      işlem kaydının bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/KasalarIsl'
    responses:
      '200':
        description: Success
    summary: Kasa İşlemi Güncelle
    tags:
    - KasalarIsl
/api/KasalarIsl/updaterange:
  put:
    description: Birden fazla kasa işlem kaydını toplu olarak günceller. Bu işlem,
      çok sayıda kasa işleminin aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/KasalarIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/KasalarIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/KasalarIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/KasalarIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kasa İşlemi Güncelle
    tags:
    - KasalarIsl
/api/KullaniciIslemler/add:
  post:
    description: Yeni bir kullanıcı işlemi kaydeder. Bu işlem, sistemde yeni bir kullanıcı
      işlem kaydının oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemler'
        application/json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemler'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemler'
        text/json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemler'
    responses:
      '200':
        description: Success
    summary: Kullanıcı İşlemi Ekle
    tags:
    - Kullanıcı İşlemleri
/api/KullaniciIslemler/addrange:
  post:
    description: Birden fazla kullanıcı işlem kaydını topluca ekler. Bu işlem, çok
      sayıda kullanıcı işleminin aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/KullaniciIslemler'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/KullaniciIslemler'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/KullaniciIslemler'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/KullaniciIslemler'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kullanıcı İşlemi Ekle
    tags:
    - Kullanıcı İşlemleri
/api/KullaniciIslemler/delete:
  post:
    description: Belirtilen kullanıcı işlem kaydını sistemden siler. Bu işlem, mevcut
      bir kullanıcı işlem kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemler'
        application/json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemler'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemler'
        text/json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemler'
    responses:
      '200':
        description: Success
    summary: Kullanıcı İşlemi Sil
    tags:
    - Kullanıcı İşlemleri
/api/KullaniciIslemler/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip kullanıcı işlem kaydını sistemden siler. Bu
      işlem, belirli bir kullanıcı işlem kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Kullanıcı İşlemi Sil
    tags:
    - Kullanıcı İşlemleri
/api/KullaniciIslemler/deleterange:
  post:
    description: Belirtilen aralıkta bulunan kullanıcı işlem kayıtlarını topluca siler.
      Bu işlem, birden fazla kullanıcı işlem kaydının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/KullaniciIslemler'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/KullaniciIslemler'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/KullaniciIslemler'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/KullaniciIslemler'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kullanıcı İşlemi Sil
    tags:
    - Kullanıcı İşlemleri
/api/KullaniciIslemler/getall:
  post:
    description: Sistemdeki tüm kullanıcı işlem kayıtlarını getirir. Bu işlem, tüm
      kullanıcı işlemlerinin detaylarını görüntülemenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemlerFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemlerFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemlerFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemlerFilterHelper'
    responses:
      '200':
        description: Success
    summary: Kullanıcı İşlemleri Listele
    tags:
    - Kullanıcı İşlemleri
/api/KullaniciIslemler/getbyid:
  get:
    description: Belirtilen ID'ye sahip kullanıcı işlem kaydını getirir. Bu işlem,
      belirli bir kullanıcı işlem kaydının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Kullanıcı İşlemi Getir
    tags:
    - Kullanıcı İşlemleri
/api/KullaniciIslemler/update:
  put:
    description: Belirtilen kullanıcı işlem kaydını günceller. Bu işlem, mevcut bir
      kullanıcı işlem kaydının bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemler'
        application/json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemler'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemler'
        text/json:
          schema:
            $ref: '#/components/schemas/KullaniciIslemler'
    responses:
      '200':
        description: Success
    summary: Kullanıcı İşlemi Güncelle
    tags:
    - Kullanıcı İşlemleri
/api/KullaniciIslemler/updaterange:
  put:
    description: Birden fazla kullanıcı işlem kaydını topluca günceller. Bu işlem,
      çok sayıda kullanıcı işleminin aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/KullaniciIslemler'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/KullaniciIslemler'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/KullaniciIslemler'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/KullaniciIslemler'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kullanıcı İşlemi Güncelle
    tags:
    - Kullanıcı İşlemleri
/api/Kurlar/add:
  post:
    description: Yeni bir döviz kuru kaydeder. Bu işlem, sistemde yeni bir döviz kuru
      kaydının oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Kurlar'
        application/json:
          schema:
            $ref: '#/components/schemas/Kurlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Kurlar'
        text/json:
          schema:
            $ref: '#/components/schemas/Kurlar'
    responses:
      '200':
        description: Success
    summary: Döviz Kuru Ekle
    tags:
    - Kurlar
/api/Kurlar/addrange:
  post:
    description: Birden fazla döviz kuru kaydını topluca ekler. Bu işlem, çok sayıda
      döviz kurunun aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Kurlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Kurlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Kurlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Kurlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Döviz Kuru Ekle
    tags:
    - Kurlar
/api/Kurlar/delete:
  post:
    description: Belirtilen döviz kuru kaydını sistemden siler. Bu işlem, mevcut bir
      döviz kuru kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Kurlar'
        application/json:
          schema:
            $ref: '#/components/schemas/Kurlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Kurlar'
        text/json:
          schema:
            $ref: '#/components/schemas/Kurlar'
    responses:
      '200':
        description: Success
    summary: Döviz Kuru Sil
    tags:
    - Kurlar
/api/Kurlar/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip döviz kuru kaydını sistemden siler. Bu işlem,
      belirli bir döviz kuru kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Döviz Kuru Sil
    tags:
    - Kurlar
/api/Kurlar/deleterange:
  post:
    description: Belirtilen aralıkta bulunan döviz kuru kayıtlarını topluca siler.
      Bu işlem, birden fazla döviz kuru kaydının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Kurlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Kurlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Kurlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Kurlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Döviz Kuru Sil
    tags:
    - Kurlar
/api/Kurlar/getall:
  post:
    description: Sistemdeki tüm döviz kuru kayıtlarını getirir. Bu işlem, tüm döviz
      kurlarının detaylarını görüntülemenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/KurlarFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/KurlarFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/KurlarFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/KurlarFilterHelper'
    responses:
      '200':
        description: Success
    summary: Döviz Kurları Listele
    tags:
    - Kurlar
/api/Kurlar/getbyid:
  get:
    description: Belirtilen ID'ye sahip döviz kuru kaydını getirir. Bu işlem, belirli
      bir döviz kuru kaydının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Döviz Kuru Getir
    tags:
    - Kurlar
/api/Kurlar/update:
  put:
    description: Belirtilen döviz kuru kaydını günceller. Bu işlem, mevcut bir döviz
      kuru kaydının bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Kurlar'
        application/json:
          schema:
            $ref: '#/components/schemas/Kurlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Kurlar'
        text/json:
          schema:
            $ref: '#/components/schemas/Kurlar'
    responses:
      '200':
        description: Success
    summary: Döviz Kuru Güncelle
    tags:
    - Kurlar
/api/Kurlar/updaterange:
  put:
    description: Birden fazla döviz kuru kaydını topluca günceller. Bu işlem, çok
      sayıda döviz kurunun aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Kurlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Kurlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Kurlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Kurlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Döviz Kuru Güncelle
    tags:
    - Kurlar
/api/Mailayari/add:
  post:
    description: Yeni bir mail ayarı kaydeder. Bu işlem, sistemde yeni bir mail ayarının
      oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mailayari'
        application/json:
          schema:
            $ref: '#/components/schemas/Mailayari'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mailayari'
        text/json:
          schema:
            $ref: '#/components/schemas/Mailayari'
    responses:
      '200':
        description: Success
    summary: Mail Ayarı Ekle
    tags:
    - Mail Ayarı
/api/Mailayari/addrange:
  post:
    description: Birden fazla mail ayarını topluca ekler. Bu işlem, çok sayıda mail
      ayarının aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mailayari'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mailayari'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mailayari'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mailayari'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Mail Ayarı Ekle
    tags:
    - Mail Ayarı
/api/Mailayari/delete:
  post:
    description: Belirtilen mail ayarını sistemden siler. Bu işlem, mevcut bir mail
      ayarı kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mailayari'
        application/json:
          schema:
            $ref: '#/components/schemas/Mailayari'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mailayari'
        text/json:
          schema:
            $ref: '#/components/schemas/Mailayari'
    responses:
      '200':
        description: Success
    summary: Mail Ayarı Sil
    tags:
    - Mail Ayarı
/api/Mailayari/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip mail ayarını sistemden siler. Bu işlem, belirli
      bir mail ayarı kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Mail Ayarı Sil
    tags:
    - Mail Ayarı
/api/Mailayari/deleterange:
  post:
    description: Belirtilen aralıkta bulunan mail ayarlarını topluca siler. Bu işlem,
      birden fazla mail ayarının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mailayari'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mailayari'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mailayari'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mailayari'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Mail Ayarı Sil
    tags:
    - Mail Ayarı
/api/Mailayari/getall:
  post:
    description: Sistemdeki tüm mail ayarlarını getirir. Bu işlem, tüm mail ayarlarının
      detaylarını görüntülemenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/MailayariFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/MailayariFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/MailayariFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/MailayariFilterHelper'
    responses:
      '200':
        description: Success
    summary: Mail Ayarlarını Listele
    tags:
    - Mail Ayarı
/api/Mailayari/getbyid:
  get:
    description: Belirtilen ID'ye sahip mail ayarını getirir. Bu işlem, belirli bir
      mail ayarı kaydının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Mail Ayarı Getir
    tags:
    - Mail Ayarı
/api/Mailayari/update:
  put:
    description: Belirtilen mail ayarını günceller. Bu işlem, mevcut bir mail ayarı
      kaydının bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mailayari'
        application/json:
          schema:
            $ref: '#/components/schemas/Mailayari'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mailayari'
        text/json:
          schema:
            $ref: '#/components/schemas/Mailayari'
    responses:
      '200':
        description: Success
    summary: Mail Ayarı Güncelle
    tags:
    - Mail Ayarı
/api/Mailayari/updaterange:
  put:
    description: Birden fazla mail ayarını topluca günceller. Bu işlem, çok sayıda
      mail ayarının aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mailayari'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mailayari'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mailayari'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mailayari'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Mail Ayarı Güncelle
    tags:
    - Mail Ayarı
/api/Mokaayarlar/add:
  post:
    description: Yeni bir Moka ayarı kaydeder. Bu işlem, sistemde yeni bir Moka ayarının
      oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mokaayarlar'
        application/json:
          schema:
            $ref: '#/components/schemas/Mokaayarlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mokaayarlar'
        text/json:
          schema:
            $ref: '#/components/schemas/Mokaayarlar'
    responses:
      '200':
        description: Success
    summary: Moka Ayarı Ekle
    tags:
    - Moka Ayarlar
/api/Mokaayarlar/addrange:
  post:
    description: Birden fazla Moka ayarını topluca ekler. Bu işlem, çok sayıda Moka
      ayarının aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaayarlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaayarlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaayarlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaayarlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Moka Ayarı Ekle
    tags:
    - Moka Ayarlar
/api/Mokaayarlar/delete:
  post:
    description: Belirtilen Moka ayarını sistemden siler. Bu işlem, mevcut bir Moka
      ayarı kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mokaayarlar'
        application/json:
          schema:
            $ref: '#/components/schemas/Mokaayarlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mokaayarlar'
        text/json:
          schema:
            $ref: '#/components/schemas/Mokaayarlar'
    responses:
      '200':
        description: Success
    summary: Moka Ayarı Sil
    tags:
    - Moka Ayarlar
/api/Mokaayarlar/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip Moka ayarını sistemden siler. Bu işlem, belirli
      bir Moka ayarı kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Moka Ayarı Sil
    tags:
    - Moka Ayarlar
/api/Mokaayarlar/deleterange:
  post:
    description: Belirtilen aralıkta bulunan Moka ayarlarını topluca siler. Bu işlem,
      birden fazla Moka ayarının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaayarlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaayarlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaayarlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaayarlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Moka Ayarı Sil
    tags:
    - Moka Ayarlar
/api/Mokaayarlar/getall:
  post:
    description: Sistemdeki tüm Moka ayarlarını getirir. Bu işlem, tüm Moka ayarlarının
      detaylarını görüntülemenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/MokaayarlarFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/MokaayarlarFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/MokaayarlarFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/MokaayarlarFilterHelper'
    responses:
      '200':
        description: Success
    summary: Moka Ayarlarını Listele
    tags:
    - Moka Ayarlar
/api/Mokaayarlar/getbyid:
  get:
    description: Belirtilen ID'ye sahip Moka ayarını getirir. Bu işlem, belirli bir
      Moka ayarı kaydının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Moka Ayarı Getir
    tags:
    - Moka Ayarlar
/api/Mokaayarlar/update:
  put:
    description: Belirtilen Moka ayarını günceller. Bu işlem, mevcut bir Moka ayarı
      kaydının bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mokaayarlar'
        application/json:
          schema:
            $ref: '#/components/schemas/Mokaayarlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mokaayarlar'
        text/json:
          schema:
            $ref: '#/components/schemas/Mokaayarlar'
    responses:
      '200':
        description: Success
    summary: Moka Ayarı Güncelle
    tags:
    - Moka Ayarlar
/api/Mokaayarlar/updaterange:
  put:
    description: Birden fazla Moka ayarını topluca günceller. Bu işlem, çok sayıda
      Moka ayarının aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaayarlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaayarlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaayarlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaayarlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Moka Ayarı Güncelle
    tags:
    - Moka Ayarlar
/api/Mokaiade/add:
  post:
    description: Yeni bir Moka iade kaydeder. Bu işlem, sistemde yeni bir Moka iade
      kaydının oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mokaiade'
        application/json:
          schema:
            $ref: '#/components/schemas/Mokaiade'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mokaiade'
        text/json:
          schema:
            $ref: '#/components/schemas/Mokaiade'
    responses:
      '200':
        description: Success
    summary: Moka İade Ekle
    tags:
    - Moka İade
/api/Mokaiade/addrange:
  post:
    description: Birden fazla Moka iade kaydını topluca ekler. Bu işlem, çok sayıda
      Moka iade kaydının aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaiade'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaiade'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaiade'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaiade'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Moka İade Ekle
    tags:
    - Moka İade
/api/Mokaiade/delete:
  post:
    description: Belirtilen Moka iade kaydını sistemden siler. Bu işlem, mevcut bir
      Moka iade kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mokaiade'
        application/json:
          schema:
            $ref: '#/components/schemas/Mokaiade'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mokaiade'
        text/json:
          schema:
            $ref: '#/components/schemas/Mokaiade'
    responses:
      '200':
        description: Success
    summary: Moka İade Sil
    tags:
    - Moka İade
/api/Mokaiade/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip Moka iade kaydını sistemden siler. Bu işlem,
      belirli bir Moka iade kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Moka İade Sil
    tags:
    - Moka İade
/api/Mokaiade/deleterange:
  post:
    description: Belirtilen aralıkta bulunan Moka iade kayıtlarını topluca siler.
      Bu işlem, birden fazla Moka iade kaydının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaiade'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaiade'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaiade'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaiade'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Moka İade Sil
    tags:
    - Moka İade
/api/Mokaiade/getall:
  post:
    description: Sistemdeki tüm Moka iade kayıtlarını getirir. Bu işlem, tüm Moka
      iade kayıtlarının detaylarını görüntülemenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/MokaiadeFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/MokaiadeFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/MokaiadeFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/MokaiadeFilterHelper'
    responses:
      '200':
        description: Success
    summary: Moka İade Listele
    tags:
    - Moka İade
/api/Mokaiade/getbyid:
  get:
    description: Belirtilen ID'ye sahip Moka iade kaydını getirir. Bu işlem, belirli
      bir Moka iade kaydının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Moka İade Getir
    tags:
    - Moka İade
/api/Mokaiade/update:
  put:
    description: Belirtilen Moka iade kaydını günceller. Bu işlem, mevcut bir Moka
      iade kaydının bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mokaiade'
        application/json:
          schema:
            $ref: '#/components/schemas/Mokaiade'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mokaiade'
        text/json:
          schema:
            $ref: '#/components/schemas/Mokaiade'
    responses:
      '200':
        description: Success
    summary: Moka İade Güncelle
    tags:
    - Moka İade
/api/Mokaiade/updaterange:
  put:
    description: Birden fazla Moka iade kaydını topluca günceller. Bu işlem, çok sayıda
      Moka iade kaydının aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaiade'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaiade'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaiade'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaiade'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Moka İade Güncelle
    tags:
    - Moka İade
/api/Mokaisllog/add:
  post:
    description: Yeni bir Mokaisllog kaydeder. Bu işlem, sistemde yeni bir Mokaisllog
      kaydının oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mokaisllog'
        application/json:
          schema:
            $ref: '#/components/schemas/Mokaisllog'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mokaisllog'
        text/json:
          schema:
            $ref: '#/components/schemas/Mokaisllog'
    responses:
      '200':
        description: Success
    summary: Mokaisllog Ekle
    tags:
    - Mokaisllog
/api/Mokaisllog/addrange:
  post:
    description: Birden fazla Mokaisllog kaydını topluca ekler. Bu işlem, çok sayıda
      Mokaisllog kaydının aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaisllog'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaisllog'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaisllog'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaisllog'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Mokaisllog Ekle
    tags:
    - Mokaisllog
/api/Mokaisllog/delete:
  post:
    description: Belirtilen Mokaisllog kaydını sistemden siler. Bu işlem, mevcut bir
      Mokaisllog kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mokaisllog'
        application/json:
          schema:
            $ref: '#/components/schemas/Mokaisllog'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mokaisllog'
        text/json:
          schema:
            $ref: '#/components/schemas/Mokaisllog'
    responses:
      '200':
        description: Success
    summary: Mokaisllog Sil
    tags:
    - Mokaisllog
/api/Mokaisllog/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip Mokaisllog kaydını sistemden siler. Bu işlem,
      belirli bir Mokaisllog kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Mokaisllog Sil
    tags:
    - Mokaisllog
/api/Mokaisllog/deleterange:
  post:
    description: Belirtilen aralıkta bulunan Mokaisllog kayıtlarını topluca siler.
      Bu işlem, birden fazla Mokaisllog kaydının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaisllog'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaisllog'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaisllog'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaisllog'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Mokaisllog Sil
    tags:
    - Mokaisllog
/api/Mokaisllog/getall:
  post:
    description: Sistemdeki tüm Mokaisllog kayıtlarını getirir. Bu işlem, tüm Mokaisllog
      kayıtlarının detaylarını görüntülemenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/MokaisllogFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/MokaisllogFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/MokaisllogFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/MokaisllogFilterHelper'
    responses:
      '200':
        description: Success
    summary: Mokaisllog Listele
    tags:
    - Mokaisllog
/api/Mokaisllog/getbyid:
  get:
    description: Belirtilen ID'ye sahip Mokaisllog kaydını getirir. Bu işlem, belirli
      bir Mokaisllog kaydının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Mokaisllog Getir
    tags:
    - Mokaisllog
/api/Mokaisllog/update:
  put:
    description: Belirtilen Mokaisllog kaydını günceller. Bu işlem, mevcut bir Mokaisllog
      kaydının bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mokaisllog'
        application/json:
          schema:
            $ref: '#/components/schemas/Mokaisllog'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mokaisllog'
        text/json:
          schema:
            $ref: '#/components/schemas/Mokaisllog'
    responses:
      '200':
        description: Success
    summary: Mokaisllog Güncelle
    tags:
    - Mokaisllog
/api/Mokaisllog/updaterange:
  put:
    description: Birden fazla Mokaisllog kaydını topluca günceller. Bu işlem, çok
      sayıda Mokaisllog kaydının aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaisllog'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaisllog'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaisllog'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokaisllog'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Mokaisllog Güncelle
    tags:
    - Mokaisllog
/api/Mokalog/add:
  post:
    description: Yeni bir Mokalog kaydı ekler. Bu işlem, sistemde yeni bir Mokalog
      kaydının oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mokalog'
        application/json:
          schema:
            $ref: '#/components/schemas/Mokalog'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mokalog'
        text/json:
          schema:
            $ref: '#/components/schemas/Mokalog'
    responses:
      '200':
        description: Success
    summary: Mokalog Ekle
    tags:
    - Moka Log
/api/Mokalog/addrange:
  post:
    description: Birden fazla Mokalog kaydını topluca ekler. Bu işlem, çok sayıda
      Mokalog kaydının aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokalog'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokalog'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokalog'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokalog'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Mokalog Ekle
    tags:
    - Moka Log
/api/Mokalog/delete:
  post:
    description: Belirtilen Mokalog kaydını sistemden siler. Bu işlem, mevcut bir
      Mokalog kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mokalog'
        application/json:
          schema:
            $ref: '#/components/schemas/Mokalog'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mokalog'
        text/json:
          schema:
            $ref: '#/components/schemas/Mokalog'
    responses:
      '200':
        description: Success
    summary: Mokalog Sil
    tags:
    - Moka Log
/api/Mokalog/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip Mokalog kaydını sistemden siler. Bu işlem,
      belirli bir Mokalog kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Mokalog Sil
    tags:
    - Moka Log
/api/Mokalog/deleterange:
  post:
    description: Belirtilen aralıkta bulunan Mokalog kayıtlarını topluca siler. Bu
      işlem, birden fazla Mokalog kaydının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokalog'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokalog'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokalog'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokalog'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Mokalog Sil
    tags:
    - Moka Log
/api/Mokalog/getall:
  post:
    description: Sistemdeki tüm Mokalog kayıtlarını getirir. Bu işlem, tüm Mokalog
      kayıtlarının detaylarını görüntülemenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/MokalogFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/MokalogFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/MokalogFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/MokalogFilterHelper'
    responses:
      '200':
        description: Success
    summary: Mokalog Listele
    tags:
    - Moka Log
/api/Mokalog/getbyid:
  get:
    description: Belirtilen ID'ye sahip Mokalog kaydını getirir. Bu işlem, belirli
      bir Mokalog kaydının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Mokalog Getir
    tags:
    - Moka Log
/api/Mokalog/update:
  put:
    description: Belirtilen Mokalog kaydını günceller. Bu işlem, mevcut bir Mokalog
      kaydının bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Mokalog'
        application/json:
          schema:
            $ref: '#/components/schemas/Mokalog'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Mokalog'
        text/json:
          schema:
            $ref: '#/components/schemas/Mokalog'
    responses:
      '200':
        description: Success
    summary: Mokalog Güncelle
    tags:
    - Moka Log
/api/Mokalog/updaterange:
  put:
    description: Birden fazla Mokalog kaydını topluca günceller. Bu işlem, çok sayıda
      Mokalog kaydının aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokalog'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokalog'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Mokalog'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Mokalog'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Mokalog Güncelle
    tags:
    - Moka Log
/api/Personel/add:
  post:
    description: Sisteme yeni bir Personel kaydı ekler. Bu işlem, sistemde yeni bir
      Personel kaydının oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Personel'
        application/json:
          schema:
            $ref: '#/components/schemas/Personel'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Personel'
        text/json:
          schema:
            $ref: '#/components/schemas/Personel'
    responses:
      '200':
        description: Success
    summary: Personel Ekle
    tags:
    - Personel İşlemleri
/api/Personel/addrange:
  post:
    description: Birden fazla Personel kaydını topluca ekler. Bu işlem, çok sayıda
      Personel kaydının aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Personel'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Personel'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Personel'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Personel'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Personel Ekle
    tags:
    - Personel İşlemleri
/api/Personel/delete:
  post:
    description: Belirtilen Personel kaydını sistemden siler. Bu işlem, mevcut bir
      Personel kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Personel'
        application/json:
          schema:
            $ref: '#/components/schemas/Personel'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Personel'
        text/json:
          schema:
            $ref: '#/components/schemas/Personel'
    responses:
      '200':
        description: Success
    summary: Personel Sil
    tags:
    - Personel İşlemleri
/api/Personel/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip Personel kaydını sistemden siler. Bu işlem,
      belirli bir Personel kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Personel Sil
    tags:
    - Personel İşlemleri
/api/Personel/deleterange:
  post:
    description: Belirtilen aralıkta bulunan Personel kayıtlarını topluca siler. Bu
      işlem, birden fazla Personel kaydının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Personel'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Personel'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Personel'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Personel'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Personel Sil
    tags:
    - Personel İşlemleri
/api/Personel/getall:
  post:
    description: Sistemdeki tüm Personel kayıtlarını getirir. Bu işlem, tüm Personel
      kayıtlarının detaylarını görüntülemenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/PersonelFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/PersonelFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/PersonelFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/PersonelFilterHelper'
    responses:
      '200':
        description: Success
    summary: Personel Listele
    tags:
    - Personel İşlemleri
/api/Personel/getbyid:
  get:
    description: Belirtilen ID'ye sahip Personel kaydını getirir. Bu işlem, belirli
      bir Personel kaydının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Personel Getir
    tags:
    - Personel İşlemleri
/api/Personel/update:
  put:
    description: Belirtilen Personel kaydını günceller. Bu işlem, mevcut bir Personel
      kaydının bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Personel'
        application/json:
          schema:
            $ref: '#/components/schemas/Personel'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Personel'
        text/json:
          schema:
            $ref: '#/components/schemas/Personel'
    responses:
      '200':
        description: Success
    summary: Personel Güncelle
    tags:
    - Personel İşlemleri
/api/Personel/updaterange:
  put:
    description: Birden fazla Personel kaydını topluca günceller. Bu işlem, çok sayıda
      Personel kaydının aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Personel'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Personel'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Personel'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Personel'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Personel Güncelle
    tags:
    - Personel İşlemleri
/api/Personelizinler/add:
  post:
    description: Sisteme yeni bir Personel izni kaydı ekler. Bu işlem, sistemde yeni
      bir Personel izni kaydının oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Personelizinler'
        application/json:
          schema:
            $ref: '#/components/schemas/Personelizinler'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Personelizinler'
        text/json:
          schema:
            $ref: '#/components/schemas/Personelizinler'
    responses:
      '200':
        description: Success
    summary: Personel İzni Ekle
    tags:
    - Personel İzinler
/api/Personelizinler/addrange:
  post:
    description: Birden fazla Personel izni kaydını topluca ekler. Bu işlem, çok sayıda
      Personel izni kaydının aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Personelizinler'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Personelizinler'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Personelizinler'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Personelizinler'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Personel İzni Ekle
    tags:
    - Personel İzinler
/api/Personelizinler/delete:
  post:
    description: Belirtilen Personel izni kaydını sistemden siler. Bu işlem, mevcut
      bir Personel izni kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Personelizinler'
        application/json:
          schema:
            $ref: '#/components/schemas/Personelizinler'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Personelizinler'
        text/json:
          schema:
            $ref: '#/components/schemas/Personelizinler'
    responses:
      '200':
        description: Success
    summary: Personel İzni Sil
    tags:
    - Personel İzinler
/api/Personelizinler/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip Personel izni kaydını sistemden siler. Bu
      işlem, belirli bir Personel izni kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Personel İzni Sil
    tags:
    - Personel İzinler
/api/Personelizinler/deleterange:
  post:
    description: Belirtilen aralıkta bulunan Personel izni kayıtlarını topluca siler.
      Bu işlem, birden fazla Personel izni kaydının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Personelizinler'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Personelizinler'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Personelizinler'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Personelizinler'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Personel İzni Sil
    tags:
    - Personel İzinler
/api/Personelizinler/getall:
  post:
    description: Sistemdeki tüm Personel izni kayıtlarını getirir. Bu işlem, tüm Personel
      izinlerinin detaylarını görüntülemenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/PersonelizinlerFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/PersonelizinlerFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/PersonelizinlerFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/PersonelizinlerFilterHelper'
    responses:
      '200':
        description: Success
    summary: Personel İzinlerini Listele
    tags:
    - Personel İzinler
/api/Personelizinler/getbyid:
  get:
    description: Belirtilen ID'ye sahip Personel izni kaydını getirir. Bu işlem, belirli
      bir Personel izni kaydının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Personel İzni Getir
    tags:
    - Personel İzinler
/api/Personelizinler/update:
  put:
    description: Belirtilen Personel izni kaydını günceller. Bu işlem, mevcut bir
      Personel izni kaydının bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Personelizinler'
        application/json:
          schema:
            $ref: '#/components/schemas/Personelizinler'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Personelizinler'
        text/json:
          schema:
            $ref: '#/components/schemas/Personelizinler'
    responses:
      '200':
        description: Success
    summary: Personel İzni Güncelle
    tags:
    - Personel İzinler
/api/Personelizinler/updaterange:
  put:
    description: Birden fazla Personel izni kaydını topluca günceller. Bu işlem, çok
      sayıda Personel izni kaydının aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Personelizinler'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Personelizinler'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Personelizinler'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Personelizinler'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Personel İzni Güncelle
    tags:
    - Personel İzinler
/api/Personelnot/add:
  post:
    description: Sisteme yeni bir Personel notu kaydı ekler. Bu işlem, sistemde yeni
      bir Personel notu kaydının oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Personelnot'
        application/json:
          schema:
            $ref: '#/components/schemas/Personelnot'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Personelnot'
        text/json:
          schema:
            $ref: '#/components/schemas/Personelnot'
    responses:
      '200':
        description: Success
    summary: Personel Notu Ekle
    tags:
    - Personel Not
/api/Personelnot/addrange:
  post:
    description: Birden fazla Personel notu kaydını topluca ekler. Bu işlem, çok sayıda
      Personel notu kaydının aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Personelnot'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Personelnot'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Personelnot'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Personelnot'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Personel Notu Ekle
    tags:
    - Personel Not
/api/Personelnot/delete:
  post:
    description: Belirtilen Personel notu kaydını sistemden siler. Bu işlem, mevcut
      bir Personel notu kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Personelnot'
        application/json:
          schema:
            $ref: '#/components/schemas/Personelnot'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Personelnot'
        text/json:
          schema:
            $ref: '#/components/schemas/Personelnot'
    responses:
      '200':
        description: Success
    summary: Personel Notu Sil
    tags:
    - Personel Not
/api/Personelnot/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip Personel notu kaydını sistemden siler. Bu
      işlem, belirli bir Personel notu kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Personel Notunu Sil
    tags:
    - Personel Not
/api/Personelnot/deleterange:
  post:
    description: Belirtilen aralıkta bulunan Personel notu kayıtlarını topluca siler.
      Bu işlem, birden fazla Personel notu kaydının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Personelnot'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Personelnot'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Personelnot'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Personelnot'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Personel Notu Sil
    tags:
    - Personel Not
/api/Personelnot/getall:
  post:
    description: Sistemdeki tüm Personel notu kayıtlarını getirir. Bu işlem, tüm Personel
      notlarının detaylarını görüntülemenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/PersonelnotFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/PersonelnotFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/PersonelnotFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/PersonelnotFilterHelper'
    responses:
      '200':
        description: Success
    summary: Personel Notlarını Listele
    tags:
    - Personel Not
/api/Personelnot/getbyid:
  get:
    description: Belirtilen ID'ye sahip Personel notu kaydını getirir. Bu işlem, belirli
      bir Personel notu kaydının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Personel Notunu Getir
    tags:
    - Personel Not
/api/Personelnot/update:
  put:
    description: Belirtilen Personel notu kaydını günceller. Bu işlem, mevcut bir
      Personel notu kaydının bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Personelnot'
        application/json:
          schema:
            $ref: '#/components/schemas/Personelnot'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Personelnot'
        text/json:
          schema:
            $ref: '#/components/schemas/Personelnot'
    responses:
      '200':
        description: Success
    summary: Personel Notunu Güncelle
    tags:
    - Personel Not
/api/Personelnot/updaterange:
  put:
    description: Birden fazla Personel notu kaydını topluca günceller. Bu işlem, çok
      sayıda Personel notu kaydının aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Personelnot'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Personelnot'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Personelnot'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Personelnot'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Personel Notunu Güncelle
    tags:
    - Personel Not
/api/Pos/AddPos:
  post:
    description: Sisteme yeni bir POS (Point of Sale) kaydı ekler. Bu işlem, sistemde
      yeni bir POS kaydının oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Pos'
        application/json:
          schema:
            $ref: '#/components/schemas/Pos'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Pos'
        text/json:
          schema:
            $ref: '#/components/schemas/Pos'
    responses:
      '200':
        description: Success
    summary: Yeni POS Ekle
    tags:
    - Pos İşlemleri
/api/Pos/ControlDeleteById:
  delete:
    description: Belirtilen ID'ye sahip POS kaydını silmek için kontrol yapar. Bu
      işlem, belirli bir POS kaydının silinip silinmeyeceğini kontrol eder.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile POS Silme Kontrolü
    tags:
    - Pos İşlemleri
/api/Pos/DeletePos:
  delete:
    description: Belirtilen ID'ye sahip POS kaydını sistemden siler. Bu işlem, mevcut
      bir POS kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: true
      schema:
        type: string
      style: form
    responses:
      '200':
        description: Success
    summary: POS Sil
    tags:
    - Pos İşlemleri
/api/Pos/GetListPos:
  post:
    description: Sistemdeki POS kayıtlarını belirli filtreler kullanarak listeler.
      Bu işlem, POS'ların filtreleme kriterlerine göre görüntülenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/PosFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/PosFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/PosFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/PosFilterHelper'
    responses:
      '200':
        description: Success
    summary: POS Listele
    tags:
    - Pos İşlemleri
/api/Pos/UpdatePos:
  post:
    description: Belirtilen POS kaydını günceller. Bu işlem, mevcut bir POS kaydının
      bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Pos'
        application/json:
          schema:
            $ref: '#/components/schemas/Pos'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Pos'
        text/json:
          schema:
            $ref: '#/components/schemas/Pos'
    responses:
      '200':
        description: Success
    summary: POS Güncelle
    tags:
    - Pos İşlemleri
/api/Pos/add:
  post:
    description: Sisteme yeni bir POS (Point of Sale) kaydı ekler. Bu işlem, sistemde
      yeni bir POS kaydının oluşturulmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Pos'
        application/json:
          schema:
            $ref: '#/components/schemas/Pos'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Pos'
        text/json:
          schema:
            $ref: '#/components/schemas/Pos'
    responses:
      '200':
        description: Success
    summary: POS Ekle
    tags:
    - Pos İşlemleri
/api/Pos/addrange:
  post:
    description: Birden fazla POS kaydını topluca ekler. Bu işlem, çok sayıda POS
      kaydının aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Pos'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Pos'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Pos'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Pos'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu POS Ekle
    tags:
    - Pos İşlemleri
/api/Pos/delete:
  post:
    description: Belirtilen POS kaydını sistemden siler. Bu işlem, mevcut bir POS
      kaydının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Pos'
        application/json:
          schema:
            $ref: '#/components/schemas/Pos'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Pos'
        text/json:
          schema:
            $ref: '#/components/schemas/Pos'
    responses:
      '200':
        description: Success
    summary: POS Sil
    tags:
    - Pos İşlemleri
/api/Pos/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip POS kaydını sistemden siler. Bu işlem, belirli
      bir POS kaydının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile POS Sil
    tags:
    - Pos İşlemleri
/api/Pos/deleterange:
  post:
    description: Belirtilen aralıkta bulunan POS kayıtlarını topluca siler. Bu işlem,
      birden fazla POS kaydının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Pos'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Pos'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Pos'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Pos'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu POS Sil
    tags:
    - Pos İşlemleri
/api/Pos/getall:
  post:
    description: Sistemdeki tüm POS kayıtlarını getirir. Bu işlem, tüm POS'ların detaylarını
      görüntülemenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/PosFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/PosFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/PosFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/PosFilterHelper'
    responses:
      '200':
        description: Success
    summary: POS'ları Listele
    tags:
    - Pos İşlemleri
/api/Pos/getbyid:
  get:
    description: Belirtilen ID'ye sahip POS kaydını getirir. Bu işlem, belirli bir
      POS kaydının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile POS Getir
    tags:
    - Pos İşlemleri
/api/Pos/update:
  put:
    description: Belirtilen POS kaydını günceller. Bu işlem, mevcut bir POS kaydının
      bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Pos'
        application/json:
          schema:
            $ref: '#/components/schemas/Pos'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Pos'
        text/json:
          schema:
            $ref: '#/components/schemas/Pos'
    responses:
      '200':
        description: Success
    summary: POS Güncelle
    tags:
    - Pos İşlemleri
/api/Pos/updaterange:
  put:
    description: Birden fazla POS kaydını topluca günceller. Bu işlem, çok sayıda
      POS kaydının aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Pos'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Pos'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Pos'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Pos'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu POS Güncelle
    tags:
    - Pos İşlemleri
/api/Posislemdetay/add:
  post:
    description: Sisteme yeni bir POS işlem detay kaydı ekler. Bu işlem, bir POS işlemiyle
      ilgili detay bilgilerini sisteme kaydeder.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Posislemdetay'
        application/json:
          schema:
            $ref: '#/components/schemas/Posislemdetay'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Posislemdetay'
        text/json:
          schema:
            $ref: '#/components/schemas/Posislemdetay'
    responses:
      '200':
        description: Success
    summary: POS İşlem Detayını Ekle
    tags:
    - Pos İşlem Detay
/api/Posislemdetay/addrange:
  post:
    description: Birden fazla POS işlem detayını topluca ekler. Bu işlem, çok sayıda
      POS işlem detayının aynı anda sisteme eklenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Posislemdetay'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Posislemdetay'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Posislemdetay'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Posislemdetay'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu POS İşlem Detayı Ekle
    tags:
    - Pos İşlem Detay
/api/Posislemdetay/delete:
  post:
    description: Belirtilen POS işlem detayını sistemden siler. Bu işlem, mevcut bir
      POS işlem detayının kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Posislemdetay'
        application/json:
          schema:
            $ref: '#/components/schemas/Posislemdetay'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Posislemdetay'
        text/json:
          schema:
            $ref: '#/components/schemas/Posislemdetay'
    responses:
      '200':
        description: Success
    summary: POS İşlem Detayı Sil
    tags:
    - Pos İşlem Detay
/api/Posislemdetay/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip POS işlem detayını sistemden siler. Bu işlem,
      belirli bir POS işlem detayının kaldırılmasını sağlar.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile POS İşlem Detayı Sil
    tags:
    - Pos İşlem Detay
/api/Posislemdetay/deleterange:
  post:
    description: Belirtilen aralıkta bulunan POS işlem detaylarını topluca siler.
      Bu işlem, birden fazla POS işlem detayının aynı anda kaldırılmasını sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Posislemdetay'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Posislemdetay'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Posislemdetay'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Posislemdetay'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu POS İşlem Detayı Sil
    tags:
    - Pos İşlem Detay
/api/Posislemdetay/getall:
  post:
    description: Sistemdeki POS işlem detaylarını belirli filtreler kullanarak listeler.
      Bu işlem, POS işlem detaylarının filtreleme kriterlerine göre görüntülenmesini
      sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/PosislemdetayFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/PosislemdetayFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/PosislemdetayFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/PosislemdetayFilterHelper'
    responses:
      '200':
        description: Success
    summary: POS İşlem Detaylarını Listele
    tags:
    - Pos İşlem Detay
/api/Posislemdetay/getbyid:
  get:
    description: Belirtilen ID'ye sahip POS işlem detayını getirir. Bu işlem, belirli
      bir POS işlem detayının detaylarını görüntülemenizi sağlar.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile POS İşlem Detayı Getir
    tags:
    - Pos İşlem Detay
/api/Posislemdetay/update:
  put:
    description: Belirtilen POS işlem detayını günceller. Bu işlem, mevcut bir POS
      işlem detayının bilgilerini değiştirmenizi sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Posislemdetay'
        application/json:
          schema:
            $ref: '#/components/schemas/Posislemdetay'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Posislemdetay'
        text/json:
          schema:
            $ref: '#/components/schemas/Posislemdetay'
    responses:
      '200':
        description: Success
    summary: POS İşlem Detayı Güncelle
    tags:
    - Pos İşlem Detay
/api/Posislemdetay/updaterange:
  put:
    description: Birden fazla POS işlem detayını topluca günceller. Bu işlem, çok
      sayıda POS işlem detayının aynı anda güncellenmesini sağlar.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Posislemdetay'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Posislemdetay'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Posislemdetay'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Posislemdetay'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu POS İşlem Detayı Güncelle
    tags:
    - Pos İşlem Detay
/api/Posmakinebilgileri/add:
  post:
    description: Sisteme yeni bir POS makine bilgisi ekler. Bu işlem, bir POS makinesinin
      detay bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Posmakinebilgileri'
        application/json:
          schema:
            $ref: '#/components/schemas/Posmakinebilgileri'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Posmakinebilgileri'
        text/json:
          schema:
            $ref: '#/components/schemas/Posmakinebilgileri'
    responses:
      '200':
        description: Success
    summary: POS Makine Bilgilerini Ekle
    tags:
    - Pos Makine Bilgileri
/api/Posmakinebilgileri/addrange:
  post:
    description: Birden fazla POS makine bilgisini topluca ekler. Bu işlem, çok sayıda
      POS makine bilgisinin aynı anda sisteme eklenmesini sağlar ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Posmakinebilgileri'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Posmakinebilgileri'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Posmakinebilgileri'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Posmakinebilgileri'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu POS Makine Bilgisi Ekle
    tags:
    - Pos Makine Bilgileri
/api/Posmakinebilgileri/delete:
  post:
    description: Belirtilen POS makine bilgisini sistemden siler. Bu işlem, mevcut
      bir POS makine bilgisinin kaldırılmasını sağlar ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Posmakinebilgileri'
        application/json:
          schema:
            $ref: '#/components/schemas/Posmakinebilgileri'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Posmakinebilgileri'
        text/json:
          schema:
            $ref: '#/components/schemas/Posmakinebilgileri'
    responses:
      '200':
        description: Success
    summary: POS Makine Bilgisi Sil
    tags:
    - Pos Makine Bilgileri
/api/Posmakinebilgileri/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip POS makine bilgisini sistemden siler. Bu işlem,
      belirli bir POS makine bilgisinin kaldırılmasını sağlar ve işlemin başarılı
      olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile POS Makine Bilgisi Sil
    tags:
    - Pos Makine Bilgileri
/api/Posmakinebilgileri/deleterange:
  post:
    description: Belirtilen aralıkta bulunan POS makine bilgilerini topluca siler.
      Bu işlem, birden fazla POS makine bilgisinin aynı anda kaldırılmasını sağlar
      ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Posmakinebilgileri'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Posmakinebilgileri'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Posmakinebilgileri'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Posmakinebilgileri'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu POS Makine Bilgisi Sil
    tags:
    - Pos Makine Bilgileri
/api/Posmakinebilgileri/getall:
  post:
    description: Sistemdeki POS makine bilgilerini belirli filtreler kullanarak listeler.
      Bu işlem, POS makine bilgilerinin filtreleme kriterlerine göre görüntülenmesini
      sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/PosmakinebilgileriFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/PosmakinebilgileriFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/PosmakinebilgileriFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/PosmakinebilgileriFilterHelper'
    responses:
      '200':
        description: Success
    summary: POS Makine Bilgilerini Listele
    tags:
    - Pos Makine Bilgileri
/api/Posmakinebilgileri/getbyid:
  get:
    description: Belirtilen ID'ye sahip POS makine bilgisini getirir. Bu işlem, belirli
      bir POS makine bilgisinin detaylarını görüntülemenizi sağlar ve işlemin başarılı
      olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile POS Makine Bilgisi Getir
    tags:
    - Pos Makine Bilgileri
/api/Posmakinebilgileri/update:
  put:
    description: Belirtilen POS makine bilgisini günceller. Bu işlem, mevcut bir POS
      makine bilgisinin bilgilerini değiştirmenizi sağlar ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Posmakinebilgileri'
        application/json:
          schema:
            $ref: '#/components/schemas/Posmakinebilgileri'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Posmakinebilgileri'
        text/json:
          schema:
            $ref: '#/components/schemas/Posmakinebilgileri'
    responses:
      '200':
        description: Success
    summary: POS Makine Bilgisi Güncelle
    tags:
    - Pos Makine Bilgileri
/api/Posmakinebilgileri/updaterange:
  put:
    description: Birden fazla POS makine bilgisini topluca günceller. Bu işlem, çok
      sayıda POS makine bilgisinin aynı anda güncellenmesini sağlar ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Posmakinebilgileri'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Posmakinebilgileri'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Posmakinebilgileri'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Posmakinebilgileri'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu POS Makine Bilgisi Güncelle
    tags:
    - Pos Makine Bilgileri
/api/Raporlar/add:
  post:
    description: Sisteme yeni bir rapor ekler. Bu işlem, belirtilen rapor bilgilerini
      sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Raporlar'
        application/json:
          schema:
            $ref: '#/components/schemas/Raporlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Raporlar'
        text/json:
          schema:
            $ref: '#/components/schemas/Raporlar'
    responses:
      '200':
        description: Success
    summary: Rapor Ekle
    tags:
    - Raporlar
/api/Raporlar/addrange:
  post:
    description: Birden fazla raporu topluca ekler. Bu işlem, çok sayıda rapor bilgisinin
      aynı anda sisteme eklenmesini sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Raporlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Raporlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Raporlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Raporlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Rapor Ekle
    tags:
    - Raporlar
/api/Raporlar/delete:
  post:
    description: Belirtilen raporu sistemden siler. Bu işlem, mevcut bir rapor bilgisinin
      kaldırılmasını sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Raporlar'
        application/json:
          schema:
            $ref: '#/components/schemas/Raporlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Raporlar'
        text/json:
          schema:
            $ref: '#/components/schemas/Raporlar'
    responses:
      '200':
        description: Success
    summary: Rapor Sil
    tags:
    - Raporlar
/api/Raporlar/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip raporu sistemden siler. Bu işlem, belirli
      bir rapor bilgisinin kaldırılmasını sağlar ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Rapor Sil
    tags:
    - Raporlar
/api/Raporlar/deleterange:
  post:
    description: Belirtilen aralıkta bulunan raporları topluca siler. Bu işlem, birden
      fazla rapor bilgisinin aynı anda kaldırılmasını sağlar ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Raporlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Raporlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Raporlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Raporlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Rapor Sil
    tags:
    - Raporlar
/api/Raporlar/getall:
  post:
    description: Sistemdeki raporları belirli filtreler kullanarak listeler. Bu işlem,
      raporların filtreleme kriterlerine göre görüntülenmesini sağlar ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/RaporlarFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/RaporlarFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/RaporlarFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/RaporlarFilterHelper'
    responses:
      '200':
        description: Success
    summary: Raporları Listele
    tags:
    - Raporlar
/api/Raporlar/getbyid:
  get:
    description: Belirtilen ID'ye sahip raporu getirir. Bu işlem, belirli bir rapor
      bilgisinin detaylarını görüntülemenizi sağlar ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Rapor Getir
    tags:
    - Raporlar
/api/Raporlar/update:
  put:
    description: Belirtilen rapor bilgisini günceller. Bu işlem, mevcut bir rapor
      bilgisinin bilgilerini değiştirmenizi sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Raporlar'
        application/json:
          schema:
            $ref: '#/components/schemas/Raporlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Raporlar'
        text/json:
          schema:
            $ref: '#/components/schemas/Raporlar'
    responses:
      '200':
        description: Success
    summary: Rapor Güncelle
    tags:
    - Raporlar
/api/Raporlar/updaterange:
  put:
    description: Birden fazla raporu topluca günceller. Bu işlem, çok sayıda rapor
      bilgisinin aynı anda güncellenmesini sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Raporlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Raporlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Raporlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Raporlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Rapor Güncelle
    tags:
    - Raporlar
/api/Sanalsantralayar/add:
  post:
    description: Sisteme yeni bir sanal santral ayar bilgisi ekler. Bu işlem, belirtilen
      sanal santral ayar bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Sanalsantralayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Sanalsantralayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Sanalsantralayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Sanalsantralayar'
    responses:
      '200':
        description: Success
    summary: Sanal Santral Ayar Ekle
    tags:
    - Sanal Santral Ayar İşlemleri
/api/Sanalsantralayar/addrange:
  post:
    description: Birden fazla sanal santral ayar bilgisini topluca ekler. Bu işlem,
      çok sayıda sanal santral ayar bilgisinin aynı anda sisteme eklenmesini sağlar
      ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Sanalsantralayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Sanalsantralayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Sanalsantralayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Sanalsantralayar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Sanal Santral Ayar Ekle
    tags:
    - Sanal Santral Ayar İşlemleri
/api/Sanalsantralayar/delete:
  post:
    description: Belirtilen sanal santral ayar bilgisini sistemden siler. Bu işlem,
      mevcut bir sanal santral ayar bilgisinin kaldırılmasını sağlar ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Sanalsantralayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Sanalsantralayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Sanalsantralayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Sanalsantralayar'
    responses:
      '200':
        description: Success
    summary: Sanal Santral Ayar Sil
    tags:
    - Sanal Santral Ayar İşlemleri
/api/Sanalsantralayar/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip sanal santral ayar bilgisini sistemden siler.
      Bu işlem, belirli bir sanal santral ayar bilgisinin kaldırılmasını sağlar ve
      işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Sanal Santral Ayar Sil
    tags:
    - Sanal Santral Ayar İşlemleri
/api/Sanalsantralayar/deleterange:
  post:
    description: Belirtilen aralıkta bulunan sanal santral ayar bilgilerini topluca
      siler. Bu işlem, birden fazla sanal santral ayar bilgisinin aynı anda kaldırılmasını
      sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Sanalsantralayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Sanalsantralayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Sanalsantralayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Sanalsantralayar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Sanal Santral Ayar Sil
    tags:
    - Sanal Santral Ayar İşlemleri
/api/Sanalsantralayar/getall:
  post:
    description: Sistemdeki sanal santral ayar bilgilerini belirli filtreler kullanarak
      listeler. Bu işlem, sanal santral ayarlarının filtreleme kriterlerine göre görüntülenmesini
      sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SanalsantralayarFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/SanalsantralayarFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SanalsantralayarFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/SanalsantralayarFilterHelper'
    responses:
      '200':
        description: Success
    summary: Sanal Santral Ayarlarını Listele
    tags:
    - Sanal Santral Ayar İşlemleri
/api/Sanalsantralayar/getbyid:
  get:
    description: Belirtilen ID'ye sahip sanal santral ayar bilgisini getirir. Bu işlem,
      belirli bir sanal santral ayar bilgisinin detaylarını görüntülemenizi sağlar
      ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Sanal Santral Ayar Getir
    tags:
    - Sanal Santral Ayar İşlemleri
/api/Sanalsantralayar/update:
  put:
    description: Belirtilen sanal santral ayar bilgisini günceller. Bu işlem, mevcut
      bir sanal santral ayar bilgisinin bilgilerini değiştirmenizi sağlar ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Sanalsantralayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Sanalsantralayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Sanalsantralayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Sanalsantralayar'
    responses:
      '200':
        description: Success
    summary: Sanal Santral Ayar Güncelle
    tags:
    - Sanal Santral Ayar İşlemleri
/api/Sanalsantralayar/updaterange:
  put:
    description: Birden fazla sanal santral ayar bilgisini topluca günceller. Bu işlem,
      çok sayıda sanal santral ayar bilgisinin aynı anda güncellenmesini sağlar ve
      işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Sanalsantralayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Sanalsantralayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Sanalsantralayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Sanalsantralayar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Sanal Santral Ayar Güncelle
    tags:
    - Sanal Santral Ayar İşlemleri
/api/Sayim/add:
  post:
    description: Sisteme yeni bir sayım bilgisi ekler. Bu işlem, belirtilen sayım
      bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Sayim'
        application/json:
          schema:
            $ref: '#/components/schemas/Sayim'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Sayim'
        text/json:
          schema:
            $ref: '#/components/schemas/Sayim'
    responses:
      '200':
        description: Success
    summary: Sayım Ekle
    tags:
    - Sayım
/api/Sayim/addrange:
  post:
    description: Birden fazla sayım bilgisini topluca ekler. Bu işlem, çok sayıda
      sayım bilgisinin aynı anda sisteme eklenmesini sağlar ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Sayim'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Sayim'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Sayim'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Sayim'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Sayım Ekle
    tags:
    - Sayım
/api/Sayim/delete:
  post:
    description: Belirtilen sayım bilgisini sistemden siler. Bu işlem, mevcut bir
      sayım bilgisinin kaldırılmasını sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Sayim'
        application/json:
          schema:
            $ref: '#/components/schemas/Sayim'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Sayim'
        text/json:
          schema:
            $ref: '#/components/schemas/Sayim'
    responses:
      '200':
        description: Success
    summary: Sayım Sil
    tags:
    - Sayım
/api/Sayim/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip sayım bilgisini sistemden siler. Bu işlem,
      belirli bir sayım bilgisinin kaldırılmasını sağlar ve işlemin başarılı olduğunu
      belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Sayım Sil
    tags:
    - Sayım
/api/Sayim/deleterange:
  post:
    description: Belirtilen aralıkta bulunan sayım bilgilerini topluca siler. Bu işlem,
      birden fazla sayım bilgisinin aynı anda kaldırılmasını sağlar ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Sayim'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Sayim'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Sayim'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Sayim'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Sayım Sil
    tags:
    - Sayım
/api/Sayim/getall:
  post:
    description: Sistemdeki sayım bilgilerini belirli filtreler kullanarak listeler.
      Bu işlem, sayım verilerinin filtreleme kriterlerine göre görüntülenmesini sağlar
      ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SayimFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/SayimFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SayimFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/SayimFilterHelper'
    responses:
      '200':
        description: Success
    summary: Sayım Bilgilerini Listele
    tags:
    - Sayım
/api/Sayim/getbyid:
  get:
    description: Belirtilen ID'ye sahip sayım bilgisini getirir. Bu işlem, belirli
      bir sayım bilgisinin detaylarını görüntülemenizi sağlar ve işlemin başarılı
      olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Sayım Getir
    tags:
    - Sayım
/api/Sayim/update:
  put:
    description: Belirtilen sayım bilgisini günceller. Bu işlem, mevcut bir sayım
      bilgisinin bilgilerini değiştirmenizi sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Sayim'
        application/json:
          schema:
            $ref: '#/components/schemas/Sayim'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Sayim'
        text/json:
          schema:
            $ref: '#/components/schemas/Sayim'
    responses:
      '200':
        description: Success
    summary: Sayım Güncelle
    tags:
    - Sayım
/api/Sayim/updaterange:
  put:
    description: Birden fazla sayım bilgisini topluca günceller. Bu işlem, çok sayıda
      sayım bilgisinin aynı anda güncellenmesini sağlar ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Sayim'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Sayim'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Sayim'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Sayim'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Sayım Güncelle
    tags:
    - Sayım
/api/Sayimtemple/add:
  post:
    description: Sisteme yeni bir "Sayım Temple" bilgisi ekler. Bu işlem, belirtilen
      bilgileri sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Sayimtemple'
        application/json:
          schema:
            $ref: '#/components/schemas/Sayimtemple'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Sayimtemple'
        text/json:
          schema:
            $ref: '#/components/schemas/Sayimtemple'
    responses:
      '200':
        description: Success
    summary: Sayım Temple Ekle
    tags:
    - Sayım Temple
/api/Sayimtemple/addrange:
  post:
    description: Birden fazla "Sayım Temple" bilgisini topluca ekler. Bu işlem, çok
      sayıda bilgi girişini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Sayimtemple'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Sayimtemple'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Sayimtemple'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Sayimtemple'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Sayım Temple Ekle
    tags:
    - Sayım Temple
/api/Sayimtemple/delete:
  post:
    description: Belirtilen "Sayım Temple" bilgisini sistemden siler. Bu işlem, mevcut
      bilgiyi kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Sayimtemple'
        application/json:
          schema:
            $ref: '#/components/schemas/Sayimtemple'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Sayimtemple'
        text/json:
          schema:
            $ref: '#/components/schemas/Sayimtemple'
    responses:
      '200':
        description: Success
    summary: Sayım Temple Sil
    tags:
    - Sayım Temple
/api/Sayimtemple/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip "Sayım Temple" bilgisini sistemden siler.
      Bu işlem, belirli bir bilgiyi kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Sayım Temple Sil
    tags:
    - Sayım Temple
/api/Sayimtemple/deleterange:
  post:
    description: Belirtilen aralıkta bulunan "Sayım Temple" bilgilerini topluca siler.
      Bu işlem, birden fazla bilgiyi aynı anda kaldırır ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Sayimtemple'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Sayimtemple'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Sayimtemple'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Sayimtemple'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Sayım Temple Sil
    tags:
    - Sayım Temple
/api/Sayimtemple/getall:
  post:
    description: Sistemdeki "Sayım Temple" bilgilerini belirli filtreler kullanarak
      listeler. Bu işlem, bilgilerin filtreleme kriterlerine göre görüntülenmesini
      sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SayimtempleFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/SayimtempleFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SayimtempleFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/SayimtempleFilterHelper'
    responses:
      '200':
        description: Success
    summary: Sayım Temple Bilgilerini Listele
    tags:
    - Sayım Temple
/api/Sayimtemple/getbyid:
  get:
    description: Belirtilen ID'ye sahip "Sayım Temple" bilgisini getirir. Bu işlem,
      belirli bir bilginin detaylarını görüntülemenizi sağlar ve işlemin başarılı
      olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Sayım Temple Getir
    tags:
    - Sayım Temple
/api/Sayimtemple/update:
  put:
    description: Belirtilen "Sayım Temple" bilgisini günceller. Bu işlem, mevcut bir
      bilgiyi değiştirmenizi sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Sayimtemple'
        application/json:
          schema:
            $ref: '#/components/schemas/Sayimtemple'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Sayimtemple'
        text/json:
          schema:
            $ref: '#/components/schemas/Sayimtemple'
    responses:
      '200':
        description: Success
    summary: Sayım Temple Güncelle
    tags:
    - Sayım Temple
/api/Sayimtemple/updaterange:
  put:
    description: Birden fazla "Sayım Temple" bilgisini topluca günceller. Bu işlem,
      çok sayıda bilginin aynı anda güncellenmesini sağlar ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Sayimtemple'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Sayimtemple'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Sayimtemple'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Sayimtemple'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Sayım Temple Güncelle
    tags:
    - Sayım Temple
/api/SevkBilgileri/add:
  post:
    description: Sisteme yeni bir "Sevk Bilgileri" kaydı ekler. Bu işlem, belirtilen
      sevk bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SevkBilgileri'
        application/json:
          schema:
            $ref: '#/components/schemas/SevkBilgileri'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SevkBilgileri'
        text/json:
          schema:
            $ref: '#/components/schemas/SevkBilgileri'
    responses:
      '200':
        description: Success
    summary: Sevk Bilgileri Ekle
    tags:
    - Sevk Bilgileri
/api/SevkBilgileri/addrange:
  post:
    description: Birden fazla "Sevk Bilgileri" kaydını topluca ekler. Bu işlem, çok
      sayıda sevk bilgisi girişini aynı anda sisteme ekler ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/SevkBilgileri'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/SevkBilgileri'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/SevkBilgileri'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/SevkBilgileri'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Sevk Bilgileri Ekle
    tags:
    - Sevk Bilgileri
/api/SevkBilgileri/delete:
  post:
    description: Belirtilen "Sevk Bilgileri" kaydını sistemden siler. Bu işlem, mevcut
      bir sevk bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SevkBilgileri'
        application/json:
          schema:
            $ref: '#/components/schemas/SevkBilgileri'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SevkBilgileri'
        text/json:
          schema:
            $ref: '#/components/schemas/SevkBilgileri'
    responses:
      '200':
        description: Success
    summary: Sevk Bilgileri Sil
    tags:
    - Sevk Bilgileri
/api/SevkBilgileri/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip "Sevk Bilgileri" kaydını sistemden siler.
      Bu işlem, belirli bir sevk bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Sevk Bilgileri Sil
    tags:
    - Sevk Bilgileri
/api/SevkBilgileri/deleterange:
  post:
    description: Belirtilen aralıkta bulunan "Sevk Bilgileri" kayıtlarını topluca
      siler. Bu işlem, birden fazla sevk bilgisini aynı anda kaldırır ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/SevkBilgileri'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/SevkBilgileri'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/SevkBilgileri'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/SevkBilgileri'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Sevk Bilgileri Sil
    tags:
    - Sevk Bilgileri
/api/SevkBilgileri/getall:
  post:
    description: Sistemdeki "Sevk Bilgileri" kayıtlarını belirli filtreler kullanarak
      listeler. Bu işlem, bilgilerin filtreleme kriterlerine göre görüntülenmesini
      sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SevkBilgileriFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/SevkBilgileriFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SevkBilgileriFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/SevkBilgileriFilterHelper'
    responses:
      '200':
        description: Success
    summary: Sevk Bilgileri Listele
    tags:
    - Sevk Bilgileri
/api/SevkBilgileri/getbyid:
  get:
    description: Belirtilen ID'ye sahip "Sevk Bilgileri" kaydını getirir. Bu işlem,
      belirli bir sevk bilgisinin detaylarını görüntülemenizi sağlar ve işlemin başarılı
      olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Sevk Bilgileri Getir
    tags:
    - Sevk Bilgileri
/api/SevkBilgileri/update:
  put:
    description: Belirtilen "Sevk Bilgileri" kaydını günceller. Bu işlem, mevcut bir
      sevk bilgisini değiştirmenizi sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SevkBilgileri'
        application/json:
          schema:
            $ref: '#/components/schemas/SevkBilgileri'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SevkBilgileri'
        text/json:
          schema:
            $ref: '#/components/schemas/SevkBilgileri'
    responses:
      '200':
        description: Success
    summary: Sevk Bilgileri Güncelle
    tags:
    - Sevk Bilgileri
/api/SevkBilgileri/updaterange:
  put:
    description: Birden fazla "Sevk Bilgileri" kaydını topluca günceller. Bu işlem,
      çok sayıda sevk bilgisinin aynı anda güncellenmesini sağlar ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/SevkBilgileri'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/SevkBilgileri'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/SevkBilgileri'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/SevkBilgileri'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Sevk Bilgileri Güncelle
    tags:
    - Sevk Bilgileri
/api/Smsayar/add:
  post:
    description: Sisteme yeni bir "Smsayar" kaydı ekler. Bu işlem, belirtilen SMS
      ayarlarını sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Smsayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Smsayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Smsayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Smsayar'
    responses:
      '200':
        description: Success
    summary: Smsayar Ekle
    tags:
    - Smsayar
/api/Smsayar/addrange:
  post:
    description: Birden fazla "Smsayar" kaydını topluca ekler. Bu işlem, çok sayıda
      SMS ayarını aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Smsayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Smsayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Smsayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Smsayar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Smsayar Ekle
    tags:
    - Smsayar
/api/Smsayar/delete:
  post:
    description: Belirtilen "Smsayar" kaydını sistemden siler. Bu işlem, mevcut bir
      SMS ayarını kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Smsayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Smsayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Smsayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Smsayar'
    responses:
      '200':
        description: Success
    summary: Smsayar Sil
    tags:
    - Smsayar
/api/Smsayar/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip "Smsayar" kaydını sistemden siler. Bu işlem,
      belirli bir SMS ayarını kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Smsayar Sil
    tags:
    - Smsayar
/api/Smsayar/deleterange:
  post:
    description: Belirtilen aralıkta bulunan "Smsayar" kayıtlarını topluca siler.
      Bu işlem, birden fazla SMS ayarını aynı anda kaldırır ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Smsayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Smsayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Smsayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Smsayar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Smsayar Sil
    tags:
    - Smsayar
/api/Smsayar/getall:
  post:
    description: Sistemdeki "Smsayar" kayıtlarını belirli filtreler kullanarak listeler.
      Bu işlem, SMS ayarlarının filtreleme kriterlerine göre görüntülenmesini sağlar
      ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SmsayarFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/SmsayarFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SmsayarFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/SmsayarFilterHelper'
    responses:
      '200':
        description: Success
    summary: Smsayar Listele
    tags:
    - Smsayar
/api/Smsayar/getbyid:
  get:
    description: Belirtilen ID'ye sahip "Smsayar" kaydını getirir. Bu işlem, belirli
      bir SMS ayarının detaylarını görüntülemenizi sağlar ve işlemin başarılı olduğunu
      belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Smsayar Getir
    tags:
    - Smsayar
/api/Smsayar/update:
  put:
    description: Belirtilen "Smsayar" kaydını günceller. Bu işlem, mevcut bir SMS
      ayarını değiştirmenizi sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Smsayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Smsayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Smsayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Smsayar'
    responses:
      '200':
        description: Success
    summary: Smsayar Güncelle
    tags:
    - Smsayar
/api/Smsayar/updaterange:
  put:
    description: Birden fazla "Smsayar" kaydını topluca günceller. Bu işlem, çok sayıda
      SMS ayarının aynı anda güncellenmesini sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Smsayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Smsayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Smsayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Smsayar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Smsayar Güncelle
    tags:
    - Smsayar
/api/SoforBilgileri/add:
  post:
    description: Sisteme yeni bir "Şoför Bilgileri" kaydı ekler. Bu işlem, belirtilen
      şoför bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SoforBilgileri'
        application/json:
          schema:
            $ref: '#/components/schemas/SoforBilgileri'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SoforBilgileri'
        text/json:
          schema:
            $ref: '#/components/schemas/SoforBilgileri'
    responses:
      '200':
        description: Success
    summary: Şoför Bilgileri Ekle
    tags:
    - Şoför Bilgileri
/api/SoforBilgileri/addrange:
  post:
    description: Birden fazla "Şoför Bilgileri" kaydını topluca ekler. Bu işlem, çok
      sayıda şoför bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/SoforBilgileri'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/SoforBilgileri'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/SoforBilgileri'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/SoforBilgileri'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Şoför Bilgileri Ekle
    tags:
    - Şoför Bilgileri
/api/SoforBilgileri/delete:
  post:
    description: Belirtilen "Şoför Bilgileri" kaydını sistemden siler. Bu işlem, mevcut
      bir şoför bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SoforBilgileri'
        application/json:
          schema:
            $ref: '#/components/schemas/SoforBilgileri'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SoforBilgileri'
        text/json:
          schema:
            $ref: '#/components/schemas/SoforBilgileri'
    responses:
      '200':
        description: Success
    summary: Şoför Bilgileri Sil
    tags:
    - Şoför Bilgileri
/api/SoforBilgileri/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip "Şoför Bilgileri" kaydını sistemden siler.
      Bu işlem, belirli bir şoför bilgisini kaldırır ve işlemin başarılı olduğunu
      belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Şoför Bilgileri Sil
    tags:
    - Şoför Bilgileri
/api/SoforBilgileri/deleterange:
  post:
    description: Belirtilen aralıkta bulunan "Şoför Bilgileri" kayıtlarını topluca
      siler. Bu işlem, birden fazla şoför bilgisini aynı anda kaldırır ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/SoforBilgileri'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/SoforBilgileri'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/SoforBilgileri'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/SoforBilgileri'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Şoför Bilgileri Sil
    tags:
    - Şoför Bilgileri
/api/SoforBilgileri/getall:
  post:
    description: Sistemdeki "Şoför Bilgileri" kayıtlarını belirli filtreler kullanarak
      listeler. Bu işlem, şoför bilgilerini filtreleme kriterlerine göre görüntülemenizi
      sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SoforBilgileriFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/SoforBilgileriFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SoforBilgileriFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/SoforBilgileriFilterHelper'
    responses:
      '200':
        description: Success
    summary: Şoför Bilgileri Listele
    tags:
    - Şoför Bilgileri
/api/SoforBilgileri/getbyid:
  get:
    description: Belirtilen ID'ye sahip "Şoför Bilgileri" kaydını getirir. Bu işlem,
      belirli bir şoför bilgisinin detaylarını görüntülemenizi sağlar ve işlemin başarılı
      olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Şoför Bilgileri Getir
    tags:
    - Şoför Bilgileri
/api/SoforBilgileri/update:
  put:
    description: Belirtilen "Şoför Bilgileri" kaydını günceller. Bu işlem, mevcut
      bir şoför bilgisini değiştirmenizi sağlar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SoforBilgileri'
        application/json:
          schema:
            $ref: '#/components/schemas/SoforBilgileri'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SoforBilgileri'
        text/json:
          schema:
            $ref: '#/components/schemas/SoforBilgileri'
    responses:
      '200':
        description: Success
    summary: Şoför Bilgileri Güncelle
    tags:
    - Şoför Bilgileri
/api/SoforBilgileri/updaterange:
  put:
    description: Birden fazla "Şoför Bilgileri" kaydını topluca günceller. Bu işlem,
      çok sayıda şoför bilgisinin aynı anda güncellenmesini sağlar ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/SoforBilgileri'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/SoforBilgileri'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/SoforBilgileri'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/SoforBilgileri'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Şoför Bilgileri Güncelle
    tags:
    - Şoför Bilgileri
/api/Stok/ControlDelete:
  post:
    description: Belirtilen stok bilgilerine göre kontrol işlemi yapar ve gerekli
      durumlarda stok kayıtlarını sistemden siler. İşlem, belirtilen stok bilgilerine
      göre yapılır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stok'
        application/json:
          schema:
            $ref: '#/components/schemas/Stok'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stok'
        text/json:
          schema:
            $ref: '#/components/schemas/Stok'
    responses:
      '200':
        description: Success
    summary: Stok Kontrol Silme
    tags:
    - Stok İşlemleri
/api/Stok/ControlDeleteById:
  delete:
    description: Belirtilen ID'ye sahip stok kaydını sistemden siler. Bu işlem, belirli
      bir stok bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Silme
    tags:
    - Stok İşlemleri
/api/Stok/GetListWithBakiye:
  post:
    description: Belirtilen filtreler kullanılarak stokları ve bakiye bilgilerini
      listeler. Bu işlem, stokları mevcut bakiye bilgileri ile birlikte görüntüler
      ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
    responses:
      '200':
        description: Success
    summary: Stok ve Bakiye Listeleme
    tags:
    - Stok İşlemleri
/api/Stok/StokFiyatListesiReport:
  post:
    description: Belirtilen filtrelere göre stok fiyat listesini raporlar. Bu işlem,
      stok fiyat bilgilerini rapor formatında sunar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
    responses:
      '200':
        description: Success
    summary: Stok Fiyat Listesi Raporu
    tags:
    - Stok İşlemleri
/api/Stok/StokHareketeriRapor:
  post:
    description: Stok hareketlerini belirli filtrelere göre raporlar. Bu işlem, stok
      hareket bilgilerini rapor formatında sunar ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
    responses:
      '200':
        description: Success
    summary: Stok Hareket Raporu
    tags:
    - Stok İşlemleri
/api/Stok/StokTopluReport:
  post:
    description: Belirtilen filtreler kullanılarak tüm stoklar için toplu bir rapor
      oluşturur. Bu işlem, tüm stok bilgilerini topluca raporlar ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
    responses:
      '200':
        description: Success
    summary: Toplu Stok Raporu
    tags:
    - Stok İşlemleri
/api/Stok/add:
  post:
    description: Sisteme yeni bir stok kaydı ekler. Bu işlem, belirtilen stok bilgilerini
      sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stok'
        application/json:
          schema:
            $ref: '#/components/schemas/Stok'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stok'
        text/json:
          schema:
            $ref: '#/components/schemas/Stok'
    responses:
      '200':
        description: Success
    summary: Stok Ekleme
    tags:
    - Stok İşlemleri
/api/Stok/addrange:
  post:
    description: Birden fazla stok kaydını topluca ekler. Bu işlem, çok sayıda stok
      bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Stok'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Stok'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Stok'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Stok'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Ekleme
    tags:
    - Stok İşlemleri
/api/Stok/delete:
  post:
    description: Belirtilen stok kaydını sistemden siler. Bu işlem, mevcut bir stok
      bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stok'
        application/json:
          schema:
            $ref: '#/components/schemas/Stok'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stok'
        text/json:
          schema:
            $ref: '#/components/schemas/Stok'
    responses:
      '200':
        description: Success
    summary: Stok Silme
    tags:
    - Stok İşlemleri
/api/Stok/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip stok kaydını sistemden siler. Bu işlem, belirli
      bir stok bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Silme
    tags:
    - Stok İşlemleri
/api/Stok/deleterange:
  post:
    description: Belirtilen aralıkta bulunan stok kayıtlarını topluca siler. Bu işlem,
      birden fazla stok bilgisini aynı anda kaldırır ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Stok'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Stok'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Stok'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Stok'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Silme
    tags:
    - Stok İşlemleri
/api/Stok/getall:
  post:
    description: Sistemdeki tüm stok kayıtlarını getirir. Bu işlem, sistemdeki mevcut
      tüm stok bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Stokları Getir
    tags:
    - Stok İşlemleri
/api/Stok/getbyid:
  get:
    description: Belirtilen ID'ye sahip stok kaydını getirir. Bu işlem, belirli bir
      stok bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Getir
    tags:
    - Stok İşlemleri
/api/Stok/update:
  put:
    description: Mevcut stok kaydını günceller. Bu işlem, belirtilen stok bilgilerini
      günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stok'
        application/json:
          schema:
            $ref: '#/components/schemas/Stok'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stok'
        text/json:
          schema:
            $ref: '#/components/schemas/Stok'
    responses:
      '200':
        description: Success
    summary: Stok Güncelleme
    tags:
    - Stok İşlemleri
/api/Stok/updaterange:
  put:
    description: Birden fazla stok kaydını topluca günceller. Bu işlem, çok sayıda
      stok bilgisini aynı anda günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Stok'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Stok'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Stok'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Stok'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Güncelleme
    tags:
    - Stok İşlemleri
/api/StokBirim/add:
  post:
    description: Sisteme yeni bir stok birimi ekler. Bu işlem, belirtilen stok birimi
      bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokBirim'
        application/json:
          schema:
            $ref: '#/components/schemas/StokBirim'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokBirim'
        text/json:
          schema:
            $ref: '#/components/schemas/StokBirim'
    responses:
      '200':
        description: Success
    summary: Stok Birimi Ekleme
    tags:
    - Stok Birim İşlemleri
/api/StokBirim/addrange:
  post:
    description: Birden fazla stok birimini topluca ekler. Bu işlem, çok sayıda stok
      birimi bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokBirim'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokBirim'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokBirim'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokBirim'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Birimi Ekleme
    tags:
    - Stok Birim İşlemleri
/api/StokBirim/delete:
  post:
    description: Belirtilen stok birimini sistemden siler. Bu işlem, mevcut bir stok
      birimi bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokBirim'
        application/json:
          schema:
            $ref: '#/components/schemas/StokBirim'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokBirim'
        text/json:
          schema:
            $ref: '#/components/schemas/StokBirim'
    responses:
      '200':
        description: Success
    summary: Stok Birimi Silme
    tags:
    - Stok Birim İşlemleri
/api/StokBirim/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip stok birimini sistemden siler. Bu işlem, belirli
      bir stok birimi bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Birimi Silme
    tags:
    - Stok Birim İşlemleri
/api/StokBirim/deleterange:
  post:
    description: Belirtilen aralıkta bulunan stok birimlerini topluca siler. Bu işlem,
      birden fazla stok birimi bilgisini aynı anda kaldırır ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokBirim'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokBirim'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokBirim'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokBirim'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Birimi Silme
    tags:
    - Stok Birim İşlemleri
/api/StokBirim/getall:
  post:
    description: Sistemdeki tüm stok birimi kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm stok birimi bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokBirimFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokBirimFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokBirimFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokBirimFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Stok Birimlerini Getir
    tags:
    - Stok Birim İşlemleri
/api/StokBirim/getbyid:
  get:
    description: Belirtilen ID'ye sahip stok birimi kaydını getirir. Bu işlem, belirli
      bir stok birimi bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Birimi Getir
    tags:
    - Stok Birim İşlemleri
/api/StokBirim/update:
  put:
    description: Mevcut stok birimi kaydını günceller. Bu işlem, belirtilen stok birimi
      bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokBirim'
        application/json:
          schema:
            $ref: '#/components/schemas/StokBirim'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokBirim'
        text/json:
          schema:
            $ref: '#/components/schemas/StokBirim'
    responses:
      '200':
        description: Success
    summary: Stok Birimi Güncelleme
    tags:
    - Stok Birim İşlemleri
/api/StokBirim/updaterange:
  put:
    description: Birden fazla stok birimi kaydını topluca günceller. Bu işlem, çok
      sayıda stok birimi bilgisini aynı anda günceller ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokBirim'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokBirim'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokBirim'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokBirim'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Birimi Güncelleme
    tags:
    - Stok Birim İşlemleri
/api/StokDepo/add:
  post:
    description: Sisteme yeni bir stok deposu ekler. Bu işlem, belirtilen stok deposu
      bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokDepo'
        application/json:
          schema:
            $ref: '#/components/schemas/StokDepo'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokDepo'
        text/json:
          schema:
            $ref: '#/components/schemas/StokDepo'
    responses:
      '200':
        description: Success
    summary: Stok Deposu Ekleme
    tags:
    - Stok Depo İşlemleri
/api/StokDepo/addrange:
  post:
    description: Birden fazla stok deposunu topluca ekler. Bu işlem, çok sayıda stok
      deposu bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokDepo'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokDepo'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokDepo'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokDepo'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Deposu Ekleme
    tags:
    - Stok Depo İşlemleri
/api/StokDepo/delete:
  post:
    description: Belirtilen stok deposunu sistemden siler. Bu işlem, mevcut bir stok
      deposu bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokDepo'
        application/json:
          schema:
            $ref: '#/components/schemas/StokDepo'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokDepo'
        text/json:
          schema:
            $ref: '#/components/schemas/StokDepo'
    responses:
      '200':
        description: Success
    summary: Stok Deposu Silme
    tags:
    - Stok Depo İşlemleri
/api/StokDepo/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip stok deposunu sistemden siler. Bu işlem, belirli
      bir stok deposu bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Deposu Silme
    tags:
    - Stok Depo İşlemleri
/api/StokDepo/deleterange:
  post:
    description: Belirtilen aralıkta bulunan stok depolarını topluca siler. Bu işlem,
      birden fazla stok deposu bilgisini aynı anda kaldırır ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokDepo'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokDepo'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokDepo'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokDepo'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Deposu Silme
    tags:
    - Stok Depo İşlemleri
/api/StokDepo/getall:
  post:
    description: Sistemdeki tüm stok depo kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm stok depo bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokDepoFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokDepoFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokDepoFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokDepoFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Stok Depolarını Getir
    tags:
    - Stok Depo İşlemleri
/api/StokDepo/getbyid:
  get:
    description: Belirtilen ID'ye sahip stok depo kaydını getirir. Bu işlem, belirli
      bir stok depo bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Deposu Getir
    tags:
    - Stok Depo İşlemleri
/api/StokDepo/update:
  put:
    description: Mevcut stok depo kaydını günceller. Bu işlem, belirtilen stok depo
      bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokDepo'
        application/json:
          schema:
            $ref: '#/components/schemas/StokDepo'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokDepo'
        text/json:
          schema:
            $ref: '#/components/schemas/StokDepo'
    responses:
      '200':
        description: Success
    summary: Stok Deposu Güncelleme
    tags:
    - Stok Depo İşlemleri
/api/StokDepo/updaterange:
  put:
    description: Birden fazla stok depo kaydını topluca günceller. Bu işlem, çok sayıda
      stok depo bilgisini aynı anda günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokDepo'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokDepo'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokDepo'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokDepo'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Deposu Güncelleme
    tags:
    - Stok Depo İşlemleri
/api/StokEticaret/add:
  post:
    description: Sisteme yeni bir stok eticaret kaydı ekler. Bu işlem, belirtilen
      stok eticaret bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokEticaret'
        application/json:
          schema:
            $ref: '#/components/schemas/StokEticaret'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokEticaret'
        text/json:
          schema:
            $ref: '#/components/schemas/StokEticaret'
    responses:
      '200':
        description: Success
    summary: Stok Eticaret Ekleme
    tags:
    - Stok Eticaret İşlemleri
/api/StokEticaret/addrange:
  post:
    description: Birden fazla stok eticaret kaydını topluca ekler. Bu işlem, çok sayıda
      stok eticaret bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokEticaret'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokEticaret'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokEticaret'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokEticaret'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Eticaret Ekleme
    tags:
    - Stok Eticaret İşlemleri
/api/StokEticaret/delete:
  post:
    description: Belirtilen stok eticaret kaydını sistemden siler. Bu işlem, mevcut
      bir stok eticaret bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokEticaret'
        application/json:
          schema:
            $ref: '#/components/schemas/StokEticaret'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokEticaret'
        text/json:
          schema:
            $ref: '#/components/schemas/StokEticaret'
    responses:
      '200':
        description: Success
    summary: Stok Eticaret Silme
    tags:
    - Stok Eticaret İşlemleri
/api/StokEticaret/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip stok eticaret kaydını sistemden siler. Bu
      işlem, belirli bir stok eticaret bilgisini kaldırır ve işlemin başarılı olduğunu
      belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Eticaret Silme
    tags:
    - Stok Eticaret İşlemleri
/api/StokEticaret/deleterange:
  post:
    description: Belirtilen aralıkta bulunan stok eticaret kayıtlarını topluca siler.
      Bu işlem, birden fazla stok eticaret bilgisini aynı anda kaldırır ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokEticaret'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokEticaret'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokEticaret'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokEticaret'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Eticaret Silme
    tags:
    - Stok Eticaret İşlemleri
/api/StokEticaret/getall:
  post:
    description: Sistemdeki tüm stok eticaret kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm stok eticaret bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokEticaretFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokEticaretFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokEticaretFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokEticaretFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Stok Eticaret Kayıtlarını Getir
    tags:
    - Stok Eticaret İşlemleri
/api/StokEticaret/getbyid:
  get:
    description: Belirtilen ID'ye sahip stok eticaret kaydını getirir. Bu işlem, belirli
      bir stok eticaret bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Eticaret Getir
    tags:
    - Stok Eticaret İşlemleri
/api/StokEticaret/update:
  put:
    description: Mevcut stok eticaret kaydını günceller. Bu işlem, belirtilen stok
      eticaret bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokEticaret'
        application/json:
          schema:
            $ref: '#/components/schemas/StokEticaret'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokEticaret'
        text/json:
          schema:
            $ref: '#/components/schemas/StokEticaret'
    responses:
      '200':
        description: Success
    summary: Stok Eticaret Güncelleme
    tags:
    - Stok Eticaret İşlemleri
/api/StokEticaret/updaterange:
  put:
    description: Birden fazla stok eticaret kaydını topluca günceller. Bu işlem, çok
      sayıda stok eticaret bilgisini aynı anda günceller ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokEticaret'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokEticaret'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokEticaret'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokEticaret'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Eticaret Güncelleme
    tags:
    - Stok Eticaret İşlemleri
/api/StokGrup/add:
  post:
    description: Sisteme yeni bir stok grup kaydı ekler. Bu işlem, belirtilen stok
      grup bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokGrup'
        application/json:
          schema:
            $ref: '#/components/schemas/StokGrup'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokGrup'
        text/json:
          schema:
            $ref: '#/components/schemas/StokGrup'
    responses:
      '200':
        description: Success
    summary: Stok Grup Ekleme
    tags:
    - Stok Grup İşlemleri
/api/StokGrup/addrange:
  post:
    description: Birden fazla stok grup kaydını topluca ekler. Bu işlem, çok sayıda
      stok grup bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokGrup'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokGrup'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokGrup'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokGrup'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Grup Ekleme
    tags:
    - Stok Grup İşlemleri
/api/StokGrup/delete:
  post:
    description: Belirtilen stok grup kaydını sistemden siler. Bu işlem, mevcut bir
      stok grup bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokGrup'
        application/json:
          schema:
            $ref: '#/components/schemas/StokGrup'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokGrup'
        text/json:
          schema:
            $ref: '#/components/schemas/StokGrup'
    responses:
      '200':
        description: Success
    summary: Stok Grup Silme
    tags:
    - Stok Grup İşlemleri
/api/StokGrup/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip stok grup kaydını sistemden siler. Bu işlem,
      belirli bir stok grup bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Grup Silme
    tags:
    - Stok Grup İşlemleri
/api/StokGrup/deleterange:
  post:
    description: Belirtilen aralıkta bulunan stok grup kayıtlarını topluca siler.
      Bu işlem, birden fazla stok grup bilgisini aynı anda kaldırır ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokGrup'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokGrup'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokGrup'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokGrup'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Grup Silme
    tags:
    - Stok Grup İşlemleri
/api/StokGrup/getall:
  post:
    description: Sistemdeki tüm stok grup kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm stok grup bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokGrupFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokGrupFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokGrupFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokGrupFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Stok Grup Kayıtlarını Getir
    tags:
    - Stok Grup İşlemleri
/api/StokGrup/getbyid:
  get:
    description: Belirtilen ID'ye sahip stok grup kaydını getirir. Bu işlem, belirli
      bir stok grup bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Grup Getir
    tags:
    - Stok Grup İşlemleri
/api/StokGrup/update:
  put:
    description: Mevcut stok grup kaydını günceller. Bu işlem, belirtilen stok grup
      bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokGrup'
        application/json:
          schema:
            $ref: '#/components/schemas/StokGrup'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokGrup'
        text/json:
          schema:
            $ref: '#/components/schemas/StokGrup'
    responses:
      '200':
        description: Success
    summary: Stok Grup Güncelleme
    tags:
    - Stok Grup İşlemleri
/api/StokGrup/updaterange:
  put:
    description: Birden fazla stok grup kaydını topluca günceller. Bu işlem, çok sayıda
      stok grup bilgisini aynı anda günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokGrup'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokGrup'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokGrup'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokGrup'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Grup Güncelleme
    tags:
    - Stok Grup İşlemleri
/api/StokHammadde/add:
  post:
    description: Sisteme yeni bir stok hammadde kaydı ekler. Bu işlem, belirtilen
      stok hammadde bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokHammadde'
        application/json:
          schema:
            $ref: '#/components/schemas/StokHammadde'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokHammadde'
        text/json:
          schema:
            $ref: '#/components/schemas/StokHammadde'
    responses:
      '200':
        description: Success
    summary: Stok Hammadde Ekleme
    tags:
    - Stok Hammadde İşlemleri
/api/StokHammadde/addrange:
  post:
    description: Birden fazla stok hammadde kaydını topluca ekler. Bu işlem, çok sayıda
      stok hammadde bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokHammadde'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokHammadde'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokHammadde'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokHammadde'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Hammadde Ekleme
    tags:
    - Stok Hammadde İşlemleri
/api/StokHammadde/delete:
  post:
    description: Belirtilen stok hammadde kaydını sistemden siler. Bu işlem, mevcut
      bir stok hammadde bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokHammadde'
        application/json:
          schema:
            $ref: '#/components/schemas/StokHammadde'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokHammadde'
        text/json:
          schema:
            $ref: '#/components/schemas/StokHammadde'
    responses:
      '200':
        description: Success
    summary: Stok Hammadde Silme
    tags:
    - Stok Hammadde İşlemleri
/api/StokHammadde/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip stok hammadde kaydını sistemden siler. Bu
      işlem, belirli bir stok hammadde bilgisini kaldırır ve işlemin başarılı olduğunu
      belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Hammadde Silme
    tags:
    - Stok Hammadde İşlemleri
/api/StokHammadde/deleterange:
  post:
    description: Belirtilen aralıkta bulunan stok hammadde kayıtlarını topluca siler.
      Bu işlem, birden fazla stok hammadde bilgisini aynı anda kaldırır ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokHammadde'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokHammadde'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokHammadde'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokHammadde'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Hammadde Silme
    tags:
    - Stok Hammadde İşlemleri
/api/StokHammadde/getall:
  post:
    description: Sistemdeki tüm stok hammadde kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm stok hammadde bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokHammaddeFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokHammaddeFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokHammaddeFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokHammaddeFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Stok Hammadde Kayıtlarını Getir
    tags:
    - Stok Hammadde İşlemleri
/api/StokHammadde/getbyid:
  get:
    description: Belirtilen ID'ye sahip stok hammadde kaydını getirir. Bu işlem, belirli
      bir stok hammadde bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Hammadde Getir
    tags:
    - Stok Hammadde İşlemleri
/api/StokHammadde/update:
  put:
    description: Mevcut stok hammadde kaydını günceller. Bu işlem, belirtilen stok
      hammadde bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokHammadde'
        application/json:
          schema:
            $ref: '#/components/schemas/StokHammadde'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokHammadde'
        text/json:
          schema:
            $ref: '#/components/schemas/StokHammadde'
    responses:
      '200':
        description: Success
    summary: Stok Hammadde Güncelleme
    tags:
    - Stok Hammadde İşlemleri
/api/StokHammadde/updaterange:
  put:
    description: Birden fazla stok hammadde kaydını topluca günceller. Bu işlem, çok
      sayıda stok hammadde bilgisini aynı anda günceller ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokHammadde'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokHammadde'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokHammadde'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokHammadde'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Hammadde Güncelleme
    tags:
    - Stok Hammadde İşlemleri
/api/StokIsl/GetListWithDTO:
  post:
    description: Belirtilen filtre kriterlerine göre stok işlemleri listesini getirir.
      DTO (Data Transfer Object) kullanarak, işlem sonuçlarını özelleştirilmiş bir
      formatta döner.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokIslFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokIslFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokIslFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokIslFilterHelper'
    responses:
      '200':
        description: Success
    summary: Stok İşlem Listesi DTO ile Getir
    tags:
    - StokIsl
/api/StokIsl/add:
  post:
    description: Sisteme yeni bir stok işlemi kaydı ekler. Bu işlem, belirtilen stok
      işlem bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/StokIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/StokIsl'
    responses:
      '200':
        description: Success
    summary: Stok İşlemi Ekle
    tags:
    - StokIsl
/api/StokIsl/addrange:
  post:
    description: Birden fazla stok işlemi kaydını topluca ekler. Bu işlem, çok sayıda
      stok işlem bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok İşlemi Ekle
    tags:
    - StokIsl
/api/StokIsl/delete:
  post:
    description: Belirtilen stok işlemi kaydını sistemden siler. Bu işlem, mevcut
      bir stok işlem bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/StokIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/StokIsl'
    responses:
      '200':
        description: Success
    summary: Stok İşlemi Sil
    tags:
    - StokIsl
/api/StokIsl/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip stok işlemi kaydını sistemden siler. Bu işlem,
      belirli bir stok işlem bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok İşlemi Sil
    tags:
    - StokIsl
/api/StokIsl/deleterange:
  post:
    description: Belirtilen aralıkta bulunan stok işlemi kayıtlarını topluca siler.
      Bu işlem, birden fazla stok işlem bilgisini aynı anda kaldırır ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok İşlemi Sil
    tags:
    - StokIsl
/api/StokIsl/getall:
  post:
    description: Sistemdeki tüm stok işlemleri kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm stok işlemleri bilgilerini listeler ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokIslFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokIslFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokIslFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokIslFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Stok İşlemleri Kayıtlarını Getir
    tags:
    - StokIsl
/api/StokIsl/getbyid:
  get:
    description: Belirtilen ID'ye sahip stok işlemi kaydını getirir. Bu işlem, belirli
      bir stok işlem bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok İşlemi Getir
    tags:
    - StokIsl
/api/StokIsl/update:
  put:
    description: Mevcut stok işlemi kaydını günceller. Bu işlem, belirtilen stok işlem
      bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/StokIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/StokIsl'
    responses:
      '200':
        description: Success
    summary: Stok İşlemi Güncelle
    tags:
    - StokIsl
/api/StokIsl/updaterange:
  put:
    description: Birden fazla stok işlemi kaydını topluca günceller. Bu işlem, çok
      sayıda stok işlem bilgisini aynı anda günceller ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/StokIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/StokIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/StokIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/StokIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok İşlemi Güncelle
    tags:
    - StokIsl
/api/Stokfiyatlar/add:
  post:
    description: Sisteme yeni bir stok fiyatı kaydı ekler. Bu işlem, belirtilen stok
      fiyat bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stokfiyatlar'
        application/json:
          schema:
            $ref: '#/components/schemas/Stokfiyatlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stokfiyatlar'
        text/json:
          schema:
            $ref: '#/components/schemas/Stokfiyatlar'
    responses:
      '200':
        description: Success
    summary: Stok Fiyatı Ekle
    tags:
    - Stok Fiyatlar
/api/Stokfiyatlar/addrange:
  post:
    description: Birden fazla stok fiyatı kaydını topluca ekler. Bu işlem, çok sayıda
      stok fiyat bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Stokfiyatlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Stokfiyatlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Stokfiyatlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Stokfiyatlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Fiyatı Ekle
    tags:
    - Stok Fiyatlar
/api/Stokfiyatlar/delete:
  post:
    description: Belirtilen stok fiyatı kaydını sistemden siler. Bu işlem, mevcut
      bir stok fiyat bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stokfiyatlar'
        application/json:
          schema:
            $ref: '#/components/schemas/Stokfiyatlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stokfiyatlar'
        text/json:
          schema:
            $ref: '#/components/schemas/Stokfiyatlar'
    responses:
      '200':
        description: Success
    summary: Stok Fiyatı Sil
    tags:
    - Stok Fiyatlar
/api/Stokfiyatlar/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip stok fiyatı kaydını sistemden siler. Bu işlem,
      belirli bir stok fiyat bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Fiyatı Sil
    tags:
    - Stok Fiyatlar
/api/Stokfiyatlar/deleterange:
  post:
    description: Belirtilen aralıkta bulunan stok fiyatı kayıtlarını topluca siler.
      Bu işlem, birden fazla stok fiyat bilgisini aynı anda kaldırır ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Stokfiyatlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Stokfiyatlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Stokfiyatlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Stokfiyatlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Fiyatı Sil
    tags:
    - Stok Fiyatlar
/api/Stokfiyatlar/getall:
  post:
    description: Sistemdeki tüm stok fiyatı kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm stok fiyatı bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokfiyatlarFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokfiyatlarFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokfiyatlarFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokfiyatlarFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Stok Fiyatı Kayıtlarını Getir
    tags:
    - Stok Fiyatlar
/api/Stokfiyatlar/getbyid:
  get:
    description: Belirtilen ID'ye sahip stok fiyatı kaydını getirir. Bu işlem, belirli
      bir stok fiyat bilgilerini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Fiyatı Getir
    tags:
    - Stok Fiyatlar
/api/Stokfiyatlar/update:
  put:
    description: Mevcut stok fiyatı kaydını günceller. Bu işlem, belirtilen stok fiyat
      bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stokfiyatlar'
        application/json:
          schema:
            $ref: '#/components/schemas/Stokfiyatlar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stokfiyatlar'
        text/json:
          schema:
            $ref: '#/components/schemas/Stokfiyatlar'
    responses:
      '200':
        description: Success
    summary: Stok Fiyatı Güncelle
    tags:
    - Stok Fiyatlar
/api/Stokfiyatlar/updaterange:
  put:
    description: Birden fazla stok fiyatı kaydını topluca günceller. Bu işlem, çok
      sayıda stok fiyatı bilgisini aynı anda günceller ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Stokfiyatlar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Stokfiyatlar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Stokfiyatlar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Stokfiyatlar'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Fiyatı Güncelle
    tags:
    - Stok Fiyatlar
/api/Stoklot/add:
  post:
    description: Sisteme yeni bir stok lotu kaydı ekler. Bu işlem, belirtilen stok
      lotu bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stoklot'
        application/json:
          schema:
            $ref: '#/components/schemas/Stoklot'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stoklot'
        text/json:
          schema:
            $ref: '#/components/schemas/Stoklot'
    responses:
      '200':
        description: Success
    summary: Stok Lotu Ekle
    tags:
    - Stok Lot İşlemleri
/api/Stoklot/addrange:
  post:
    description: Birden fazla stok lotu kaydını topluca ekler. Bu işlem, çok sayıda
      stok lotu bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Stoklot'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Stoklot'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Stoklot'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Stoklot'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Lotu Ekle
    tags:
    - Stok Lot İşlemleri
/api/Stoklot/delete:
  post:
    description: Belirtilen stok lotu kaydını sistemden siler. Bu işlem, mevcut bir
      stok lotu bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stoklot'
        application/json:
          schema:
            $ref: '#/components/schemas/Stoklot'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stoklot'
        text/json:
          schema:
            $ref: '#/components/schemas/Stoklot'
    responses:
      '200':
        description: Success
    summary: Stok Lotunu Sil
    tags:
    - Stok Lot İşlemleri
/api/Stoklot/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip stok lotu kaydını sistemden siler. Bu işlem,
      belirli bir stok lotu bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Lotunu Sil
    tags:
    - Stok Lot İşlemleri
/api/Stoklot/deleterange:
  post:
    description: Belirtilen aralıkta bulunan stok lotu kayıtlarını topluca siler.
      Bu işlem, birden fazla stok lotu bilgisini aynı anda kaldırır ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Stoklot'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Stoklot'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Stoklot'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Stoklot'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Lotunu Sil
    tags:
    - Stok Lot İşlemleri
/api/Stoklot/getall:
  post:
    description: Sistemdeki tüm stok lotu kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm stok lotu bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StoklotFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StoklotFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StoklotFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StoklotFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Stok Lotu Kayıtlarını Getir
    tags:
    - Stok Lot İşlemleri
/api/Stoklot/getbyid:
  get:
    description: Belirtilen ID'ye sahip stok lotu kaydını getirir. Bu işlem, belirli
      bir stok lotu bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Lotunu Getir
    tags:
    - Stok Lot İşlemleri
/api/Stoklot/update:
  put:
    description: Mevcut stok lotu kaydını günceller. Bu işlem, belirtilen stok lotu
      bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stoklot'
        application/json:
          schema:
            $ref: '#/components/schemas/Stoklot'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stoklot'
        text/json:
          schema:
            $ref: '#/components/schemas/Stoklot'
    responses:
      '200':
        description: Success
    summary: Stok Lotunu Güncelle
    tags:
    - Stok Lot İşlemleri
/api/Stoklot/updaterange:
  put:
    description: Birden fazla stok lotu kaydını topluca günceller. Bu işlem, çok sayıda
      stok lotu bilgisini aynı anda günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Stoklot'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Stoklot'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Stoklot'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Stoklot'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Lotunu Güncelle
    tags:
    - Stok Lot İşlemleri
/api/Stokpaketgrup/add:
  post:
    description: Sisteme yeni bir stok paket grubu kaydı ekler. Bu işlem, belirtilen
      stok paket grubu bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stokpaketgrup'
        application/json:
          schema:
            $ref: '#/components/schemas/Stokpaketgrup'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stokpaketgrup'
        text/json:
          schema:
            $ref: '#/components/schemas/Stokpaketgrup'
    responses:
      '200':
        description: Success
    summary: Stok Paket Grubunu Ekle
    tags:
    - Stok Paket Grup İşlemleri
/api/Stokpaketgrup/addrange:
  post:
    description: Birden fazla stok paket grubu kaydını topluca ekler. Bu işlem, çok
      sayıda stok paket grubu bilgisini aynı anda sisteme ekler ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Stokpaketgrup'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Stokpaketgrup'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Stokpaketgrup'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Stokpaketgrup'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Paket Grubu Ekle
    tags:
    - Stok Paket Grup İşlemleri
/api/Stokpaketgrup/delete:
  post:
    description: Belirtilen stok paket grubu kaydını sistemden siler. Bu işlem, mevcut
      bir stok paket grubu bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stokpaketgrup'
        application/json:
          schema:
            $ref: '#/components/schemas/Stokpaketgrup'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stokpaketgrup'
        text/json:
          schema:
            $ref: '#/components/schemas/Stokpaketgrup'
    responses:
      '200':
        description: Success
    summary: Stok Paket Grubunu Sil
    tags:
    - Stok Paket Grup İşlemleri
/api/Stokpaketgrup/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip stok paket grubu kaydını sistemden siler.
      Bu işlem, belirli bir stok paket grubu bilgisini kaldırır ve işlemin başarılı
      olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Paket Grubunu Sil
    tags:
    - Stok Paket Grup İşlemleri
/api/Stokpaketgrup/deleterange:
  post:
    description: Belirtilen aralıkta bulunan stok paket grubu kayıtlarını topluca
      siler. Bu işlem, birden fazla stok paket grubu bilgisini aynı anda kaldırır
      ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Stokpaketgrup'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Stokpaketgrup'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Stokpaketgrup'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Stokpaketgrup'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Paket Grubunu Sil
    tags:
    - Stok Paket Grup İşlemleri
/api/Stokpaketgrup/getall:
  post:
    description: Sistemdeki tüm stok paket grubu kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm stok paket grubu bilgilerini listeler ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/StokpaketgrupFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/StokpaketgrupFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/StokpaketgrupFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/StokpaketgrupFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Stok Paket Grubu Kayıtlarını Getir
    tags:
    - Stok Paket Grup İşlemleri
/api/Stokpaketgrup/getbyid:
  get:
    description: Belirtilen ID'ye sahip stok paket grubu kaydını getirir. Bu işlem,
      belirli bir stok paket grubu bilgisini getirir ve işlemin başarılı olduğunu
      belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Stok Paket Grubunu Getir
    tags:
    - Stok Paket Grup İşlemleri
/api/Stokpaketgrup/update:
  put:
    description: Mevcut stok paket grubu kaydını günceller. Bu işlem, belirtilen stok
      paket grubu bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Stokpaketgrup'
        application/json:
          schema:
            $ref: '#/components/schemas/Stokpaketgrup'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Stokpaketgrup'
        text/json:
          schema:
            $ref: '#/components/schemas/Stokpaketgrup'
    responses:
      '200':
        description: Success
    summary: Stok Paket Grubunu Güncelle
    tags:
    - Stok Paket Grup İşlemleri
/api/Stokpaketgrup/updaterange:
  put:
    description: Birden fazla stok paket grubu kaydını topluca günceller. Bu işlem,
      çok sayıda stok paket grubu bilgisini aynı anda günceller ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Stokpaketgrup'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Stokpaketgrup'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Stokpaketgrup'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Stokpaketgrup'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Stok Paket Grubunu Güncelle
    tags:
    - Stok Paket Grup İşlemleri
/api/Subeler/add:
  post:
    description: Sisteme yeni bir şube kaydı ekler. Bu işlem, belirtilen şube bilgilerini
      sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Subeler'
        application/json:
          schema:
            $ref: '#/components/schemas/Subeler'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Subeler'
        text/json:
          schema:
            $ref: '#/components/schemas/Subeler'
    responses:
      '200':
        description: Success
    summary: Şube Ekle
    tags:
    - Şubeler
/api/Subeler/addrange:
  post:
    description: Birden fazla şube kaydını topluca ekler. Bu işlem, çok sayıda şube
      bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Subeler'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Subeler'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Subeler'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Subeler'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Şube Ekle
    tags:
    - Şubeler
/api/Subeler/delete:
  post:
    description: Belirtilen şube kaydını sistemden siler. Bu işlem, mevcut bir şube
      bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Subeler'
        application/json:
          schema:
            $ref: '#/components/schemas/Subeler'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Subeler'
        text/json:
          schema:
            $ref: '#/components/schemas/Subeler'
    responses:
      '200':
        description: Success
    summary: Şube Sil
    tags:
    - Şubeler
/api/Subeler/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip şube kaydını sistemden siler. Bu işlem, belirli
      bir şube bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Şube Sil
    tags:
    - Şubeler
/api/Subeler/deleterange:
  post:
    description: Belirtilen aralıkta bulunan şube kayıtlarını topluca siler. Bu işlem,
      birden fazla şube bilgisini aynı anda kaldırır ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Subeler'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Subeler'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Subeler'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Subeler'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Şube Sil
    tags:
    - Şubeler
/api/Subeler/getall:
  post:
    description: Sistemdeki tüm şube kayıtlarını getirir. Bu işlem, sistemdeki mevcut
      tüm şube bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/SubelerFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/SubelerFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/SubelerFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/SubelerFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Şube Kayıtlarını Getir
    tags:
    - Şubeler
/api/Subeler/getbyid:
  get:
    description: Belirtilen ID'ye sahip şube kaydını getirir. Bu işlem, belirli bir
      şube bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Şube Getir
    tags:
    - Şubeler
/api/Subeler/update:
  put:
    description: Mevcut şube kaydını günceller. Bu işlem, belirtilen şube bilgilerini
      günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Subeler'
        application/json:
          schema:
            $ref: '#/components/schemas/Subeler'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Subeler'
        text/json:
          schema:
            $ref: '#/components/schemas/Subeler'
    responses:
      '200':
        description: Success
    summary: Şube Güncelle
    tags:
    - Şubeler
/api/Subeler/updaterange:
  put:
    description: Birden fazla şube kaydını topluca günceller. Bu işlem, çok sayıda
      şube bilgisini aynı anda günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Subeler'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Subeler'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Subeler'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Subeler'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Şube Güncelle
    tags:
    - Şubeler
/api/Taksit/ControlDelete:
  post:
    description: Bu endpoint, belirtilen taksit bilgileri doğrultusunda silme işlemini
      kontrol eder. Silme işlemi başarılı olup olmadığını belirler ve kullanıcıya
      geri döner.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Taksit'
        application/json:
          schema:
            $ref: '#/components/schemas/Taksit'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Taksit'
        text/json:
          schema:
            $ref: '#/components/schemas/Taksit'
    responses:
      '200':
        description: Success
    summary: Taksit Silme Kontrolü
    tags:
    - Taksit İşlemleri
/api/Taksit/ControlDeleteById:
  delete:
    description: Belirtilen ID'ye sahip taksitin silme işlemini kontrol eder. Silme
      işleminin başarılı olup olmadığını belirler ve geri döner.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Taksit Silme Kontrolü
    tags:
    - Taksit İşlemleri
/api/Taksit/add:
  post:
    description: Sisteme yeni bir taksit kaydı ekler. Bu işlem, belirtilen taksit
      bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Taksit'
        application/json:
          schema:
            $ref: '#/components/schemas/Taksit'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Taksit'
        text/json:
          schema:
            $ref: '#/components/schemas/Taksit'
    responses:
      '200':
        description: Success
    summary: Taksit Ekle
    tags:
    - Taksit İşlemleri
/api/Taksit/addrange:
  post:
    description: Birden fazla taksit kaydını topluca ekler. Bu işlem, çok sayıda taksit
      bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Taksit'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Taksit'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Taksit'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Taksit'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Taksit Ekle
    tags:
    - Taksit İşlemleri
/api/Taksit/delete:
  post:
    description: Belirtilen taksit kaydını sistemden siler. Bu işlem, mevcut bir taksit
      bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Taksit'
        application/json:
          schema:
            $ref: '#/components/schemas/Taksit'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Taksit'
        text/json:
          schema:
            $ref: '#/components/schemas/Taksit'
    responses:
      '200':
        description: Success
    summary: Taksit Sil
    tags:
    - Taksit İşlemleri
/api/Taksit/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip taksit kaydını sistemden siler. Bu işlem,
      belirli bir taksit bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Taksit Sil
    tags:
    - Taksit İşlemleri
/api/Taksit/deleterange:
  post:
    description: Belirtilen aralıkta bulunan taksit kayıtlarını topluca siler. Bu
      işlem, birden fazla taksit bilgisini aynı anda kaldırır ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Taksit'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Taksit'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Taksit'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Taksit'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Taksit Sil
    tags:
    - Taksit İşlemleri
/api/Taksit/getall:
  post:
    description: Sistemdeki tüm taksit kayıtlarını getirir. Bu işlem, sistemdeki mevcut
      tüm taksit bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TaksitFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/TaksitFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TaksitFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/TaksitFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Taksit Kayıtlarını Getir
    tags:
    - Taksit İşlemleri
/api/Taksit/getbyid:
  get:
    description: Belirtilen ID'ye sahip taksit kaydını getirir. Bu işlem, belirli
      bir taksit bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Taksit Getir
    tags:
    - Taksit İşlemleri
/api/Taksit/update:
  put:
    description: Mevcut taksit kaydını günceller. Bu işlem, belirtilen taksit bilgilerini
      günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Taksit'
        application/json:
          schema:
            $ref: '#/components/schemas/Taksit'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Taksit'
        text/json:
          schema:
            $ref: '#/components/schemas/Taksit'
    responses:
      '200':
        description: Success
    summary: Taksit Güncelle
    tags:
    - Taksit İşlemleri
/api/Taksit/updaterange:
  put:
    description: Birden fazla taksit kaydını topluca günceller. Bu işlem, çok sayıda
      taksit bilgisini aynı anda günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Taksit'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Taksit'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Taksit'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Taksit'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Taksit Güncelle
    tags:
    - Taksit İşlemleri
/api/TaksitIsl/add:
  post:
    description: Sisteme yeni bir taksit işlemi kaydı ekler. Bu işlem, belirtilen
      taksit işlemi bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TaksitIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/TaksitIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TaksitIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/TaksitIsl'
    responses:
      '200':
        description: Success
    summary: Taksit İşlemi Ekle
    tags:
    - TaksitIsl
/api/TaksitIsl/addrange:
  post:
    description: Birden fazla taksit işlemi kaydını topluca ekler. Bu işlem, çok sayıda
      taksit işlemi bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TaksitIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TaksitIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TaksitIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TaksitIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Taksit İşlemi Ekle
    tags:
    - TaksitIsl
/api/TaksitIsl/delete:
  post:
    description: Belirtilen taksit işlemi kaydını sistemden siler. Bu işlem, mevcut
      bir taksit işlemi bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TaksitIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/TaksitIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TaksitIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/TaksitIsl'
    responses:
      '200':
        description: Success
    summary: Taksit İşlemi Sil
    tags:
    - TaksitIsl
/api/TaksitIsl/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip taksit işlemi kaydını sistemden siler. Bu
      işlem, belirli bir taksit işlemi bilgisini kaldırır ve işlemin başarılı olduğunu
      belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Taksit İşlemi Sil
    tags:
    - TaksitIsl
/api/TaksitIsl/deleterange:
  post:
    description: Belirtilen aralıkta bulunan taksit işlemi kayıtlarını topluca siler.
      Bu işlem, birden fazla taksit işlemi bilgisini aynı anda kaldırır ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TaksitIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TaksitIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TaksitIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TaksitIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Taksit İşlemi Sil
    tags:
    - TaksitIsl
/api/TaksitIsl/getall:
  post:
    description: Sistemdeki tüm taksit işlemi kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm taksit işlemi bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TaksitIslFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/TaksitIslFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TaksitIslFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/TaksitIslFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Taksit İşlemlerini Getir
    tags:
    - TaksitIsl
/api/TaksitIsl/getbyid:
  get:
    description: Belirtilen ID'ye sahip taksit işlemi kaydını getirir. Bu işlem, belirli
      bir taksit işlemi bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Taksit İşlemi Getir
    tags:
    - TaksitIsl
/api/TaksitIsl/update:
  put:
    description: Mevcut taksit işlemi kaydını günceller. Bu işlem, belirtilen taksit
      işlemi bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TaksitIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/TaksitIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TaksitIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/TaksitIsl'
    responses:
      '200':
        description: Success
    summary: Taksit İşlemi Güncelle
    tags:
    - TaksitIsl
/api/TaksitIsl/updaterange:
  put:
    description: Birden fazla taksit işlemi kaydını topluca günceller. Bu işlem, çok
      sayıda taksit işlemi bilgisini aynı anda günceller ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TaksitIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TaksitIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TaksitIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TaksitIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Taksit İşlemi Güncelle
    tags:
    - TaksitIsl
/api/Teklifsiparis/add:
  post:
    description: Sisteme yeni bir teklif siparişi kaydı ekler. Bu işlem, belirtilen
      teklif siparişi bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Teklifsiparis'
        application/json:
          schema:
            $ref: '#/components/schemas/Teklifsiparis'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Teklifsiparis'
        text/json:
          schema:
            $ref: '#/components/schemas/Teklifsiparis'
    responses:
      '200':
        description: Success
    summary: Teklif Sipariş Ekle
    tags:
    - Teklif Sipariş İşlemleri
/api/Teklifsiparis/addrange:
  post:
    description: Birden fazla teklif siparişi kaydını topluca ekler. Bu işlem, çok
      sayıda teklif siparişi bilgisini aynı anda sisteme ekler ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Teklifsiparis'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Teklifsiparis'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Teklifsiparis'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Teklifsiparis'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Teklif Sipariş Ekle
    tags:
    - Teklif Sipariş İşlemleri
/api/Teklifsiparis/delete:
  post:
    description: Belirtilen teklif siparişi kaydını sistemden siler. Bu işlem, mevcut
      bir teklif siparişi bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Teklifsiparis'
        application/json:
          schema:
            $ref: '#/components/schemas/Teklifsiparis'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Teklifsiparis'
        text/json:
          schema:
            $ref: '#/components/schemas/Teklifsiparis'
    responses:
      '200':
        description: Success
    summary: Teklif Sipariş Sil
    tags:
    - Teklif Sipariş İşlemleri
/api/Teklifsiparis/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip teklif siparişi kaydını sistemden siler. Bu
      işlem, belirli bir teklif siparişi bilgisini kaldırır ve işlemin başarılı olduğunu
      belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Teklif Sipariş Sil
    tags:
    - Teklif Sipariş İşlemleri
/api/Teklifsiparis/deleterange:
  post:
    description: Belirtilen aralıkta bulunan teklif siparişi kayıtlarını topluca siler.
      Bu işlem, birden fazla teklif siparişi bilgisini aynı anda kaldırır ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Teklifsiparis'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Teklifsiparis'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Teklifsiparis'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Teklifsiparis'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Teklif Sipariş Sil
    tags:
    - Teklif Sipariş İşlemleri
/api/Teklifsiparis/getall:
  post:
    description: Sistemdeki tüm teklif siparişi kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm teklif siparişi bilgilerini listeler ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Teklif Siparişlerini Getir
    tags:
    - Teklif Sipariş İşlemleri
/api/Teklifsiparis/getbyid:
  get:
    description: Belirtilen ID'ye sahip teklif siparişi kaydını getirir. Bu işlem,
      belirli bir teklif siparişi bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Teklif Sipariş Getir
    tags:
    - Teklif Sipariş İşlemleri
/api/Teklifsiparis/update:
  put:
    description: Mevcut teklif siparişi kaydını günceller. Bu işlem, belirtilen teklif
      siparişi bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Teklifsiparis'
        application/json:
          schema:
            $ref: '#/components/schemas/Teklifsiparis'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Teklifsiparis'
        text/json:
          schema:
            $ref: '#/components/schemas/Teklifsiparis'
    responses:
      '200':
        description: Success
    summary: Teklif Sipariş Güncelle
    tags:
    - Teklif Sipariş İşlemleri
/api/Teklifsiparis/updaterange:
  put:
    description: Birden fazla teklif siparişi kaydını topluca günceller. Bu işlem,
      çok sayıda teklif siparişi bilgisini aynı anda günceller ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Teklifsiparis'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Teklifsiparis'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Teklifsiparis'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Teklifsiparis'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Teklif Sipariş Güncelle
    tags:
    - Teklif Sipariş İşlemleri
/api/TeklifsiparisAciklamalari/add:
  post:
    description: Sisteme yeni bir teklif sipariş açıklaması kaydı ekler. Bu işlem,
      belirtilen teklif sipariş açıklaması bilgilerini sisteme kaydeder ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalari'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalari'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalari'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalari'
    responses:
      '200':
        description: Success
    summary: Teklif Sipariş Açıklaması Ekle
    tags:
    - Teklif Sipariş Açıklamaları
/api/TeklifsiparisAciklamalari/addrange:
  post:
    description: Birden fazla teklif sipariş açıklaması kaydını topluca ekler. Bu
      işlem, çok sayıda teklif sipariş açıklaması bilgisini aynı anda sisteme ekler
      ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisAciklamalari'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisAciklamalari'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisAciklamalari'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisAciklamalari'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Teklif Sipariş Açıklaması Ekle
    tags:
    - Teklif Sipariş Açıklamaları
/api/TeklifsiparisAciklamalari/delete:
  post:
    description: Belirtilen teklif sipariş açıklaması kaydını sistemden siler. Bu
      işlem, mevcut bir teklif sipariş açıklaması bilgisini kaldırır ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalari'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalari'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalari'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalari'
    responses:
      '200':
        description: Success
    summary: Teklif Sipariş Açıklaması Sil
    tags:
    - Teklif Sipariş Açıklamaları
/api/TeklifsiparisAciklamalari/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip teklif sipariş açıklaması kaydını sistemden
      siler. Bu işlem, belirli bir teklif sipariş açıklaması bilgisini kaldırır ve
      işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Teklif Sipariş Açıklaması Sil
    tags:
    - Teklif Sipariş Açıklamaları
/api/TeklifsiparisAciklamalari/deleterange:
  post:
    description: Belirtilen aralıkta bulunan teklif sipariş açıklaması kayıtlarını
      topluca siler. Bu işlem, birden fazla teklif sipariş açıklaması bilgisini aynı
      anda kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisAciklamalari'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisAciklamalari'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisAciklamalari'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisAciklamalari'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Teklif Sipariş Açıklaması Sil
    tags:
    - Teklif Sipariş Açıklamaları
/api/TeklifsiparisAciklamalari/getall:
  post:
    description: Sistemdeki tüm teklif sipariş açıklaması kayıtlarını getirir. Bu
      işlem, sistemdeki mevcut tüm teklif sipariş açıklaması bilgilerini listeler
      ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalariFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalariFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalariFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalariFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Teklif Sipariş Açıklamalarını Getir
    tags:
    - Teklif Sipariş Açıklamaları
/api/TeklifsiparisAciklamalari/getbyid:
  get:
    description: Belirtilen ID'ye sahip teklif sipariş açıklaması kaydını getirir.
      Bu işlem, belirli bir teklif sipariş açıklaması bilgisini getirir ve işlemin
      başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Teklif Sipariş Açıklamasını Getir
    tags:
    - Teklif Sipariş Açıklamaları
/api/TeklifsiparisAciklamalari/update:
  put:
    description: Mevcut teklif sipariş açıklaması kaydını günceller. Bu işlem, belirtilen
      teklif sipariş açıklaması bilgilerini günceller ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalari'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalari'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalari'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisAciklamalari'
    responses:
      '200':
        description: Success
    summary: Teklif Sipariş Açıklamasını Güncelle
    tags:
    - Teklif Sipariş Açıklamaları
/api/TeklifsiparisAciklamalari/updaterange:
  put:
    description: Birden fazla teklif sipariş açıklaması kaydını topluca günceller.
      Bu işlem, çok sayıda teklif sipariş açıklaması bilgisini aynı anda günceller
      ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisAciklamalari'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisAciklamalari'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisAciklamalari'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisAciklamalari'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Teklif Sipariş Açıklaması Güncelle
    tags:
    - Teklif Sipariş Açıklamaları
/api/TeklifsiparisDurum/add:
  post:
    description: Sisteme yeni bir teklif sipariş durumu kaydı ekler. Bu işlem, belirtilen
      teklif sipariş durumu bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurum'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurum'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurum'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurum'
    responses:
      '200':
        description: Success
    summary: Teklif Sipariş Durumu Ekle
    tags:
    - Teklif Sipariş Durum
/api/TeklifsiparisDurum/addrange:
  post:
    description: Birden fazla teklif sipariş durumu kaydını topluca ekler. Bu işlem,
      çok sayıda teklif sipariş durumu bilgisini aynı anda sisteme ekler ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisDurum'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisDurum'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisDurum'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisDurum'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Teklif Sipariş Durumu Ekle
    tags:
    - Teklif Sipariş Durum
/api/TeklifsiparisDurum/delete:
  post:
    description: Belirtilen teklif sipariş durumu kaydını sistemden siler. Bu işlem,
      mevcut bir teklif sipariş durumu bilgisini kaldırır ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurum'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurum'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurum'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurum'
    responses:
      '200':
        description: Success
    summary: Teklif Sipariş Durumunu Sil
    tags:
    - Teklif Sipariş Durum
/api/TeklifsiparisDurum/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip teklif sipariş durumu kaydını sistemden siler.
      Bu işlem, belirli bir teklif sipariş durumu bilgisini kaldırır ve işlemin başarılı
      olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Teklif Sipariş Durumunu Sil
    tags:
    - Teklif Sipariş Durum
/api/TeklifsiparisDurum/deleterange:
  post:
    description: Belirtilen aralıkta bulunan teklif sipariş durumu kayıtlarını topluca
      siler. Bu işlem, birden fazla teklif sipariş durumu bilgisini aynı anda kaldırır
      ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisDurum'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisDurum'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisDurum'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisDurum'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Teklif Sipariş Durumunu Sil
    tags:
    - Teklif Sipariş Durum
/api/TeklifsiparisDurum/getall:
  post:
    description: Sistemdeki tüm teklif sipariş durumu kayıtlarını getirir. Bu işlem,
      sistemdeki mevcut tüm teklif sipariş durumu bilgilerini listeler ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurumFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurumFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurumFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurumFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Teklif Sipariş Durumlarını Getir
    tags:
    - Teklif Sipariş Durum
/api/TeklifsiparisDurum/getbyid:
  get:
    description: Belirtilen ID'ye sahip teklif sipariş durumu kaydını getirir. Bu
      işlem, belirli bir teklif sipariş durumu bilgisini getirir ve işlemin başarılı
      olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Teklif Sipariş Durumunu Getir
    tags:
    - Teklif Sipariş Durum
/api/TeklifsiparisDurum/update:
  put:
    description: Mevcut teklif sipariş durumu kaydını günceller. Bu işlem, belirtilen
      teklif sipariş durumu bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurum'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurum'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurum'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisDurum'
    responses:
      '200':
        description: Success
    summary: Teklif Sipariş Durumunu Güncelle
    tags:
    - Teklif Sipariş Durum
/api/TeklifsiparisDurum/updaterange:
  put:
    description: Birden fazla teklif sipariş durumu kaydını topluca günceller. Bu
      işlem, çok sayıda teklif sipariş durumu bilgisini aynı anda günceller ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisDurum'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisDurum'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisDurum'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisDurum'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Teklif Sipariş Durumunu Güncelle
    tags:
    - Teklif Sipariş Durum
/api/TeklifsiparisIsl/add:
  post:
    description: Sisteme yeni bir teklif sipariş işlemi kaydı ekler. Bu işlem, belirtilen
      teklif sipariş işlemi bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIsl'
    responses:
      '200':
        description: Success
    summary: Teklif Sipariş İşlemi Ekle
    tags:
    - TeklifsiparisIsl
/api/TeklifsiparisIsl/addrange:
  post:
    description: Birden fazla teklif sipariş işlemi kaydını topluca ekler. Bu işlem,
      çok sayıda teklif sipariş işlemi bilgisini aynı anda sisteme ekler ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Teklif Sipariş İşlemi Ekle
    tags:
    - TeklifsiparisIsl
/api/TeklifsiparisIsl/delete:
  post:
    description: Belirtilen teklif sipariş işlemi kaydını sistemden siler. Bu işlem,
      mevcut bir teklif sipariş işlemi bilgisini kaldırır ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIsl'
    responses:
      '200':
        description: Success
    summary: Teklif Sipariş İşlemini Sil
    tags:
    - TeklifsiparisIsl
/api/TeklifsiparisIsl/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip teklif sipariş işlemi kaydını sistemden siler.
      Bu işlem, belirli bir teklif sipariş işlemi bilgisini kaldırır ve işlemin başarılı
      olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Teklif Sipariş İşlemini Sil
    tags:
    - TeklifsiparisIsl
/api/TeklifsiparisIsl/deleterange:
  post:
    description: Belirtilen aralıkta bulunan teklif sipariş işlemi kayıtlarını topluca
      siler. Bu işlem, birden fazla teklif sipariş işlemi bilgisini aynı anda kaldırır
      ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Teklif Sipariş İşlemini Sil
    tags:
    - TeklifsiparisIsl
/api/TeklifsiparisIsl/getall:
  post:
    description: Sistemdeki tüm teklif sipariş işlemi kayıtlarını getirir. Bu işlem,
      sistemdeki mevcut tüm teklif sipariş işlemi bilgilerini listeler ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIslFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIslFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIslFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIslFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Teklif Sipariş İşlemlerini Getir
    tags:
    - TeklifsiparisIsl
/api/TeklifsiparisIsl/getbyid:
  get:
    description: Belirtilen ID'ye sahip teklif sipariş işlemi kaydını getirir. Bu
      işlem, belirli bir teklif sipariş işlemi bilgisini getirir ve işlemin başarılı
      olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Teklif Sipariş İşlemini Getir
    tags:
    - TeklifsiparisIsl
/api/TeklifsiparisIsl/update:
  put:
    description: Mevcut teklif sipariş işlemi kaydını günceller. Bu işlem, belirtilen
      teklif sipariş işlemi bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/TeklifsiparisIsl'
    responses:
      '200':
        description: Success
    summary: Teklif Sipariş İşlemini Güncelle
    tags:
    - TeklifsiparisIsl
/api/TeklifsiparisIsl/updaterange:
  put:
    description: Birden fazla teklif sipariş işlemi kaydını topluca günceller. Bu
      işlem, çok sayıda teklif sipariş işlemi bilgisini aynı anda günceller ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TeklifsiparisIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Teklif Sipariş İşlemini Güncelle
    tags:
    - TeklifsiparisIsl
/api/TevkifatOran/add:
  post:
    description: Sisteme yeni bir tevkifat oranı kaydı ekler. Bu işlem, belirtilen
      tevkifat oranı bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TevkifatOran'
        application/json:
          schema:
            $ref: '#/components/schemas/TevkifatOran'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TevkifatOran'
        text/json:
          schema:
            $ref: '#/components/schemas/TevkifatOran'
    responses:
      '200':
        description: Success
    summary: Tekil Tevkifat Oranı Ekle
    tags:
    - TevkifatOran
/api/TevkifatOran/addrange:
  post:
    description: Birden fazla tevkifat oranı kaydını topluca ekler. Bu işlem, çok
      sayıda tevkifat oranı bilgisini aynı anda sisteme ekler ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TevkifatOran'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TevkifatOran'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TevkifatOran'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TevkifatOran'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Tevkifat Oranı Ekle
    tags:
    - TevkifatOran
/api/TevkifatOran/delete:
  post:
    description: Belirtilen tevkifat oranı kaydını sistemden siler. Bu işlem, mevcut
      bir tevkifat oranı bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TevkifatOran'
        application/json:
          schema:
            $ref: '#/components/schemas/TevkifatOran'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TevkifatOran'
        text/json:
          schema:
            $ref: '#/components/schemas/TevkifatOran'
    responses:
      '200':
        description: Success
    summary: Tekil Tevkifat Oranı Sil
    tags:
    - TevkifatOran
/api/TevkifatOran/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip tevkifat oranı kaydını sistemden siler. Bu
      işlem, belirli bir tevkifat oranı bilgisini kaldırır ve işlemin başarılı olduğunu
      belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Tevkifat Oranı Sil
    tags:
    - TevkifatOran
/api/TevkifatOran/deleterange:
  post:
    description: Belirtilen aralıkta bulunan tevkifat oranı kayıtlarını topluca siler.
      Bu işlem, birden fazla tevkifat oranı bilgisini aynı anda kaldırır ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TevkifatOran'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TevkifatOran'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TevkifatOran'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TevkifatOran'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Tevkifat Oranı Sil
    tags:
    - TevkifatOran
/api/TevkifatOran/getall:
  post:
    description: Sistemdeki tüm tevkifat oranı kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm tevkifat oranı bilgilerini listeler ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TevkifatOranFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/TevkifatOranFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TevkifatOranFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/TevkifatOranFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Tevkifat Oranlarını Getir
    tags:
    - TevkifatOran
/api/TevkifatOran/getbyid:
  get:
    description: Belirtilen ID'ye sahip tevkifat oranı kaydını getirir. Bu işlem,
      belirli bir tevkifat oranı bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Tevkifat Oranı Getir
    tags:
    - TevkifatOran
/api/TevkifatOran/update:
  put:
    description: Mevcut tevkifat oranı kaydını günceller. Bu işlem, belirtilen tevkifat
      oranı bilgisini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TevkifatOran'
        application/json:
          schema:
            $ref: '#/components/schemas/TevkifatOran'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TevkifatOran'
        text/json:
          schema:
            $ref: '#/components/schemas/TevkifatOran'
    responses:
      '200':
        description: Success
    summary: Tevkifat Oranını Güncelle
    tags:
    - TevkifatOran
/api/TevkifatOran/updaterange:
  put:
    description: Birden fazla tevkifat oranı kaydını topluca günceller. Bu işlem,
      çok sayıda tevkifat oranı bilgisini aynı anda günceller ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TevkifatOran'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TevkifatOran'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TevkifatOran'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TevkifatOran'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Tevkifat Oranını Güncelle
    tags:
    - TevkifatOran
/api/TmpFatIsl/add:
  post:
    description: Sisteme yeni bir TmpFatIsl kaydı ekler. Bu işlem, belirtilen TmpFatIsl
      bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TmpFatIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/TmpFatIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TmpFatIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/TmpFatIsl'
    responses:
      '200':
        description: Success
    summary: Tekil TmpFatIsl Ekle
    tags:
    - TmpFatIsl
/api/TmpFatIsl/addrange:
  post:
    description: Birden fazla TmpFatIsl kaydını topluca ekler. Bu işlem, çok sayıda
      TmpFatIsl bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu TmpFatIsl Ekle
    tags:
    - TmpFatIsl
/api/TmpFatIsl/delete:
  post:
    description: Belirtilen TmpFatIsl kaydını sistemden siler. Bu işlem, mevcut bir
      TmpFatIsl bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TmpFatIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/TmpFatIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TmpFatIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/TmpFatIsl'
    responses:
      '200':
        description: Success
    summary: Tekil TmpFatIsl Sil
    tags:
    - TmpFatIsl
/api/TmpFatIsl/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip TmpFatIsl kaydını sistemden siler. Bu işlem,
      belirli bir TmpFatIsl bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile TmpFatIsl Sil
    tags:
    - TmpFatIsl
/api/TmpFatIsl/deleterange:
  post:
    description: Belirtilen aralıkta bulunan TmpFatIsl kayıtlarını topluca siler.
      Bu işlem, birden fazla TmpFatIsl bilgisini aynı anda kaldırır ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu TmpFatIsl Sil
    tags:
    - TmpFatIsl
/api/TmpFatIsl/getall:
  post:
    description: Sistemdeki tüm TmpFatIsl kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm TmpFatIsl bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TmpFatIslFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/TmpFatIslFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TmpFatIslFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/TmpFatIslFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm TmpFatIsl Kayıtlarını Getir
    tags:
    - TmpFatIsl
/api/TmpFatIsl/getbyid:
  get:
    description: Belirtilen ID'ye sahip TmpFatIsl kaydını getirir. Bu işlem, belirli
      bir TmpFatIsl bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile TmpFatIsl Getir
    tags:
    - TmpFatIsl
/api/TmpFatIsl/update:
  put:
    description: Mevcut TmpFatIsl kaydını günceller. Bu işlem, belirtilen TmpFatIsl
      bilgisini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TmpFatIsl'
        application/json:
          schema:
            $ref: '#/components/schemas/TmpFatIsl'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TmpFatIsl'
        text/json:
          schema:
            $ref: '#/components/schemas/TmpFatIsl'
    responses:
      '200':
        description: Success
    summary: TmpFatIsl Güncelle
    tags:
    - TmpFatIsl
/api/TmpFatIsl/updaterange:
  put:
    description: Birden fazla TmpFatIsl kaydını topluca günceller. Bu işlem, çok sayıda
      TmpFatIsl bilgisini aynı anda günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatIsl'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatIsl'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatIsl'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatIsl'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu TmpFatIsl Güncelle
    tags:
    - TmpFatIsl
/api/TmpFatura/add:
  post:
    description: Sisteme yeni bir TmpFatura kaydı ekler. Bu işlem, belirtilen TmpFatura
      bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TmpFatura'
        application/json:
          schema:
            $ref: '#/components/schemas/TmpFatura'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TmpFatura'
        text/json:
          schema:
            $ref: '#/components/schemas/TmpFatura'
    responses:
      '200':
        description: Success
    summary: Tekil TmpFatura Ekle
    tags:
    - Tmp Fatura
/api/TmpFatura/addrange:
  post:
    description: Birden fazla TmpFatura kaydını topluca ekler. Bu işlem, çok sayıda
      TmpFatura bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatura'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatura'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatura'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatura'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu TmpFatura Ekle
    tags:
    - Tmp Fatura
/api/TmpFatura/delete:
  post:
    description: Belirtilen TmpFatura kaydını sistemden siler. Bu işlem, mevcut bir
      TmpFatura bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TmpFatura'
        application/json:
          schema:
            $ref: '#/components/schemas/TmpFatura'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TmpFatura'
        text/json:
          schema:
            $ref: '#/components/schemas/TmpFatura'
    responses:
      '200':
        description: Success
    summary: Tekil TmpFatura Sil
    tags:
    - Tmp Fatura
/api/TmpFatura/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip TmpFatura kaydını sistemden siler. Bu işlem,
      belirli bir TmpFatura bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile TmpFatura Sil
    tags:
    - Tmp Fatura
/api/TmpFatura/deleterange:
  post:
    description: Belirtilen aralıkta bulunan TmpFatura kayıtlarını topluca siler.
      Bu işlem, birden fazla TmpFatura bilgisini aynı anda kaldırır ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatura'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatura'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatura'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatura'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu TmpFatura Sil
    tags:
    - Tmp Fatura
/api/TmpFatura/getall:
  post:
    description: Sistemdeki tüm TmpFatura kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm TmpFatura bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TmpFaturaFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/TmpFaturaFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TmpFaturaFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/TmpFaturaFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm TmpFatura Kayıtlarını Getir
    tags:
    - Tmp Fatura
/api/TmpFatura/getbyid:
  get:
    description: Belirtilen ID'ye sahip TmpFatura kaydını getirir. Bu işlem, belirli
      bir TmpFatura bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile TmpFatura Getir
    tags:
    - Tmp Fatura
/api/TmpFatura/update:
  put:
    description: Mevcut TmpFatura kaydını günceller. Bu işlem, belirtilen TmpFatura
      bilgisini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/TmpFatura'
        application/json:
          schema:
            $ref: '#/components/schemas/TmpFatura'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/TmpFatura'
        text/json:
          schema:
            $ref: '#/components/schemas/TmpFatura'
    responses:
      '200':
        description: Success
    summary: TmpFatura Güncelle
    tags:
    - Tmp Fatura
/api/TmpFatura/updaterange:
  put:
    description: Birden fazla TmpFatura kaydını topluca günceller. Bu işlem, çok sayıda
      TmpFatura bilgisini aynı anda günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatura'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatura'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatura'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/TmpFatura'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu TmpFatura Güncelle
    tags:
    - Tmp Fatura
/api/User/Add:
  post:
    description: Sisteme yeni bir kullanıcı kaydı ekler. Bu işlem, belirtilen kullanıcı
      bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/User'
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/User'
        text/json:
          schema:
            $ref: '#/components/schemas/User'
    responses:
      '200':
        description: Success
    summary: Tekil Kullanıcı Ekle
    tags:
    - User
/api/User/AddDTO:
  post:
    description: DTO (Data Transfer Object) kullanarak yeni bir kullanıcı kaydı ekler.
      Bu işlem, belirtilen kullanıcı DTO bilgilerini sisteme kaydeder ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/UserDTO'
        application/json:
          schema:
            $ref: '#/components/schemas/UserDTO'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/UserDTO'
        text/json:
          schema:
            $ref: '#/components/schemas/UserDTO'
    responses:
      '200':
        description: Success
    summary: DTO ile Kullanıcı Ekle
    tags:
    - User
/api/User/Delete:
  delete:
    description: Belirtilen ID'ye sahip kullanıcıyı sistemden siler. Bu işlem, belirli
      bir kullanıcı bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: true
      schema:
        type: string
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Kullanıcı Sil
    tags:
    - User
/api/User/DeleteDTO:
  delete:
    description: DTO (Data Transfer Object) kullanarak belirtilen ID'ye sahip kullanıcıyı
      sistemden siler. Bu işlem, belirli bir kullanıcı DTO bilgisini kaldırır ve işlemin
      başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: true
      schema:
        type: string
      style: form
    responses:
      '200':
        description: Success
    summary: DTO ile Kullanıcı Sil
    tags:
    - User
/api/User/Update:
  post:
    description: Mevcut bir kullanıcı kaydını günceller. Bu işlem, belirtilen kullanıcı
      bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/User'
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/User'
        text/json:
          schema:
            $ref: '#/components/schemas/User'
    responses:
      '200':
        description: Success
    summary: Kullanıcı Güncelle
    tags:
    - User
/api/User/UpdateDTO:
  post:
    description: DTO (Data Transfer Object) kullanarak mevcut bir kullanıcı kaydını
      günceller. Bu işlem, belirtilen kullanıcı DTO bilgilerini günceller ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/UserDTO'
        application/json:
          schema:
            $ref: '#/components/schemas/UserDTO'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/UserDTO'
        text/json:
          schema:
            $ref: '#/components/schemas/UserDTO'
    responses:
      '200':
        description: Success
    summary: DTO ile Kullanıcı Güncelle
    tags:
    - User
/api/User/add:
  post:
    description: Sisteme yeni bir kullanıcı kaydı ekler. Bu işlem, belirtilen kullanıcı
      bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/User'
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/User'
        text/json:
          schema:
            $ref: '#/components/schemas/User'
    responses:
      '200':
        description: Success
    summary: Tekil Kullanıcı Ekle (alternative)
    tags:
    - User
/api/User/addrange:
  post:
    description: Birden fazla kullanıcı kaydını topluca ekler. Bu işlem, çok sayıda
      kullanıcı bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kullanıcı Ekle
    tags:
    - User
/api/User/delete:
  post:
    description: Belirtilen kullanıcı kaydını sistemden siler. Bu işlem, mevcut bir
      kullanıcı bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/User'
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/User'
        text/json:
          schema:
            $ref: '#/components/schemas/User'
    responses:
      '200':
        description: Success
    summary: Tekil Kullanıcı Sil (alternative)
    tags:
    - User
/api/User/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip kullanıcıyı sistemden siler. Bu işlem, belirli
      bir kullanıcı bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Kullanıcı Sil (alternative)
    tags:
    - User
/api/User/deleterange:
  post:
    description: Belirtilen aralıkta bulunan kullanıcı kayıtlarını topluca siler.
      Bu işlem, birden fazla kullanıcı bilgisini aynı anda kaldırır ve işlemin başarılı
      olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kullanıcı Sil
    tags:
    - User
/api/User/getall:
  post:
    description: Sistemdeki tüm kullanıcı kayıtlarını getirir. Bu işlem, sistemdeki
      mevcut tüm kullanıcı bilgilerini listeler ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/UserFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/UserFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/UserFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/UserFilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Kullanıcı Kayıtlarını Getir
    tags:
    - User
/api/User/getbyid:
  get:
    description: Belirtilen ID'ye sahip kullanıcı kaydını getirir. Bu işlem, belirli
      bir kullanıcı bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Kullanıcı Getir
    tags:
    - User
/api/User/update:
  put:
    description: Mevcut kullanıcı kaydını günceller. Bu işlem, belirtilen kullanıcı
      bilgilerini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/User'
        application/json:
          schema:
            $ref: '#/components/schemas/User'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/User'
        text/json:
          schema:
            $ref: '#/components/schemas/User'
    responses:
      '200':
        description: Success
    summary: Kullanıcı Güncelle
    tags:
    - User
/api/User/updaterange:
  put:
    description: Birden fazla kullanıcı kaydını topluca günceller. Bu işlem, çok sayıda
      kullanıcı bilgisini aynı anda günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/User'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kullanıcı Güncelle
    tags:
    - User
/api/UsersYetki/add:
  post:
    description: Sisteme yeni bir kullanıcı yetkisi ekler. Bu işlem, belirtilen kullanıcı
      yetkisi bilgilerini sisteme kaydeder ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/UsersYetki1'
        application/json:
          schema:
            $ref: '#/components/schemas/UsersYetki1'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/UsersYetki1'
        text/json:
          schema:
            $ref: '#/components/schemas/UsersYetki1'
    responses:
      '200':
        description: Success
    summary: Kullanıcı Yetkisi Ekle
    tags:
    - UsersYetki
/api/UsersYetki/addrange:
  post:
    description: Birden fazla kullanıcı yetkisini topluca ekler. Bu işlem, çok sayıda
      kullanıcı yetkisi bilgisini aynı anda sisteme ekler ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/UsersYetki1'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/UsersYetki1'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/UsersYetki1'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/UsersYetki1'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kullanıcı Yetkisi Ekle
    tags:
    - UsersYetki
/api/UsersYetki/delete:
  post:
    description: Belirtilen kullanıcı yetkisini sistemden siler. Bu işlem, mevcut
      bir kullanıcı yetkisi bilgisini kaldırır ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/UsersYetki1'
        application/json:
          schema:
            $ref: '#/components/schemas/UsersYetki1'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/UsersYetki1'
        text/json:
          schema:
            $ref: '#/components/schemas/UsersYetki1'
    responses:
      '200':
        description: Success
    summary: Kullanıcı Yetkisi Sil
    tags:
    - UsersYetki
/api/UsersYetki/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip kullanıcı yetkisini sistemden siler. Bu işlem,
      belirli bir kullanıcı yetkisi bilgisini kaldırır ve işlemin başarılı olduğunu
      belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Kullanıcı Yetkisi Sil
    tags:
    - UsersYetki
/api/UsersYetki/deleterange:
  post:
    description: Belirtilen aralıkta bulunan kullanıcı yetkilerini topluca siler.
      Bu işlem, birden fazla kullanıcı yetkisi bilgisini aynı anda kaldırır ve işlemin
      başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/UsersYetki1'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/UsersYetki1'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/UsersYetki1'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/UsersYetki1'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kullanıcı Yetkisi Sil
    tags:
    - UsersYetki
/api/UsersYetki/getall:
  post:
    description: Sistemdeki tüm kullanıcı yetkilerini getirir. Bu işlem, sistemdeki
      mevcut tüm kullanıcı yetkisi bilgilerini listeler ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/UsersYetki1FilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/UsersYetki1FilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/UsersYetki1FilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/UsersYetki1FilterHelper'
    responses:
      '200':
        description: Success
    summary: Tüm Kullanıcı Yetkilerini Getir
    tags:
    - UsersYetki
/api/UsersYetki/getbyid:
  get:
    description: Belirtilen ID'ye sahip kullanıcı yetkisini getirir. Bu işlem, belirli
      bir kullanıcı yetkisi bilgisini getirir ve işlemin başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: ID ile Kullanıcı Yetkisini Getir
    tags:
    - UsersYetki
/api/UsersYetki/update:
  put:
    description: Mevcut bir kullanıcı yetkisini günceller. Bu işlem, belirtilen kullanıcı
      yetkisi bilgisini günceller ve işlemin başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/UsersYetki1'
        application/json:
          schema:
            $ref: '#/components/schemas/UsersYetki1'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/UsersYetki1'
        text/json:
          schema:
            $ref: '#/components/schemas/UsersYetki1'
    responses:
      '200':
        description: Success
    summary: Kullanıcı Yetkisini Güncelle
    tags:
    - UsersYetki
/api/UsersYetki/updaterange:
  put:
    description: Birden fazla kullanıcı yetkisini topluca günceller. Bu işlem, çok
      sayıda kullanıcı yetkisi bilgisini aynı anda günceller ve işlemin başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/UsersYetki1'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/UsersYetki1'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/UsersYetki1'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/UsersYetki1'
            type: array
    responses:
      '200':
        description: Success
    summary: Toplu Kullanıcı Yetkisini Güncelle
    tags:
    - UsersYetki
/api/Utsayar/add:
  post:
    description: Sisteme yeni bir Utsayar nesnesi ekler. Bu işlem, belirtilen Utsayar
      bilgilerini kaydeder ve başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Utsayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Utsayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Utsayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Utsayar'
    responses:
      '200':
        description: Success
    summary: POST /api/Utsayar/add
    tags:
    - Utsayar
/api/Utsayar/addrange:
  post:
    description: Birden fazla Utsayar nesnesini topluca ekler. Bu işlem, çok sayıda
      Utsayar bilgisini aynı anda kaydeder ve başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Utsayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Utsayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Utsayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Utsayar'
            type: array
    responses:
      '200':
        description: Success
    summary: POST /api/Utsayar/addrange
    tags:
    - Utsayar
/api/Utsayar/delete:
  post:
    description: Belirtilen Utsayar nesnesini sistemden siler. Bu işlem, mevcut bir
      Utsayar bilgisini kaldırır ve başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Utsayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Utsayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Utsayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Utsayar'
    responses:
      '200':
        description: Success
    summary: POST /api/Utsayar/delete
    tags:
    - Utsayar
/api/Utsayar/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip Utsayar nesnesini sistemden siler. Bu işlem,
      belirli bir Utsayar bilgisini kaldırır ve başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: DELETE /api/Utsayar/deletebyid
    tags:
    - Utsayar
/api/Utsayar/deleterange:
  post:
    description: Belirtilen aralıkta bulunan Utsayar nesnelerini topluca siler. Bu
      işlem, birden fazla Utsayar bilgisini aynı anda kaldırır ve başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Utsayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Utsayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Utsayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Utsayar'
            type: array
    responses:
      '200':
        description: Success
    summary: POST /api/Utsayar/deleterange
    tags:
    - Utsayar
/api/Utsayar/getall:
  post:
    description: Sistemdeki tüm Utsayar nesnelerini getirir. Bu işlem, mevcut tüm
      Utsayar bilgilerini listeler ve başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/UtsayarFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/UtsayarFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/UtsayarFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/UtsayarFilterHelper'
    responses:
      '200':
        description: Success
    summary: POST /api/Utsayar/getall
    tags:
    - Utsayar
/api/Utsayar/getbyid:
  get:
    description: Belirtilen ID'ye sahip Utsayar nesnesini getirir. Bu işlem, belirli
      bir Utsayar bilgisini getirir ve başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: GET /api/Utsayar/getbyid
    tags:
    - Utsayar
/api/Utsayar/update:
  put:
    description: Mevcut bir Utsayar nesnesini günceller. Bu işlem, belirtilen Utsayar
      bilgisini günceller ve başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Utsayar'
        application/json:
          schema:
            $ref: '#/components/schemas/Utsayar'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Utsayar'
        text/json:
          schema:
            $ref: '#/components/schemas/Utsayar'
    responses:
      '200':
        description: Success
    summary: PUT /api/Utsayar/update
    tags:
    - Utsayar
/api/Utsayar/updaterange:
  put:
    description: Birden fazla Utsayar nesnesini topluca günceller. Bu işlem, çok sayıda
      Utsayar bilgisini aynı anda günceller ve başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Utsayar'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Utsayar'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Utsayar'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Utsayar'
            type: array
    responses:
      '200':
        description: Success
    summary: PUT /api/Utsayar/updaterange
    tags:
    - Utsayar
/api/Utslog/add:
  post:
    description: Sisteme yeni bir Utslog nesnesi ekler. Bu işlem, belirtilen Utslog
      bilgilerini kaydeder ve başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Utslog'
        application/json:
          schema:
            $ref: '#/components/schemas/Utslog'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Utslog'
        text/json:
          schema:
            $ref: '#/components/schemas/Utslog'
    responses:
      '200':
        description: Success
    summary: POST /api/Utslog/add
    tags:
    - Utslog
/api/Utslog/addrange:
  post:
    description: Birden fazla Utslog nesnesini topluca ekler. Bu işlem, çok sayıda
      Utslog bilgisini aynı anda kaydeder ve başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Utslog'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Utslog'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Utslog'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Utslog'
            type: array
    responses:
      '200':
        description: Success
    summary: POST /api/Utslog/addrange
    tags:
    - Utslog
/api/Utslog/delete:
  post:
    description: Belirtilen Utslog nesnesini sistemden siler. Bu işlem, mevcut bir
      Utslog bilgisini kaldırır ve başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Utslog'
        application/json:
          schema:
            $ref: '#/components/schemas/Utslog'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Utslog'
        text/json:
          schema:
            $ref: '#/components/schemas/Utslog'
    responses:
      '200':
        description: Success
    summary: POST /api/Utslog/delete
    tags:
    - Utslog
/api/Utslog/deletebyid:
  delete:
    description: Belirtilen ID'ye sahip Utslog nesnesini sistemden siler. Bu işlem,
      belirli bir Utslog bilgisini kaldırır ve başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: entityId
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: DELETE /api/Utslog/deletebyid
    tags:
    - Utslog
/api/Utslog/deleterange:
  post:
    description: Belirtilen aralıkta bulunan Utslog nesnelerini topluca siler. Bu
      işlem, birden fazla Utslog bilgisini aynı anda kaldırır ve başarılı olduğunu
      belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Utslog'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Utslog'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Utslog'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Utslog'
            type: array
    responses:
      '200':
        description: Success
    summary: POST /api/Utslog/deleterange
    tags:
    - Utslog
/api/Utslog/getall:
  post:
    description: Sistemdeki tüm Utslog nesnelerini getirir. Bu işlem, mevcut tüm Utslog
      bilgilerini listeler ve başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/UtslogFilterHelper'
        application/json:
          schema:
            $ref: '#/components/schemas/UtslogFilterHelper'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/UtslogFilterHelper'
        text/json:
          schema:
            $ref: '#/components/schemas/UtslogFilterHelper'
    responses:
      '200':
        description: Success
    summary: POST /api/Utslog/getall
    tags:
    - Utslog
/api/Utslog/getbyid:
  get:
    description: Belirtilen ID'ye sahip Utslog nesnesini getirir. Bu işlem, belirli
      bir Utslog bilgisini getirir ve başarılı olduğunu belirtir.
    parameters:
    - explode: true
      in: query
      name: id
      required: false
      schema:
        format: int32
        type: integer
      style: form
    responses:
      '200':
        description: Success
    summary: GET /api/Utslog/getbyid
    tags:
    - Utslog
/api/Utslog/update:
  put:
    description: Mevcut bir Utslog nesnesini günceller. Bu işlem, belirtilen Utslog
      bilgisini günceller ve başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            $ref: '#/components/schemas/Utslog'
        application/json:
          schema:
            $ref: '#/components/schemas/Utslog'
        application/json-patch+json:
          schema:
            $ref: '#/components/schemas/Utslog'
        text/json:
          schema:
            $ref: '#/components/schemas/Utslog'
    responses:
      '200':
        description: Success
    summary: PUT /api/Utslog/update
    tags:
    - Utslog
/api/Utslog/updaterange:
  put:
    description: Birden fazla Utslog nesnesini topluca günceller. Bu işlem, çok sayıda
      Utslog bilgisini aynı anda günceller ve başarılı olduğunu belirtir.
    requestBody:
      content:
        application/*+json:
          schema:
            items:
              $ref: '#/components/schemas/Utslog'
            type: array
        application/json:
          schema:
            items:
              $ref: '#/components/schemas/Utslog'
            type: array
        application/json-patch+json:
          schema:
            items:
              $ref: '#/components/schemas/Utslog'
            type: array
        text/json:
          schema:
            items:
              $ref: '#/components/schemas/Utslog'
            type: array
    responses:
      '200':
        description: Success
    summary: PUT /api/Utslog/updaterange
    tags:
    - Utslog
components:
  schemas:
    Ajanda:
      additionalProperties: false
      properties:
        aciklama:
          description: açıklama alanının açıklama düzenlenmesi için
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        adSoyad(düzenlenebilir):
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cep:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        firma:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        okundu:
          nullable: true
          type: boolean
        tarih:
          format: date-time
          nullable: true
          type: string
        tel:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        userId:
          format: int32
          nullable: true
          type: integer
      type: object
    AjandaDosya:
      additionalProperties: false
      properties:
        ajandaId:
          format: int32
          nullable: true
          type: integer
        dosyaAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        dosyaYolu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
      type: object
    AjandaDosyaFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/AjandaDosya'
      type: object
    AjandaFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Ajanda'
      type: object
    AjandaNotlar:
      additionalProperties: false
      properties:
        ajandaId:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        notlar:
          nullable: true
          type: string
      type: object
    AjandaNotlarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/AjandaNotlar'
      type: object
    ApiKullanici:
      additionalProperties: false
      properties:
        apitur:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        entegrasyontur:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullanici:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sifre:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    ApiKullaniciFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/ApiKullanici'
      type: object
    Ayar:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        yedek:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    AyarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Ayar'
      type: object
    Ayarekmodul:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        yedek:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    AyarekmodulFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Ayarekmodul'
      type: object
    Banka:
      additionalProperties: false
      properties:
        acquirerId:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bankaAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bankaSube:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        hesapNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        iban:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    BankaFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Banka'
      type: object
    BankaIsl:
      additionalProperties: false
      properties:
        aciklama:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        banka:
          $ref: '#/components/schemas/Banka'
        bankaId:
          format: int32
          nullable: true
          type: integer
        cariId:
          format: int32
          nullable: true
          type: integer
        cek:
          $ref: '#/components/schemas/Cek'
        cekId:
          format: int32
          nullable: true
          type: integer
        evrakNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        fatId:
          format: int32
          nullable: true
          type: integer
        fatura:
          items:
            $ref: '#/components/schemas/Fatura'
          nullable: true
          type: array
        giderIsl:
          items:
            $ref: '#/components/schemas/GiderIsl'
          nullable: true
          type: array
        iddd:
          format: int32
          type: integer
        kasalarIsl:
          $ref: '#/components/schemas/KasalarIsl'
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        mokaId:
          format: int32
          nullable: true
          type: integer
        odemeSekli:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        satirKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        taksit:
          $ref: '#/components/schemas/Taksit'
        taksitId:
          format: int32
          nullable: true
          type: integer
        taksitIsl:
          $ref: '#/components/schemas/TaksitIsl'
        taksitIslId:
          format: int32
          nullable: true
          type: integer
        tarih:
          format: date-time
          nullable: true
          type: string
        tip:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tutar:
          format: double
          nullable: true
          type: number
        unvan:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    BankaIslFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
      type: object
    BankaKullanicisifre:
      additionalProperties: false
      properties:
        bankaId:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
        kullanici:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        sifre:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
      type: object
    BankaKullanicisifreFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/BankaKullanicisifre'
      type: object
    Bodrotablo:
      additionalProperties: false
      properties:
        agi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        besKesinti:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        besOran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bodroDonem:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bordroYil:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        brutUcret:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        calismaGunu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cariIslemId:
          format: int32
          maxLength: 255
          minLength: 0
          nullable: true
          type: integer
        damgaVergisi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        digerKesinti:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        gelirVergisi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        gunlukUcret:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        islemTarihi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        issizlikSigKes:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kumuleVergiMatrahi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        netUcret:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        odemeDurum:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ortGelirVergOran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        personid:
          format: int32
          nullable: true
          type: integer
        prim:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sgkKesinti:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sgkMatrah:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 45
          minLength: 0
          nullable: true
          type: string
        vergiMatrahi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    BodrotabloFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Bodrotablo'
      type: object
    Bordroayar:
      additionalProperties: false
      properties:
        damgaVergisiOran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        issizlikSigortasiKesintiOran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sgkKesintiOran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    BordroayarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Bordroayar'
      type: object
    Bordrovergidilimayar:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        vergiDilimi1Oran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        vergiDilimi1Tutar:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        vergiDilimi2Oran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        vergiDilimi2Tutar:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        vergiDilimi3Oran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        vergiDilimi3Tutar:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        vergiDilimiAsimOran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    BordrovergidilimayarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Bordrovergidilimayar'
      type: object
    CariAdresler:
      additionalProperties: false
      properties:
        cariId:
          format: int32
          nullable: true
          type: integer
        cep:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        il:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ilce:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        mail:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        postaKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sevkAdres:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tel:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ulke:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        yetkili:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    CariAdreslerFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/CariAdresler'
      type: object
    CariBanka:
      additionalProperties: false
      properties:
        bankaAdi:
          maxLength: 255
          minLength: 0
          type: string
        bankaSube:
          maxLength: 255
          minLength: 0
          type: string
        cariId:
          format: int32
          nullable: true
          type: integer
        hesapNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        iban:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      required:
      - bankaAdi
      - bankaSube
      type: object
    CariBankaFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/CariBanka'
      type: object
    CariGrup:
      additionalProperties: false
      properties:
        grup:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    CariGrupFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/CariGrup'
      type: object
    CariIsl:
      additionalProperties: false
      properties:
        aciklama:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        alacak:
          format: double
          nullable: true
          type: number
        banka:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bankaIsl:
          items:
            $ref: '#/components/schemas/BankaIsl'
          nullable: true
          type: array
        bankaIslId:
          format: int32
          nullable: true
          type: integer
        bodrotablo:
          items:
            $ref: '#/components/schemas/Bodrotablo'
          nullable: true
          type: array
        borc:
          format: double
          nullable: true
          type: number
        cariId:
          format: int32
          nullable: true
          type: integer
        cariIslemResimYolu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cariKart:
          $ref: '#/components/schemas/CariKart'
        cek:
          items:
            $ref: '#/components/schemas/Cek'
          nullable: true
          type: array
        cekId:
          format: int32
          nullable: true
          type: integer
        evrakNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        fatId:
          format: int32
          nullable: true
          type: integer
        fatIsl:
          items:
            $ref: '#/components/schemas/FatIsl'
          nullable: true
          type: array
        id:
          format: int32
          type: integer
        kasaId:
          format: int32
          nullable: true
          type: integer
        kasalarIsl:
          items:
            $ref: '#/components/schemas/KasalarIsl'
          nullable: true
          type: array
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        odemeSekli:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        satirKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        taksit:
          $ref: '#/components/schemas/Taksit'
        taksitId:
          format: int32
          nullable: true
          type: integer
        taksitIsl:
          items:
            $ref: '#/components/schemas/TaksitIsl'
          nullable: true
          type: array
        taksitIslId:
          format: int32
          nullable: true
          type: integer
        tarih:
          format: date-time
          nullable: true
          type: string
        tip:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        vade:
          format: date-time
          nullable: true
          type: string
      type: object
    CariIslFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
      type: object
    CariKart:
      additionalProperties: false
      properties:
        aciklama:
          nullable: true
          type: string
        adres:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bankaIsl:
          items:
            $ref: '#/components/schemas/BankaIsl'
          nullable: true
          type: array
        cariAdresler:
          items:
            $ref: '#/components/schemas/CariAdresler'
          nullable: true
          type: array
        cariBanka:
          items:
            $ref: '#/components/schemas/CariBanka'
          nullable: true
          type: array
        cariIsl:
          items:
            $ref: '#/components/schemas/CariIsl'
          nullable: true
          type: array
        cariKartEticaret:
          items:
            $ref: '#/components/schemas/CariKartEticaret'
          nullable: true
          type: array
        cariKod:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cariKodlar:
          items:
            $ref: '#/components/schemas/CariKodlar'
          nullable: true
          type: array
        cariN11Id:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cariNot:
          items:
            $ref: '#/components/schemas/CariNot'
          nullable: true
          type: array
        cariaciklama:
          nullable: true
          type: string
        cep:
          maxLength: 150
          minLength: 0
          nullable: true
          type: string
        fatura:
          items:
            $ref: '#/components/schemas/Fatura'
          nullable: true
          type: array
        faturaAdres:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        faturaIl:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        faturaIlce:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        faturaUlke:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        faturaUnvan:
          maxLength: 255
          minLength: 0
          type: string
        fax:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        grup:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        hizlisatisayar:
          items:
            $ref: '#/components/schemas/Hizlisatisayar'
          nullable: true
          type: array
        id:
          format: int32
          type: integer
        kasalarIsl:
          items:
            $ref: '#/components/schemas/KasalarIsl'
          nullable: true
          type: array
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        mail:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        personelMi:
          format: int32
          nullable: true
          type: integer
        postakodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        resimYolu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        riskIslemi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        riskLimiti:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        seciliPketiketi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sevkAdresi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        taksit:
          items:
            $ref: '#/components/schemas/Taksit'
          nullable: true
          type: array
        taksitIsl:
          items:
            $ref: '#/components/schemas/TaksitIsl'
          nullable: true
          type: array
        tel:
          maxLength: 150
          minLength: 0
          nullable: true
          type: string
        ticaretsicilno:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        tmpFatura:
          items:
            $ref: '#/components/schemas/TmpFatura'
          nullable: true
          type: array
        varsayilanKasa:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        varsayilanVadeGunu:
          format: int32
          nullable: true
          type: integer
        vergiDairesi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        vergiNo:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        webAdresi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        yetkili:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
      required:
      - faturaUnvan
      type: object
    CariKartEticaret:
      additionalProperties: false
      properties:
        cariId:
          format: int32
          nullable: true
          type: integer
        eticaretBilgi:
          maxLength: 100
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
      type: object
    CariKartEticaretFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/CariKartEticaret'
      type: object
    CariKartFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
      type: object
    CariKodlar:
      additionalProperties: false
      properties:
        cariId:
          format: int32
          nullable: true
          type: integer
        deger:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kod:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    CariKodlarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/CariKodlar'
      type: object
    CariNot:
      additionalProperties: false
      properties:
        aciklama:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cariId:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tarih:
          format: date-time
          nullable: true
          type: string
      type: object
    CariNotFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/CariNot'
      type: object
    Cek:
      additionalProperties: false
      properties:
        aciklama:
          nullable: true
          type: string
        asilBorclu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bankaAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bankaIslId:
          format: int32
          nullable: true
          type: integer
        bankaSube:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cariId:
          format: int32
          nullable: true
          type: integer
        cekDurumu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cekNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cekResimYolu:
          maxLength: 500
          minLength: 0
          nullable: true
          type: string
        cekTuru:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cekiAlan:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        evrakTuru:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        hesapNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          nullable: true
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tarih:
          format: date-time
          nullable: true
          type: string
        tutar:
          format: double
          nullable: true
          type: number
        vadeTarihi:
          format: date-time
          nullable: true
          type: string
      type: object
    CekFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Cek'
      type: object
    DataPagingOptions:
      additionalProperties: false
      properties:
        pageNumber:
          format: int32
          nullable: true
          type: integer
        pageSize:
          format: int32
          nullable: true
          type: integer
      type: object
    Efaturaayari:
      additionalProperties: false
      properties:
        earsivSeriBaslik:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        efaturaSeriBaslik:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        entegrasyonTur:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        gelenStokKaydet:
          nullable: true
          type: boolean
        id:
          format: int32
          type: integer
        kullanici:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        mustahsilServisurl:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        seciliGbetiketi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        servisurl:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sifre:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        xsltEarsiv:
          nullable: true
          type: string
        xsltEfatura:
          nullable: true
          type: string
        xsltEirsaliye:
          nullable: true
          type: string
        xsltEmustahsil:
          nullable: true
          type: string
      type: object
    EfaturaayariFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Efaturaayari'
      type: object
    Eticaretayarlar:
      additionalProperties: false
      properties:
        entegrasyonTur:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        sifre:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
      type: object
    EticaretayarlarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Eticaretayarlar'
      type: object
    FatHammaddeIsl:
      additionalProperties: false
      properties:
        aFiyat:
          format: double
          nullable: true
          type: number
        ad:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        barkod:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        birim:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        fatHammaddeIslId:
          format: int32
          nullable: true
          type: integer
        fatId:
          format: int32
          nullable: true
          type: integer
        faturaUnvan:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        miktar:
          format: double
          nullable: true
          type: number
        sFiyat:
          format: double
          nullable: true
          type: number
        stokGrup:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokHammaddeId:
          format: int32
          nullable: true
          type: integer
        stokId:
          format: int32
          nullable: true
          type: integer
        stokKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tarih:
          format: date-time
          nullable: true
          type: string
      type: object
    FatHammaddeIslFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/FatHammaddeIsl'
      type: object
    FatIsl:
      additionalProperties: false
      properties:
        ad:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        aliciUrunKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        barkod:
          maxLength: 300
          minLength: 0
          nullable: true
          type: string
        birim:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        brfiyat:
          format: double
          minimum: 0
          nullable: true
          type: number
        depoId:
          format: int32
          type: integer
        fatId:
          format: int32
          type: integer
        gonderilmeSekliAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        gonderilmeSekliKodu:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        gtipNo:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        gtopfiyat:
          format: double
          minimum: 0
          nullable: true
          type: number
        gumrukTakipNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        iskontoOran:
          format: double
          minimum: 0
          nullable: true
          type: number
        iskontoOran2:
          format: double
          nullable: true
          type: number
        iskontoOran3:
          format: double
          nullable: true
          type: number
        iskontoTutar:
          format: double
          minimum: 0
          nullable: true
          type: number
        iskontoTutar2:
          format: double
          nullable: true
          type: number
        iskontoTutar3:
          format: double
          nullable: true
          type: number
        kapAdedi:
          format: double
          nullable: true
          type: number
        kapCinsiAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kapCinsiKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kapNumarasi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kdvDahil:
          maxLength: 255
          minLength: 0
          type: string
        kdvDurum:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kdvMuafiyetAdi:
          nullable: true
          type: string
        kdvMuafiyetKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kdvOran:
          maxLength: 50
          minLength: 0
          minimum: 0
          nullable: true
          type: string
        kdvTutar:
          format: double
          minimum: 0
          nullable: true
          type: number
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        kunyeNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        lotId:
          format: int32
          type: integer
        malSahibi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        malSahibiVknTckn:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        maliyet:
          format: double
          minimum: 0
          nullable: true
          type: number
        miktar:
          maxLength: 50
          minLength: 0
          minimum: 0
          nullable: true
          type: string
        oivAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        oivDahil:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        oivKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        oivOran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        oivTutar:
          format: double
          nullable: true
          type: number
        otvAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        otvDahil:
          maxLength: 255
          minLength: 0
          type: string
        otvKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        otvOran:
          format: double
          minimum: 0
          nullable: true
          type: number
        otvTutar:
          format: double
          minimum: 0
          nullable: true
          type: number
        resimYolu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        saticiUrunKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        seriNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokId:
          format: int32
          type: integer
        stokOzelKod1:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokOzelKod2:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokOzelKod3:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokOzelKod4:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokRafi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        teslimSartiAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        teslimSartiKodu:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        tevkifatAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tevkifatKodu:
          maxLength: 255
          minLength: 0
          minimum: 0
          nullable: true
          type: string
        tevkifatOran:
          maxLength: 255
          minLength: 0
          minimum: 0
          nullable: true
          type: string
        tevkifatTutar:
          format: double
          minimum: 0
          nullable: true
          type: number
        topfiyat:
          format: double
          minimum: 0
          nullable: true
          type: number
        urunKodu:
          maxLength: 500
          minLength: 0
          nullable: true
          type: string
      required:
      - depoId
      - fatId
      - kdvDahil
      - lotId
      - otvDahil
      - stokId
      type: object
    FatIslEtic:
      additionalProperties: false
      properties:
        durum:
          maxLength: 40
          minLength: 0
          nullable: true
          type: string
        entegrasyonTur:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        fatIslId:
          format: int32
          nullable: true
          type: integer
        guncellenenMiktar:
          format: double
          nullable: true
          type: number
        id:
          format: int32
          type: integer
        mesaj:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        oncekiMiktar:
          format: double
          nullable: true
          type: number
        productCode:
          maxLength: 20
          minLength: 0
          nullable: true
          type: string
        productId:
          maxLength: 20
          minLength: 0
          nullable: true
          type: string
        stokId:
          format: int32
          nullable: true
          type: integer
        urunMiktar:
          format: double
          nullable: true
          type: number
      type: object
    FatIslEticFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/FatIslEtic'
      type: object
    FatIslFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/FatIsl'
      type: object
    Fatura:
      additionalProperties: false
      properties:
        aciklama:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        adres:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        alinan:
          format: double
          minimum: 0
          nullable: true
          type: number
        cariGrup:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cariId:
          format: int32
          type: integer
        cariKod:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cariMail:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cep:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        dokumanNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        eFaturaDurum:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        eFaturaMailGonderildiMi:
          nullable: true
          type: boolean
        eFaturaNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        eFaturaSenaryo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        eFaturaSenaryoTipi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        eFaturaTipi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        evrakNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        fatTarih:
          format: date-time
          nullable: true
          type: string
        faturaResimYolu:
          maxLength: 500
          minLength: 0
          nullable: true
          type: string
        faturaTuru:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        fisno:
          format: int32
          nullable: true
          type: integer
        gtoplam:
          format: double
          minimum: 0
          nullable: true
          type: number
        id:
          format: int32
          type: integer
        il:
          maxLength: 500
          minLength: 0
          nullable: true
          type: string
        ilce:
          maxLength: 500
          minLength: 0
          nullable: true
          type: string
        irsaliyeFaturalandi:
          nullable: true
          type: boolean
        irsaliyeNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        irsaliyeTarihi:
          format: date-time
          nullable: true
          type: string
        iskonto:
          format: double
          minimum: 0
          nullable: true
          type: number
        kdv:
          format: double
          minimum: 0
          nullable: true
          type: number
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        maliyet:
          format: double
          minimum: 0
          nullable: true
          type: number
        mukellefAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        mukellefKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        odemeSekli:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        odenen:
          format: double
          minimum: 0
          nullable: true
          type: number
        oivTutar:
          format: double
          nullable: true
          type: number
        otvTutar:
          format: double
          nullable: true
          type: number
        ozelAlan1:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ozelAlan2:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        periyotBaslangic:
          format: date-time
          nullable: true
          type: string
        periyotBitis:
          format: date-time
          nullable: true
          type: string
        postakodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        saat:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        sevkAdresi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sevkTarih:
          format: date-time
          nullable: true
          type: string
        siparisNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        siparisTarihi:
          format: date-time
          nullable: true
          type: string
        stopajOran1:
          format: double
          nullable: true
          type: number
        stopajOran2:
          format: double
          nullable: true
          type: number
        stopajOran3:
          format: double
          nullable: true
          type: number
        stopajOran4:
          format: double
          nullable: true
          type: number
        stopajtutar1:
          format: double
          nullable: true
          type: number
        stopajtutar2:
          format: double
          nullable: true
          type: number
        stopajtutar3:
          format: double
          nullable: true
          type: number
        stopajtutar4:
          format: double
          nullable: true
          type: number
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tel:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tevkifatOran:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        tevkifatTutar:
          format: double
          nullable: true
          type: number
        ticaretsicilno:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        toplam:
          format: double
          minimum: 0
          nullable: true
          type: number
        ulke:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        unvan:
          maxLength: 250
          minLength: 0
          nullable: true
          type: string
        vd:
          maxLength: 500
          minLength: 0
          nullable: true
          type: string
        vn:
          maxLength: 500
          minLength: 0
          nullable: true
          type: string
        yazi:
          maxLength: 500
          minLength: 0
          nullable: true
          type: string
        yetkili:
          maxLength: 500
          minLength: 0
          nullable: true
          type: string
      required:
      - cariId
      type: object
    FaturaAciklamalari:
      additionalProperties: false
      properties:
        aciklama:
          nullable: true
          type: string
        baslik:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    FaturaAciklamalariFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/FaturaAciklamalari'
      type: object
    FaturaFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Fatura'
      type: object
    FaturaKodlar:
      additionalProperties: false
      properties:
        deger:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        fatId:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
        kod:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tabloAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tabloId:
          format: int32
          nullable: true
          type: integer
      type: object
    FaturaKodlarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/FaturaKodlar'
      type: object
    FaturaTeslimAdres:
      additionalProperties: false
      properties:
        cep:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        fatId:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
        il:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ilce:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        mail:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        postaKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sevkAdres:
          nullable: true
          type: string
        tel:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ulke:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        yetkili:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    FaturaTeslimAdresFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/FaturaTeslimAdres'
      type: object
    Firma:
      additionalProperties: false
      properties:
        adSoyad:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        binaNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        caddeSokakBulvar:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cep:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        donem:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        email:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        fax:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ilce:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kapiNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        kullaniciTipi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        mersisNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sabitTel:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sehir:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sektor:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sirketAdres:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sirketUnvan:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ticaretSicilNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ulke:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        vergiDairesi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        vergiNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        webSitesi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    FirmaFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Firma'
      type: object
    FirmaKodlar:
      additionalProperties: false
      properties:
        deger:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kod:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    FirmaKodlarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/FirmaKodlar'
      type: object
    Genelayar:
      additionalProperties: false
      properties:
        ayarAdi:
          nullable: true
          type: string
        ayarDeger:
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullaniciId:
          format: int32
          nullable: true
          type: integer
      type: object
    GenelayarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Genelayar'
      type: object
    Gider:
      additionalProperties: false
      properties:
        aboneNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        giderAciklama:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        giderAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        giderKategori:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        giderKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        giderTuru:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    GiderFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Gider'
      type: object
    GiderIsl:
      additionalProperties: false
      properties:
        aciklama:
          nullable: true
          type: string
        bankaIslId:
          format: int32
          nullable: true
          type: integer
        evrakNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        giderId:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
        kasaId:
          format: int32
          nullable: true
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        odemeDurumu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        odemeSekli:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tarih:
          format: date-time
          nullable: true
          type: string
        tip:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tutar:
          format: double
          nullable: true
          type: number
      type: object
    GiderIslFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/GiderIsl'
      type: object
    GirisYapDonemGetirRequestDTO:
      additionalProperties: false
      properties:
        kullaniciAdi:
          nullable: true
          type: string
        kullaniciSifre:
          nullable: true
          type: string
        vergiNumarasi:
          nullable: true
          type: string
      type: object
    GirisYapRequestDTO:
      additionalProperties: false
      properties:
        apiKullaniciAdi:
          nullable: true
          type: string
        apiKullaniciSifre:
          nullable: true
          type: string
        donemYil:
          nullable: true
          type: string
        kullaniciAdi:
          nullable: true
          type: string
        kullaniciSifre:
          nullable: true
          type: string
        subeAd:
          nullable: true
          type: string
        vergiNumarasi:
          nullable: true
          type: string
        veritabaniAd:
          nullable: true
          type: string
      type: object
    Hizlisatisayar:
      additionalProperties: false
      properties:
        ayniStokAyniSatirEkleHizli:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bilgiFisiCiktiAl:
          nullable: true
          type: boolean
        bilgiFisiYaziciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bilgiFisiYaziciSayisi:
          format: int32
          nullable: true
          type: integer
        depoId:
          format: int32
          nullable: true
          type: integer
        ekranKlavyesiAktifMi:
          nullable: true
          type: boolean
        faturaCiktiAl:
          nullable: true
          type: boolean
        faturaYaziciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        faturaYaziciSayisi:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
        makbuzCiktiAl:
          nullable: true
          type: boolean
        makbuzYaziciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        makbuzYaziciSayisi:
          format: int32
          nullable: true
          type: integer
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        userId:
          format: int32
          nullable: true
          type: integer
        varsayilanBankaId:
          format: int32
          nullable: true
          type: integer
        varsayilanCariId:
          format: int32
          nullable: true
          type: integer
        varsayilanKasaId:
          format: int32
          nullable: true
          type: integer
      type: object
    HizlisatisayarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Hizlisatisayar'
      type: object
    Hizlisatisbutonayarlari:
      additionalProperties: false
      properties:
        butonName:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        stokAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokBarkod:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokFiyat:
          format: double
          nullable: true
          type: number
        stokId:
          format: int32
          nullable: true
          type: integer
        stokResim:
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    HizlisatisbutonayarlariFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Hizlisatisbutonayarlari'
      type: object
    Kasalar:
      additionalProperties: false
      properties:
        aciklama:
          maxLength: 255
          minLength: 0
          type: string
        id:
          format: int32
          nullable: true
          type: integer
        kasaAdi:
          maxLength: 50
          minLength: 0
          type: string
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      required:
      - aciklama
      - kasaAdi
      type: object
    KasalarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Kasalar'
      type: object
    KasalarIsl:
      additionalProperties: false
      properties:
        aciklama:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bankaIsl:
          $ref: '#/components/schemas/BankaIsl'
        bankaIslId:
          format: int32
          nullable: true
          type: integer
        cariId:
          format: int32
          nullable: true
          type: integer
        cariIsl:
          items:
            $ref: '#/components/schemas/CariIsl'
          nullable: true
          type: array
        cariIslId:
          format: int32
          nullable: true
          type: integer
        cariKart:
          items:
            $ref: '#/components/schemas/CariKart'
          nullable: true
          type: array
        cek:
          $ref: '#/components/schemas/Cek'
        cekId:
          format: int32
          nullable: true
          type: integer
        evrakNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        fatura:
          $ref: '#/components/schemas/Fatura'
        faturaId:
          format: int32
          nullable: true
          type: integer
        giderIsl:
          items:
            $ref: '#/components/schemas/GiderIsl'
          nullable: true
          type: array
        id:
          format: int32
          type: integer
        kasaIslId:
          format: int32
          nullable: true
          type: integer
        kasaIslemResimYolu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kasalar:
          items:
            $ref: '#/components/schemas/Kasalar'
          nullable: true
          type: array
        kasalarId:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        taksit:
          $ref: '#/components/schemas/Taksit'
        taksitId:
          format: int32
          nullable: true
          type: integer
        taksitIsl:
          $ref: '#/components/schemas/TaksitIsl'
        taksitIslId:
          format: int32
          nullable: true
          type: integer
        tarih:
          format: date-time
          nullable: true
          type: string
        tip:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        tutar:
          format: double
          nullable: true
          type: number
        unvan:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    KasalarIslFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
      type: object
    KullaniciIslemler:
      additionalProperties: false
      properties:
        bolum:
          maxLength: 250
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        islem:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        islemId:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kriterNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kullanici:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        local:
          maxLength: 200
          minLength: 0
          nullable: true
          type: string
        macAdres:
          maxLength: 200
          minLength: 0
          nullable: true
          type: string
        modem:
          maxLength: 200
          minLength: 0
          nullable: true
          type: string
        saat:
          maxLength: 20
          minLength: 0
          nullable: true
          type: string
        sorgu:
          nullable: true
          type: string
        sube:
          maxLength: 200
          minLength: 0
          nullable: true
          type: string
        tarih:
          maxLength: 20
          minLength: 0
          nullable: true
          type: string
      type: object
    KullaniciIslemlerFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/KullaniciIslemler'
      type: object
    Kurlar:
      additionalProperties: false
      properties:
        dolarAlis:
          maxLength: 30
          minLength: 0
          nullable: true
          type: string
        dolarSatis:
          maxLength: 30
          minLength: 0
          nullable: true
          type: string
        euroAlis:
          maxLength: 30
          minLength: 0
          nullable: true
          type: string
        euroSatis:
          maxLength: 30
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        tarih:
          maxLength: 30
          minLength: 0
          type: string
      required:
      - tarih
      type: object
    KurlarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Kurlar'
      type: object
    Mailayari:
      additionalProperties: false
      properties:
        altyapi:
          nullable: true
          type: boolean
        emailAdresi:
          maxLength: 255
          minLength: 0
          type: string
        emailSunucusu:
          maxLength: 255
          minLength: 0
          type: string
        gorunenAd:
          maxLength: 255
          minLength: 0
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          type: string
        otomatikGonder:
          type: boolean
        port:
          maxLength: 255
          minLength: 0
          type: string
        sifre:
          maxLength: 255
          minLength: 0
          type: string
        sslaktifMi:
          type: boolean
        subeAdi:
          maxLength: 255
          minLength: 0
          type: string
      required:
      - emailAdresi
      - emailSunucusu
      - gorunenAd
      - kullaniciAdi
      - port
      - sifre
      - subeAdi
      type: object
    MailayariFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Mailayari'
      type: object
    Mokaayarlar:
      additionalProperties: false
      properties:
        apiAnahtar:
          nullable: true
          type: string
        apiSifre:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bilsoftApiId:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        bilsoftApiSifre:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        dealerCode:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
      type: object
    MokaayarlarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Mokaayarlar'
      type: object
    Mokaiade:
      additionalProperties: false
      properties:
        dealerPaymentId:
          maxLength: 45
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        otherTrxCode:
          nullable: true
          type: string
        paymentDate:
          maxLength: 400
          minLength: 0
          nullable: true
          type: string
        refundBool:
          nullable: true
          type: boolean
        refundCode:
          maxLength: 400
          minLength: 0
          nullable: true
          type: string
        refundDate:
          maxLength: 400
          minLength: 0
          nullable: true
          type: string
        refundMessage:
          maxLength: 400
          minLength: 0
          nullable: true
          type: string
        refundMokaId:
          maxLength: 45
          minLength: 0
          nullable: true
          type: string
        totalAmount:
          format: double
          nullable: true
          type: number
        totalRefundAmount:
          format: double
          nullable: true
          type: number
      type: object
    MokaiadeFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Mokaiade'
      type: object
    Mokaisllog:
      additionalProperties: false
      properties:
        amount:
          format: double
          nullable: true
          type: number
        dealerPaymentId:
          format: int32
          nullable: true
          type: integer
        dealerPaymentTrxId:
          format: int32
          nullable: true
          type: integer
        durum:
          maxLength: 45
          minLength: 0
          nullable: true
          type: string
        firmaNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kullaniciAdi:
          maxLength: 45
          minLength: 0
          nullable: true
          type: string
        paymentReason:
          format: int32
          nullable: true
          type: integer
        resultMessage:
          maxLength: 75
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 45
          minLength: 0
          nullable: true
          type: string
        trxCode:
          nullable: true
          type: string
        trxDate:
          maxLength: 75
          minLength: 0
          nullable: true
          type: string
        trxStatus:
          format: int32
          nullable: true
          type: integer
        trxType:
          format: int32
          nullable: true
          type: integer
        virtualPosOrderId:
          maxLength: 75
          minLength: 0
          nullable: true
          type: string
        voidRefundReason:
          format: int32
          nullable: true
          type: integer
      type: object
    MokaisllogFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Mokaisllog'
      type: object
    Mokalog:
      additionalProperties: false
      properties:
        amount:
          format: double
          nullable: true
          type: number
        cardHolderFullName:
          maxLength: 75
          minLength: 0
          nullable: true
          type: string
        cardNumberFirstSix:
          format: int32
          nullable: true
          type: integer
        cardNumberLastFour:
          format: int32
          nullable: true
          type: integer
        currencyCode:
          maxLength: 75
          minLength: 0
          nullable: true
          type: string
        dealerCommissionAmount:
          format: double
          nullable: true
          type: number
        dealerPaymentId:
          format: int32
          nullable: true
          type: integer
        firmaNo:
          format: int32
          nullable: true
          type: integer
        installmentNumber:
          format: int32
          nullable: true
          type: integer
        isThreeD:
          maxLength: 45
          minLength: 0
          nullable: true
          type: string
        kullaniciAdi:
          maxLength: 45
          minLength: 0
          nullable: true
          type: string
        listItemCount:
          maxLength: 45
          minLength: 0
          nullable: true
          type: string
        otherTrxCode:
          nullable: true
          type: string
        paymentDate:
          maxLength: 75
          minLength: 0
          nullable: true
          type: string
        paymentStatus:
          maxLength: 45
          minLength: 0
          nullable: true
          type: string
        refAmount:
          format: double
          nullable: true
          type: number
        subeAdi:
          maxLength: 45
          minLength: 0
          nullable: true
          type: string
        trxStatus:
          maxLength: 45
          minLength: 0
          nullable: true
          type: string
      type: object
    MokalogFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Mokalog'
      type: object
    Personel:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        pAd:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pAileAilebilgi1:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pAileAilebilgi2:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pAileAilebilgi3:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pAileCocuksayisi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pAileMedenihal:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pCariId:
          format: int32
          nullable: true
          type: integer
        pCinsiyet:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pDogumtarih:
          format: date-time
          nullable: true
          type: string
        pDogumyeri:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pGorev:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pId:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIletisimCeptel:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIletisimDigertel:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIletisimEposta:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIletisimEvadres:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIletisimEvtel:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIsCalismabirim:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIsCalismadurum:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIsCikistarih:
          format: date-time
          nullable: true
          type: string
        pIsEhliyetcinsi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIsEhliyetcinsi2:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIsEhliyetnumaras:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIsEhliyetnumaras2:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIsEmekli:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIsGiristarih:
          format: date-time
          nullable: true
          type: string
        pIsIsyerisicilno:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pIsSigortasicilno:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pMaliBanka:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pMaliHesapno:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pMaliIban:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pMaliMaas:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pMaliSube:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pResmi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pSoyad:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pTc:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        pUyruk:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    PersonelFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Personel'
      type: object
    Personelizinler:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        isbasisaat:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        isbastarihtarih:
          format: date-time
          nullable: true
          type: string
        izinAdres:
          nullable: true
          type: string
        izinTel:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        izinaciklama:
          nullable: true
          type: string
        izinbaslamasaat:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        izinbastarih:
          format: date-time
          nullable: true
          type: string
        izinbitissaat:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        izinbittarih:
          format: date-time
          nullable: true
          type: string
        izinsuresi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        izinturu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        personelid:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    PersonelizinlerFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Personelizinler'
      type: object
    Personelnot:
      additionalProperties: false
      properties:
        baslik:
          nullable: true
          type: string
        icerik:
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        personid:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tarih:
          format: date-time
          nullable: true
          type: string
      type: object
    PersonelnotFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Personelnot'
      type: object
    Pos:
      additionalProperties: false
      properties:
        apiPosTur:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        deviceKey:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        merchantKey:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        secretKey:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sifre:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        userId:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    PosFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Pos'
      type: object
    Posislemdetay:
      additionalProperties: false
      properties:
        acquirerId:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        amonth:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        authCode:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        batchNum:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cardNum:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cardType:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        comPort:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        fatId:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
        installmentCnt:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        issuerId:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        merchanId:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        odemeTuru:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        posMakineBilgilerId:
          format: int32
          nullable: true
          type: integer
        processType:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        referenceNumber:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        responceCode:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stanNum:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        terminalId:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tranDate:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tranTime:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    PosislemdetayFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Posislemdetay'
      type: object
    Posmakinebilgileri:
      additionalProperties: false
      properties:
        anaFormBekleme:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        comPort:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        hizliSatisFormBekleme:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        ipAdres:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kasiyerAd:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kasiyerSifre:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kopyaSayisi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kullaniciId:
          format: int32
          nullable: true
          type: integer
        otomatikBaglantiFormBekleme:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        seriNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        serverPort:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        verifoneFormBekleme:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    PosmakinebilgileriFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Posmakinebilgileri'
      type: object
    Raporlar:
      additionalProperties: false
      properties:
        adi:
          maxLength: 30
          minLength: 0
          nullable: true
          type: string
        frx:
          nullable: true
          type: string
        id:
          format: int32
          type: integer
      type: object
    RaporlarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Raporlar'
      type: object
    Sanalsantralayar:
      additionalProperties: false
      properties:
        apiCode:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        link:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        telefonNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    SanalsantralayarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Sanalsantralayar'
      type: object
    Sayim:
      additionalProperties: false
      properties:
        barkod:
          nullable: true
          type: string
        depoId:
          format: int32
          nullable: true
          type: integer
        fark:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
        sayimMiktar:
          format: int32
          nullable: true
          type: integer
        stokId:
          format: int32
          nullable: true
          type: integer
        stokMiktar:
          format: int32
          nullable: true
          type: integer
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        urunAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    SayimFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Sayim'
      type: object
    Sayimtemple:
      additionalProperties: false
      properties:
        barkod:
          nullable: true
          type: string
        depoId:
          format: int32
          nullable: true
          type: integer
        fark:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
        sayimMiktar:
          format: int32
          nullable: true
          type: integer
        stokId:
          format: int32
          nullable: true
          type: integer
        stokMiktar:
          format: int32
          nullable: true
          type: integer
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        urunAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    SayimtempleFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Sayimtemple'
      type: object
    SevkBilgileri:
      additionalProperties: false
      properties:
        fatId:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        plaka:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tasimaUniteleriDorsePlakaNo:
          nullable: true
          type: string
        tasiyiciFirmaAd:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tasiyiciFirmaIl:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tasiyiciFirmaIlce:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tasiyiciFirmaSoyad:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tasiyiciFirmaUlke:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tasiyiciFirmaVknTckn:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        teslimEdenAdSoyad:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        teslimEdenEmail:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        teslimEdenFax:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        teslimEdenTelefon:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    SevkBilgileriFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/SevkBilgileri'
      type: object
    Smsayar:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kullaniciNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        niyazi123:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        smsBaslik:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        smsLink:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    SmsayarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Smsayar'
      type: object
    SoforBilgileri:
      additionalProperties: false
      properties:
        fatId:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        soforAd:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        soforSoyad:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tckn:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    SoforBilgileriFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/SoforBilgileri'
      type: object
    Stok:
      additionalProperties: false
      properties:
        aFiyat:
          format: double
          nullable: true
          type: number
        ad:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        aliciUrunKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        barkod:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        birim:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        grup:
          maxLength: 150
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kdvDahil:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        kdvOran:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        kod:
          maxLength: 150
          minLength: 0
          nullable: true
          type: string
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        oivDahil:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        oivOran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        otvDahil:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        otvOran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        resimYolu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sFiyat:
          format: double
          nullable: true
          type: number
        saticiUrunKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        seriNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokN11Id:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokOzelKod1:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokOzelKod2:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokOzelKod3:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokOzelKod4:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokRafi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    StokBirim:
      additionalProperties: false
      properties:
        birim:
          maxLength: 50
          minLength: 0
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      required:
      - birim
      type: object
    StokBirimFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/StokBirim'
      type: object
    StokDepo:
      additionalProperties: false
      properties:
        depo:
          maxLength: 50
          minLength: 0
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
      required:
      - depo
      type: object
    StokDepoFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/StokDepo'
      type: object
    StokEticaret:
      additionalProperties: false
      properties:
        entegrasyonTur:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        productCode:
          maxLength: 20
          minLength: 0
          nullable: true
          type: string
        productId:
          maxLength: 20
          minLength: 0
          nullable: true
          type: string
        stokId:
          format: int32
          nullable: true
          type: integer
        urunBilgi:
          nullable: true
          type: string
      type: object
    StokEticaretFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/StokEticaret'
      type: object
    StokFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Stok'
      type: object
    StokGrup:
      additionalProperties: false
      properties:
        grup:
          maxLength: 50
          minLength: 0
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      required:
      - grup
      type: object
    StokGrupFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/StokGrup'
      type: object
    StokHammadde:
      additionalProperties: false
      properties:
        aciklama:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        adet:
          format: double
          nullable: true
          type: number
        id:
          format: int32
          type: integer
        stokHammaddeChild:
          items:
            $ref: '#/components/schemas/StokHammadde'
          nullable: true
          type: array
        stokHammaddeParent:
          $ref: '#/components/schemas/StokHammadde'
        stokId:
          format: int32
          nullable: true
          type: integer
        stokhammaddeId:
          format: int32
          nullable: true
          type: integer
      type: object
    StokHammaddeFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/StokHammadde'
      type: object
    StokIsl:
      additionalProperties: false
      properties:
        aciklama:
          maxLength: 500
          minLength: 0
          nullable: true
          type: string
        adet:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        depoId:
          format: int32
          nullable: true
          type: integer
        fatHammaddeIsls:
          items:
            $ref: '#/components/schemas/FatHammaddeIsl'
          nullable: true
          type: array
        fatId:
          format: int32
          nullable: true
          type: integer
        fatura:
          items:
            $ref: '#/components/schemas/Fatura'
          nullable: true
          type: array
        hedefdepoId:
          format: int32
          nullable: true
          type: integer
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        lotId:
          format: int32
          nullable: true
          type: integer
        satirkodu:
          maxLength: 25
          minLength: 0
          nullable: true
          type: string
        stok:
          $ref: '#/components/schemas/Stok'
        stokDepo:
          items:
            $ref: '#/components/schemas/StokDepo'
          nullable: true
          type: array
        stokId:
          format: int32
          nullable: true
          type: integer
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tarih:
          format: date-time
          nullable: true
          type: string
        tur:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
      type: object
    StokIslFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
      type: object
    Stokfiyatlar:
      additionalProperties: false
      properties:
        aFiyat:
          format: double
          minimum: 0
          type: number
        aciklama:
          nullable: true
          type: string
        grup:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        sFiyat:
          format: double
          minimum: 0
          type: number
        sirano:
          format: int32
          type: integer
        stokId:
          format: int32
          nullable: true
          type: integer
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      required:
      - aFiyat
      - sFiyat
      - sirano
      type: object
    StokfiyatlarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Stokfiyatlar'
      type: object
    Stoklot:
      additionalProperties: false
      properties:
        aciklama:
          maxLength: 255
          minLength: 0
          type: string
        belgeNumarasi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        izNumarasi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kayitNumarasi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kurumNumarasi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        lotNumarasi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        seriNumarasi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sonKullanmaTarihi:
          format: date-time
          nullable: true
          type: string
        stokId:
          format: int32
          nullable: true
          type: integer
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tarih:
          format: date-time
          nullable: true
          type: string
        uretimTarihi:
          format: date-time
          nullable: true
          type: string
        uretimZamani:
          format: date-time
          nullable: true
          type: string
        urunNumarasi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      required:
      - aciklama
      type: object
    StoklotFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Stoklot'
      type: object
    Stokpaketgrup:
      additionalProperties: false
      properties:
        barkod:
          maxLength: 500
          minLength: 0
          type: string
        id:
          format: int32
          type: integer
        miktar:
          maxLength: 255
          minLength: 0
          type: string
        paketAd:
          maxLength: 500
          minLength: 0
          type: string
        stokBarkod:
          maxLength: 500
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      required:
      - barkod
      - miktar
      - paketAd
      type: object
    StokpaketgrupFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Stokpaketgrup'
      type: object
    Subeler:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    SubelerFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Subeler'
      type: object
    Taksit:
      additionalProperties: false
      properties:
        aciklama:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cariId:
          format: int32
          nullable: true
          type: integer
        cariIslId:
          format: int32
          nullable: true
          type: integer
        cariUnvan:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        ilkOdemeTarihi:
          format: date-time
          nullable: true
          type: string
        islemTarihi:
          format: date-time
          nullable: true
          type: string
        islemTutari:
          format: double
          nullable: true
          type: number
        kalanTutar:
          format: double
          nullable: true
          type: number
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tahsilat:
          format: double
          nullable: true
          type: number
        tahsilatEdilen:
          format: double
          nullable: true
          type: number
        taksitPeriyodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        taksitSayisi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        taksitTuru:
          nullable: true
          type: boolean
      type: object
    TaksitFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Taksit'
      type: object
    TaksitIsl:
      additionalProperties: false
      properties:
        aciklama:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cariId:
          format: int32
          nullable: true
          type: integer
        durum:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kalan:
          format: double
          nullable: true
          type: number
        kullaniciAdi:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        odemeSekli:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tahsilat:
          format: double
          nullable: true
          type: number
        taksitId:
          format: int32
          nullable: true
          type: integer
        taksitTutari:
          format: double
          nullable: true
          type: number
        vadeTarihi:
          format: date-time
          nullable: true
          type: string
      type: object
    TaksitIslFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/TaksitIsl'
      type: object
    Teklifsiparis:
      additionalProperties: false
      properties:
        aciklama:
          nullable: true
          type: string
        adres:
          nullable: true
          type: string
        alinan:
          format: double
          minimum: 0
          nullable: true
          type: number
        cariGrup:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cariId:
          format: int32
          type: integer
        cariKod:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cariMail:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        cep:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        dokumanNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        donusenFaturaId:
          format: int32
          nullable: true
          type: integer
        donuseninId:
          format: int32
          nullable: true
          type: integer
        donusturuleninId:
          format: int32
          nullable: true
          type: integer
        evrakNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        fisno:
          format: int32
          nullable: true
          type: integer
        gtoplam:
          format: double
          minimum: 0
          nullable: true
          type: number
        id:
          format: int32
          type: integer
        il:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ilce:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        iskonto:
          format: double
          minimum: 0
          nullable: true
          type: number
        islemDurum:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kdv:
          format: double
          minimum: 0
          nullable: true
          type: number
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        maliyet:
          format: double
          minimum: 0
          nullable: true
          type: number
        mukellefAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        mukellefKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        odemeSekli:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        odenen:
          format: double
          minimum: 0
          nullable: true
          type: number
        oivTutar:
          format: double
          minimum: 0
          nullable: true
          type: number
        otvTutar:
          format: double
          minimum: 0
          nullable: true
          type: number
        ozelAlan1:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ozelAlan2:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ozelAlan3:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ozelAlan4:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        periyotBaslangic:
          format: date-time
          nullable: true
          type: string
        periyotBitis:
          format: date-time
          nullable: true
          type: string
        postakodu:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        saat:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sevkAdresi:
          nullable: true
          type: string
        sevkTarih:
          format: date-time
          nullable: true
          type: string
        stopajOran1:
          format: double
          minimum: 0
          nullable: true
          type: number
        stopajOran2:
          format: double
          minimum: 0
          nullable: true
          type: number
        stopajOran3:
          format: double
          minimum: 0
          nullable: true
          type: number
        stopajOran4:
          format: double
          minimum: 0
          nullable: true
          type: number
        stopajtutar1:
          format: double
          minimum: 0
          nullable: true
          type: number
        stopajtutar2:
          format: double
          minimum: 0
          nullable: true
          type: number
        stopajtutar3:
          format: double
          minimum: 0
          nullable: true
          type: number
        stopajtutar4:
          format: double
          minimum: 0
          nullable: true
          type: number
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        teksipDurum:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        teksipTarih:
          format: date-time
          nullable: true
          type: string
        teksipTuru:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tel:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tevkifatOran:
          maxLength: 20
          minLength: 0
          minimum: 0
          nullable: true
          type: string
        tevkifatTutar:
          format: double
          minimum: 0
          nullable: true
          type: number
        ticaretsicilno:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        toplam:
          format: double
          minimum: 0
          nullable: true
          type: number
        ulke:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        unvan:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        vd:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        vn:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        yazi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        yetkili:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      required:
      - cariId
      type: object
    TeklifsiparisAciklamalari:
      additionalProperties: false
      properties:
        aciklama:
          type: string
        baslik:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      required:
      - aciklama
      type: object
    TeklifsiparisAciklamalariFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/TeklifsiparisAciklamalari'
      type: object
    TeklifsiparisDurum:
      additionalProperties: false
      properties:
        durum:
          maxLength: 255
          minLength: 0
          type: string
        id:
          format: int32
          type: integer
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      required:
      - durum
      type: object
    TeklifsiparisDurumFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/TeklifsiparisDurum'
      type: object
    TeklifsiparisFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Teklifsiparis'
      type: object
    TeklifsiparisIsl:
      additionalProperties: false
      properties:
        aciklama:
          nullable: true
          type: string
        ad:
          nullable: true
          type: string
        aliciUrunKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        barkod:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        birim:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        brfiyat:
          format: double
          minimum: 0
          nullable: true
          type: number
        depoId:
          format: int32
          type: integer
        gonderilmeSekliAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        gonderilmeSekliKodu:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        gtipNo:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
        gtopfiyat:
          format: double
          minimum: 0
          nullable: true
          type: number
        gumrukTakipNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        iskontoOran:
          format: double
          minimum: 0
          nullable: true
          type: number
        iskontoOran2:
          format: double
          minimum: 0
          nullable: true
          type: number
        iskontoOran3:
          format: double
          minimum: 0
          nullable: true
          type: number
        iskontoTutar:
          format: double
          minimum: 0
          nullable: true
          type: number
        iskontoTutar2:
          format: double
          minimum: 0
          nullable: true
          type: number
        iskontoTutar3:
          format: double
          minimum: 0
          nullable: true
          type: number
        kapAdedi:
          format: double
          nullable: true
          type: number
        kapCinsiAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kapCinsiKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kapNumarasi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kdvDahil:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kdvDurum:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kdvMuafiyetAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kdvMuafiyetKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kdvOran:
          maxLength: 255
          minLength: 0
          minimum: 0
          nullable: true
          type: string
        kdvTutar:
          format: double
          minimum: 0
          nullable: true
          type: number
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kunyeNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        lotId:
          format: int32
          type: integer
        malSahibi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        malSahibiVknTckn:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        maliyet:
          format: double
          minimum: 0
          nullable: true
          type: number
        miktar:
          maxLength: 255
          minLength: 0
          minimum: 0
          nullable: true
          type: string
        oivAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        oivDahil:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        oivKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        oivOran:
          maxLength: 255
          minLength: 0
          minimum: 0
          nullable: true
          type: string
        oivTutar:
          format: double
          minimum: 0
          nullable: true
          type: number
        otvAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        otvDahil:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        otvKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        otvOran:
          format: double
          minimum: 0
          nullable: true
          type: number
        otvTutar:
          format: double
          minimum: 0
          nullable: true
          type: number
        resimYolu:
          nullable: true
          type: string
        saticiUrunKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        seriNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokId:
          maxLength: 255
          minLength: 0
          type: string
        stokOzelKod1:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokOzelKod2:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokOzelKod3:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokOzelKod4:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stokRafi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        teksipId:
          format: int32
          nullable: true
          type: integer
        teslimSartiAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        teslimSartiKodu:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        tevkifatAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tevkifatKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tevkifatOran:
          maxLength: 255
          minLength: 0
          minimum: 0
          nullable: true
          type: string
        tevkifatTutar:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        topfiyat:
          format: double
          minimum: 0
          nullable: true
          type: number
        urunAciklama:
          nullable: true
          type: string
        urunKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      required:
      - depoId
      - lotId
      - stokId
      type: object
    TeklifsiparisIslFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/TeklifsiparisIsl'
      type: object
    TevkifatOran:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        tevkifatOran1:
          maxLength: 50
          minLength: 0
          nullable: true
          type: string
      type: object
    TevkifatOranFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/TevkifatOran'
      type: object
    TmpFatIsl:
      additionalProperties: false
      properties:
        ad:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        barkod:
          nullable: true
          type: string
        birim:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        brfiyat:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        comPort:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        depoId:
          format: int32
          nullable: true
          type: integer
        fatId:
          format: int32
          nullable: true
          type: integer
        gtopfiyat:
          format: double
          nullable: true
          type: number
        id:
          format: int32
          type: integer
        iskontoOran:
          format: double
          nullable: true
          type: number
        iskontoTutar:
          format: double
          nullable: true
          type: number
        kdvMuafiyetAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kdvMuafiyetKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kdvOran:
          format: int32
          nullable: true
          type: integer
        kdvTutar:
          format: double
          nullable: true
          type: number
        makineId:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        makineIp:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        maliyet:
          format: int32
          nullable: true
          type: integer
        miktar:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        otvAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        otvKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        otvOran:
          format: int32
          nullable: true
          type: integer
        otvTutar:
          format: double
          nullable: true
          type: number
        stokId:
          format: int32
          nullable: true
          type: integer
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tevkifatAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tevkifatKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tevkifatOran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tevkifatTutar:
          format: double
          nullable: true
          type: number
        topfiyat:
          format: double
          nullable: true
          type: number
        urunKodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    TmpFatIslFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/TmpFatIsl'
      type: object
    TmpFatura:
      additionalProperties: false
      properties:
        aciklama:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        adres:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        alinan:
          format: double
          nullable: true
          type: number
        cariId:
          format: int32
          nullable: true
          type: integer
        cariKod:
          nullable: true
          type: string
        cep:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        comPort:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        eFaturaDurum:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        eFaturaMailGonderildiMi:
          nullable: true
          type: boolean
        eFaturaNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        eFaturaSenaryo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        eFaturaSenaryoTipi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        eFaturaTipi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        evrakNo:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        fatTarih:
          format: date-time
          nullable: true
          type: string
        faturaResimYolu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        faturaTuru:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        fisno:
          format: int32
          nullable: true
          type: integer
        gtoplam:
          format: double
          nullable: true
          type: number
        id:
          format: int32
          type: integer
        il:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ilce:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        iskonto:
          format: double
          nullable: true
          type: number
        kdv:
          format: double
          nullable: true
          type: number
        makineId:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        makineIp:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        maliyet:
          format: double
          nullable: true
          type: number
        odemeSekli:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        odenen:
          format: double
          nullable: true
          type: number
        otvTutar:
          format: double
          nullable: true
          type: number
        postakodu:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        saat:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sevkAdresi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sevkTarih:
          format: date-time
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tel:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tevkifatOran:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tevkifatTutar:
          format: double
          nullable: true
          type: number
        ticaretsicilno:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        toplam:
          format: double
          nullable: true
          type: number
        unvan:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        vd:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        vn:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        yazi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        yetkili:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    TmpFaturaFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/TmpFatura'
      type: object
    User:
      additionalProperties: false
      properties:
        ajandaBildirimGoster:
          maxLength: 255
          minLength: 0
          type: string
        ajandaGorevatama:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ajandaGorevlisteleme:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        banka:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnBankaSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnEkle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnParaCekmeOdeme:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnParaYatir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnRaporla:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnAlacaklandir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnBorclandir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnCariDuzenle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnCariHesapEksRapor:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnCariIslRapor:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnCariRapor:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnCarisil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnOdemeMakbuzuKes:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnOdemeYap:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnStokluSatis:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnStoksuzSatis:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnTahsilatMakbuzuKes:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnTahsilatYap:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnTaksitliSatis:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnYeniCari:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariKart:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cek:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnAra:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnOdemeYap:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnTahsilEt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnYeniAlinanCek:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnYeniVerilenCek:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        efaturaAYarlartoolStripMenuItem:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnEfatura:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenExceleAktar:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenLogKayitlari:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenOkunduIsaretle:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenOnayla:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenPdfindir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenRapor:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenReddet:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenXmlIndir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenYazdir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenEmailGonder:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenExceleAktar:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenFaturaDurumKontrol:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenIptalEt:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenLogKayitlari:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenPdfindir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenRapor:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenTekrarGonder:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenXmlIndir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenYazdir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakDuzenle:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakExceleAktar:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakFaturaOlustur:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakFaturalandir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakPdfindir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakRapor:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakSil:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakXmlIndir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakYazdir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaFaturaListesiToolStripMenuItem:
          maxLength: 255
          minLength: 0
          type: string
        efaturaFaturaListesiToolStripMenuItem1:
          maxLength: 255
          minLength: 0
          type: string
        efaturaMuKellefliStesiToolStripMenuItem:
          maxLength: 255
          minLength: 0
          type: string
        efaturaOnayBekleyenlerToolStripMenuItem:
          maxLength: 255
          minLength: 0
          type: string
        efaturaOnayBekleyenlerToolStripMenuItem1:
          maxLength: 255
          minLength: 0
          type: string
        efaturaOnayBekliyorToolStripMenuItem:
          maxLength: 255
          minLength: 0
          type: string
        efaturaTAslaklarToolStripMenuItem:
          maxLength: 255
          minLength: 0
          type: string
        fatura:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnFaturaBas:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnFaturaDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnFaturaSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnIrsaliyeFaturalandir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnIrsaliyeYazdir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnMakbuzBas:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnRaporAl:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnYeniAlisFaturasi:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnYeniIrsaliye:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnYeniSatisFaturasi:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        fiyatUpdate:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        gider:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnDuzenle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnEkle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnGelirGiderSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnGelirIsle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnGiderIsle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnOdemeTahsilat:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderGrbRaporlama:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        izleme:
          nullable: true
          type: boolean
        kasa:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnBankayaVirman:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnCikisYap:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnDuzenle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnEkle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnGirisYap:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnKasaSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnKasadanKasayaVirman:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnYazdir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kullanici:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        personelTakip:
          maxLength: 255
          minLength: 0
          type: string
        programAyarListe:
          nullable: true
          type: string
        satis:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        sifre:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        stok:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnEtiketBas:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnStokCikisi:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnStokDuzenle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnStokGirisi:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnStokHareket:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnStokKaydet:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnStoksil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnSubedenAktar:
          maxLength: 255
          minLength: 0
          type: string
        stokBtnTopluStokRapor:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnYeniStok:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokTxtAlisFiyati:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stoksuzUrunEkleme:
          maxLength: 255
          minLength: 0
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        taksit:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        taksitBtnHizliTaksitlendir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        taksitBtnTaksitDuzenle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        taksitBtnTaksitIslIadeEt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        taksitBtnTaksitIslTahsilEt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        taksitBtnTaksitSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        teklifBtnAlinanSiparisIrsaliyeDonustur:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnAlinanTeklifVerilenSipariseDonustur:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnBasTeklifSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnDuzeltTeklifSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnIptalEtTeklifSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnRaporAl:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnSilTeklifSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnTeklifSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnVerilenSiparisFaturaDonustur:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnVerilenTeklifAlinanSipariseDonustur:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnYeniAlinanSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnYeniAlinanTeklif:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnYeniVerilenSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnYeniVerilenTeklif:
          maxLength: 255
          minLength: 0
          type: string
        yonetim:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
      required:
      - ajandaBildirimGoster
      - efaturaAYarlartoolStripMenuItem
      - efaturaBtnEfatura
      - efaturaBtnGelenExceleAktar
      - efaturaBtnGelenLogKayitlari
      - efaturaBtnGelenOkunduIsaretle
      - efaturaBtnGelenOnayla
      - efaturaBtnGelenPdfindir
      - efaturaBtnGelenRapor
      - efaturaBtnGelenReddet
      - efaturaBtnGelenXmlIndir
      - efaturaBtnGelenYazdir
      - efaturaBtnGidenEmailGonder
      - efaturaBtnGidenExceleAktar
      - efaturaBtnGidenFaturaDurumKontrol
      - efaturaBtnGidenIptalEt
      - efaturaBtnGidenLogKayitlari
      - efaturaBtnGidenPdfindir
      - efaturaBtnGidenRapor
      - efaturaBtnGidenTekrarGonder
      - efaturaBtnGidenXmlIndir
      - efaturaBtnGidenYazdir
      - efaturaBtnTaslakDuzenle
      - efaturaBtnTaslakExceleAktar
      - efaturaBtnTaslakFaturaOlustur
      - efaturaBtnTaslakFaturalandir
      - efaturaBtnTaslakPdfindir
      - efaturaBtnTaslakRapor
      - efaturaBtnTaslakSil
      - efaturaBtnTaslakXmlIndir
      - efaturaBtnTaslakYazdir
      - efaturaFaturaListesiToolStripMenuItem
      - efaturaFaturaListesiToolStripMenuItem1
      - efaturaMuKellefliStesiToolStripMenuItem
      - efaturaOnayBekleyenlerToolStripMenuItem
      - efaturaOnayBekleyenlerToolStripMenuItem1
      - efaturaOnayBekliyorToolStripMenuItem
      - efaturaTAslaklarToolStripMenuItem
      - personelTakip
      - stokBtnSubedenAktar
      - stoksuzUrunEkleme
      - teklifBtnAlinanSiparisIrsaliyeDonustur
      - teklifBtnAlinanTeklifVerilenSipariseDonustur
      - teklifBtnBasTeklifSiparis
      - teklifBtnDuzeltTeklifSiparis
      - teklifBtnIptalEtTeklifSiparis
      - teklifBtnRaporAl
      - teklifBtnSilTeklifSiparis
      - teklifBtnTeklifSiparis
      - teklifBtnVerilenSiparisFaturaDonustur
      - teklifBtnVerilenTeklifAlinanSipariseDonustur
      - teklifBtnYeniAlinanSiparis
      - teklifBtnYeniAlinanTeklif
      - teklifBtnYeniVerilenSiparis
      - teklifBtnYeniVerilenTeklif
      type: object
    UserDTO:
      additionalProperties: false
      properties:
        ajandaBildirimGoster:
          maxLength: 255
          minLength: 0
          type: string
        ajandaGorevatama:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        ajandaGorevlisteleme:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        banka:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnBankaSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnEkle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnParaCekmeOdeme:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnParaYatir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnRaporla:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        bankaBtnSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnAlacaklandir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnBorclandir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnCariDuzenle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnCariHesapEksRapor:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnCariIslRapor:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnCariRapor:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnCarisil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnOdemeMakbuzuKes:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnOdemeYap:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnStokluSatis:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnStoksuzSatis:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnTahsilatMakbuzuKes:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnTahsilatYap:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnTaksitliSatis:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariBtnYeniCari:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cariKart:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cek:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnAra:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnOdemeYap:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnTahsilEt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnYeniAlinanCek:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        cekBtnYeniVerilenCek:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        efaturaAYarlartoolStripMenuItem:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnEfatura:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenExceleAktar:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenLogKayitlari:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenOkunduIsaretle:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenOnayla:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenPdfindir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenRapor:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenReddet:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenXmlIndir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGelenYazdir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenEmailGonder:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenExceleAktar:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenFaturaDurumKontrol:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenIptalEt:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenLogKayitlari:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenPdfindir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenRapor:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenTekrarGonder:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenXmlIndir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnGidenYazdir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakDuzenle:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakExceleAktar:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakFaturaOlustur:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakFaturalandir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakPdfindir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakRapor:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakSil:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakXmlIndir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaBtnTaslakYazdir:
          maxLength: 255
          minLength: 0
          type: string
        efaturaFaturaListesiToolStripMenuItem:
          maxLength: 255
          minLength: 0
          type: string
        efaturaFaturaListesiToolStripMenuItem1:
          maxLength: 255
          minLength: 0
          type: string
        efaturaMuKellefliStesiToolStripMenuItem:
          maxLength: 255
          minLength: 0
          type: string
        efaturaOnayBekleyenlerToolStripMenuItem:
          maxLength: 255
          minLength: 0
          type: string
        efaturaOnayBekleyenlerToolStripMenuItem1:
          maxLength: 255
          minLength: 0
          type: string
        efaturaOnayBekliyorToolStripMenuItem:
          maxLength: 255
          minLength: 0
          type: string
        efaturaTAslaklarToolStripMenuItem:
          maxLength: 255
          minLength: 0
          type: string
        fatura:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnFaturaBas:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnFaturaDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnFaturaSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnIrsaliyeFaturalandir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnIrsaliyeYazdir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnMakbuzBas:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnRaporAl:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnYeniAlisFaturasi:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnYeniIrsaliye:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        faturaBtnYeniSatisFaturasi:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        fiyatUpdate:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        gider:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnDuzenle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnEkle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnGelirGiderSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnGelirIsle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnGiderIsle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnOdemeTahsilat:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderBtnSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        giderGrbRaporlama:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        izleme:
          nullable: true
          type: boolean
        kasa:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnBankayaVirman:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnCikisYap:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnDuzenle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnEkle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnGirisYap:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnKasaSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnKasadanKasayaVirman:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kasaBtnYazdir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        kullanici:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kullaniciEski:
          nullable: true
          type: string
        personelTakip:
          maxLength: 255
          minLength: 0
          type: string
        programAyarListe:
          nullable: true
          type: string
        satis:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        sifre:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sifreEski:
          nullable: true
          type: string
        stok:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnDuzelt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnEtiketBas:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnStokCikisi:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnStokDuzenle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnStokGirisi:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnStokHareket:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnStokKaydet:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnStoksil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnSubedenAktar:
          maxLength: 255
          minLength: 0
          type: string
        stokBtnTopluStokRapor:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokBtnYeniStok:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stokTxtAlisFiyati:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        stoksuzUrunEkleme:
          maxLength: 255
          minLength: 0
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        taksit:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        taksitBtnHizliTaksitlendir:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        taksitBtnTaksitDuzenle:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        taksitBtnTaksitIslIadeEt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        taksitBtnTaksitIslTahsilEt:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        taksitBtnTaksitSil:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
        teklifBtnAlinanSiparisIrsaliyeDonustur:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnAlinanTeklifVerilenSipariseDonustur:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnBasTeklifSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnDuzeltTeklifSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnIptalEtTeklifSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnRaporAl:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnSilTeklifSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnTeklifSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnVerilenSiparisFaturaDonustur:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnVerilenTeklifAlinanSipariseDonustur:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnYeniAlinanSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnYeniAlinanTeklif:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnYeniVerilenSiparis:
          maxLength: 255
          minLength: 0
          type: string
        teklifBtnYeniVerilenTeklif:
          maxLength: 255
          minLength: 0
          type: string
        user:
          $ref: '#/components/schemas/User'
        vergiNo:
          nullable: true
          type: string
        yonetim:
          maxLength: 10
          minLength: 0
          nullable: true
          type: string
      required:
      - ajandaBildirimGoster
      - efaturaAYarlartoolStripMenuItem
      - efaturaBtnEfatura
      - efaturaBtnGelenExceleAktar
      - efaturaBtnGelenLogKayitlari
      - efaturaBtnGelenOkunduIsaretle
      - efaturaBtnGelenOnayla
      - efaturaBtnGelenPdfindir
      - efaturaBtnGelenRapor
      - efaturaBtnGelenReddet
      - efaturaBtnGelenXmlIndir
      - efaturaBtnGelenYazdir
      - efaturaBtnGidenEmailGonder
      - efaturaBtnGidenExceleAktar
      - efaturaBtnGidenFaturaDurumKontrol
      - efaturaBtnGidenIptalEt
      - efaturaBtnGidenLogKayitlari
      - efaturaBtnGidenPdfindir
      - efaturaBtnGidenRapor
      - efaturaBtnGidenTekrarGonder
      - efaturaBtnGidenXmlIndir
      - efaturaBtnGidenYazdir
      - efaturaBtnTaslakDuzenle
      - efaturaBtnTaslakExceleAktar
      - efaturaBtnTaslakFaturaOlustur
      - efaturaBtnTaslakFaturalandir
      - efaturaBtnTaslakPdfindir
      - efaturaBtnTaslakRapor
      - efaturaBtnTaslakSil
      - efaturaBtnTaslakXmlIndir
      - efaturaBtnTaslakYazdir
      - efaturaFaturaListesiToolStripMenuItem
      - efaturaFaturaListesiToolStripMenuItem1
      - efaturaMuKellefliStesiToolStripMenuItem
      - efaturaOnayBekleyenlerToolStripMenuItem
      - efaturaOnayBekleyenlerToolStripMenuItem1
      - efaturaOnayBekliyorToolStripMenuItem
      - efaturaTAslaklarToolStripMenuItem
      - personelTakip
      - stokBtnSubedenAktar
      - stoksuzUrunEkleme
      - teklifBtnAlinanSiparisIrsaliyeDonustur
      - teklifBtnAlinanTeklifVerilenSipariseDonustur
      - teklifBtnBasTeklifSiparis
      - teklifBtnDuzeltTeklifSiparis
      - teklifBtnIptalEtTeklifSiparis
      - teklifBtnRaporAl
      - teklifBtnSilTeklifSiparis
      - teklifBtnTeklifSiparis
      - teklifBtnVerilenSiparisFaturaDonustur
      - teklifBtnVerilenTeklifAlinanSipariseDonustur
      - teklifBtnYeniAlinanSiparis
      - teklifBtnYeniAlinanTeklif
      - teklifBtnYeniVerilenSiparis
      - teklifBtnYeniVerilenTeklif
      type: object
    UserFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/User'
      type: object
    UsersYetki1:
      additionalProperties: false
      properties:
        deger:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        id:
          format: int32
          type: integer
        kullaniciId:
          format: int32
          nullable: true
          type: integer
        tag:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    UsersYetki1FilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/UsersYetki1'
      type: object
    Utsayar:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        token:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    UtsayarFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Utsayar'
      type: object
    Utslog:
      additionalProperties: false
      properties:
        id:
          format: int32
          type: integer
        islemTur:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        kullaniciAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        sonuc:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        subeAdi:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
        tarih:
          format: date-time
          nullable: true
          type: string
        urunBilgiJson:
          maxLength: 255
          minLength: 0
          nullable: true
          type: string
      type: object
    UtslogFilterHelper:
      additionalProperties: false
      properties:
        aranacakKelime:
          nullable: true
          type: string
        aranacakKelimeIncludes:
          items:
            type: string
          nullable: true
          type: array
        aranacakKelimeInt:
          format: int32
          type: integer
        aranacakKelimeSutuns:
          items:
            type: string
          nullable: true
          type: array
        baslangicTarih:
          format: date-time
          nullable: true
          type: string
        bitisTarih:
          format: date-time
          nullable: true
          type: string
        desc:
          type: boolean
        includes:
          items:
            type: string
          nullable: true
          type: array
        nullFiltrelemeYapilacaklar:
          items:
            type: string
          nullable: true
          type: array
        orderBy:
          nullable: true
          type: string
        pagingOptions:
          $ref: '#/components/schemas/DataPagingOptions'
        searchType:
          items:
            type: string
          nullable: true
          type: array
        subeAdi:
          nullable: true
          type: string
        tarihSutunAdi:
          nullable: true
          type: string
        veri:
          $ref: '#/components/schemas/Utslog'
      type: object
  securitySchemes:
    Bearer:
      description: islem yapabilmek icin bearer token a ihtiyaciniz vardir(bu kısmı
        değiştirebiliyorum)
      in: header
      name: Authorization
      type: apiKey
info:
  title: BİLSOFT
  version: v1
openapi: 3.0.1
paths:
  /api/Ajanda/add:
    post:
      description: Yeni bir ajanda kaydı ekler. Bu işlem, kullanıcıların ajandalarına
        yeni etkinlikler veya notlar eklemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Ajanda'
          application/json:
            schema:
              $ref: '#/components/schemas/Ajanda'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Ajanda'
          text/json:
            schema:
              $ref: '#/components/schemas/Ajanda'
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Ekleme
      tags:
      - Ajanda İşlemleri
  /api/Ajanda/addrange:
    post:
      description: Belirtilen aralıkta birden fazla ajanda kaydı ekler. Bu işlem,
        toplu ajanda eklemeleri yapmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Ajanda'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Ajanda'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Ajanda'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Ajanda'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Aralığı Ekleme
      tags:
      - Ajanda İşlemleri
  /api/Ajanda/delete:
    post:
      description: Ajanda silmek için kullanılır. Bu işlem, kullanıcıların belirli
        bir ajanda kaydını kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Ajanda'
          application/json:
            schema:
              $ref: '#/components/schemas/Ajanda'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Ajanda'
          text/json:
            schema:
              $ref: '#/components/schemas/Ajanda'
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Silme
      tags:
      - Ajanda İşlemleri
  /api/Ajanda/deletebyid:
    delete:
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: Ajanda Silme
      tags:
      - Ajanda İşlemleri
  /api/Ajanda/deleterange:
    post:
      description: Belirtilen aralıkta bulunan ajanda kayıtlarını toplu olarak siler.
        Bu işlem, birden fazla kaydın aynı anda temizlenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Ajanda'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Ajanda'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Ajanda'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Ajanda'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Ajanda Silme
      tags:
      - Ajanda İşlemleri
  /api/Ajanda/getall:
    post:
      description: Veritabanındaki tüm ajanda kayıtlarını getirir. Bu işlem, kullanıcıların
        tüm ajanda kayıtlarını listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/AjandaFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/AjandaFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AjandaFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/AjandaFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Ajandaları Getir
      tags:
      - Ajanda İşlemleri
  /api/Ajanda/getbyid:
    get:
      description: Belirtilen ID'ye sahip ajanda kaydını getirir. Bu işlem, belirli
        bir ajanda kaydını görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Ajanda Getir
      tags:
      - Ajanda İşlemleri
  /api/Ajanda/update:
    put:
      description: Belirtilen ID'ye sahip ajanda kaydını günceller. Bu işlem, mevcut
        bir ajanda kaydındaki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Ajanda'
          application/json:
            schema:
              $ref: '#/components/schemas/Ajanda'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Ajanda'
          text/json:
            schema:
              $ref: '#/components/schemas/Ajanda'
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Güncelle
      tags:
      - Ajanda İşlemleri
  /api/Ajanda/updaterange:
    put:
      description: Birden fazla ajanda kaydını aynı anda günceller. Bu işlem, toplu
        düzenlemeler yapmak gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Ajanda'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Ajanda'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Ajanda'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Ajanda'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Ajanda Güncelleme
      tags:
      - Ajanda İşlemleri
  /api/AjandaDosya/add:
    post:
      description: Yeni bir ajanda dosyası ekler. Bu işlem, kullanıcıların ajandalarına
        dosya eklemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/AjandaDosya'
          application/json:
            schema:
              $ref: '#/components/schemas/AjandaDosya'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AjandaDosya'
          text/json:
            schema:
              $ref: '#/components/schemas/AjandaDosya'
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Dosyası Ekleme
      tags:
      - Ajanda Dosya İşlemleri
  /api/AjandaDosya/addrange:
    post:
      description: Belirtilen aralıkta birden fazla ajanda dosyası ekler. Bu işlem,
        toplu dosya eklemeleri yapmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaDosya'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaDosya'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaDosya'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaDosya'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Dosyası Aralığı Ekleme
      tags:
      - Ajanda Dosya İşlemleri
  /api/AjandaDosya/delete:
    post:
      description: Belirtilen ID'ye sahip ajanda dosyasını siler. Bu işlem, kullanıcıların
        belirli bir ajanda dosyasını kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/AjandaDosya'
          application/json:
            schema:
              $ref: '#/components/schemas/AjandaDosya'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AjandaDosya'
          text/json:
            schema:
              $ref: '#/components/schemas/AjandaDosya'
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Dosyası Silme
      tags:
      - Ajanda Dosya İşlemleri
  /api/AjandaDosya/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip ajanda dosyasını siler. Bu işlem, belirli
        bir dosyanın kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Ajanda Dosyası Silme
      tags:
      - Ajanda Dosya İşlemleri
  /api/AjandaDosya/deleterange:
    post:
      description: Belirtilen aralıkta bulunan ajanda dosyalarını toplu olarak siler.
        Bu işlem, birden fazla dosyanın aynı anda temizlenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaDosya'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaDosya'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaDosya'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaDosya'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Ajanda Dosyası Silme
      tags:
      - Ajanda Dosya İşlemleri
  /api/AjandaDosya/getall:
    post:
      description: Veritabanındaki tüm ajanda dosyalarını getirir. Bu işlem, kullanıcıların
        tüm dosyaları listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/AjandaDosyaFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/AjandaDosyaFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AjandaDosyaFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/AjandaDosyaFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Ajanda Dosyalarını Getir
      tags:
      - Ajanda Dosya İşlemleri
  /api/AjandaDosya/getbyid:
    get:
      description: Belirtilen ID'ye sahip ajanda dosyasını getirir. Bu işlem, belirli
        bir ajanda dosyasını görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Ajanda Dosyası Getir
      tags:
      - Ajanda Dosya İşlemleri
  /api/AjandaDosya/update:
    put:
      description: Belirtilen ID'ye sahip ajanda dosyasını günceller. Bu işlem, mevcut
        bir ajanda dosyasındaki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/AjandaDosya'
          application/json:
            schema:
              $ref: '#/components/schemas/AjandaDosya'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AjandaDosya'
          text/json:
            schema:
              $ref: '#/components/schemas/AjandaDosya'
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Dosyası Güncelle
      tags:
      - Ajanda Dosya İşlemleri
  /api/AjandaDosya/updaterange:
    put:
      description: Belirtilen aralıkta bulunan ajanda dosyalarını toplu olarak günceller.
        Bu işlem, birden fazla dosyanın aynı anda güncellenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaDosya'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaDosya'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaDosya'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaDosya'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Dosyası Aralığı Güncelleme
      tags:
      - Ajanda Dosya İşlemleri
  /api/AjandaNotlar/add:
    post:
      description: Yeni bir ajanda notu ekler. Bu işlem, kullanıcıların ajandalarına
        not eklemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/AjandaNotlar'
          application/json:
            schema:
              $ref: '#/components/schemas/AjandaNotlar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AjandaNotlar'
          text/json:
            schema:
              $ref: '#/components/schemas/AjandaNotlar'
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Notları Ekleme
      tags:
      - Ajanda Notlar
  /api/AjandaNotlar/addrange:
    post:
      description: Belirtilen aralıkta birden fazla ajanda notu ekler. Bu işlem, toplu
        not eklemeleri yapmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaNotlar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaNotlar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaNotlar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaNotlar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Notları Aralığı Ekleme
      tags:
      - Ajanda Notlar
  /api/AjandaNotlar/delete:
    post:
      description: Belirtilen ID'ye sahip ajanda notunu siler. Bu işlem, kullanıcıların
        belirli bir ajanda notunu kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/AjandaNotlar'
          application/json:
            schema:
              $ref: '#/components/schemas/AjandaNotlar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AjandaNotlar'
          text/json:
            schema:
              $ref: '#/components/schemas/AjandaNotlar'
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Notları Silme
      tags:
      - Ajanda Notlar
  /api/AjandaNotlar/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip ajanda notunu siler. Bu işlem, belirli bir
        notun kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Ajanda Notu Silme
      tags:
      - Ajanda Notlar
  /api/AjandaNotlar/deleterange:
    post:
      description: Belirtilen aralıkta bulunan ajanda notlarını toplu olarak siler.
        Bu işlem, birden fazla notun aynı anda temizlenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaNotlar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaNotlar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaNotlar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaNotlar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Ajanda Notları Silme
      tags:
      - Ajanda Notlar
  /api/AjandaNotlar/getall:
    post:
      description: Veritabanındaki tüm ajanda notlarını getirir. Bu işlem, kullanıcıların
        tüm notları listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/AjandaNotlarFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/AjandaNotlarFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AjandaNotlarFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/AjandaNotlarFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Ajanda Notlarını Getir
      tags:
      - Ajanda Notlar
  /api/AjandaNotlar/getbyid:
    get:
      description: Belirtilen ID'ye sahip ajanda notunu getirir. Bu işlem, belirli
        bir ajanda notunu görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Ajanda Notu Getir
      tags:
      - Ajanda Notlar
  /api/AjandaNotlar/update:
    put:
      description: Belirtilen ID'ye sahip ajanda notunu günceller. Bu işlem, mevcut
        bir ajanda notundaki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/AjandaNotlar'
          application/json:
            schema:
              $ref: '#/components/schemas/AjandaNotlar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AjandaNotlar'
          text/json:
            schema:
              $ref: '#/components/schemas/AjandaNotlar'
        required: true
      responses:
        '200':
          description: Success
      summary: Ajanda Notu Güncelle
      tags:
      - Ajanda Notlar
  /api/AjandaNotlar/updaterange:
    put:
      description: Belirtilen aralıkta bulunan ajanda notlarını toplu olarak günceller.
        Bu işlem, birden fazla notun aynı anda güncellenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaNotlar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaNotlar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaNotlar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/AjandaNotlar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Ajanda Notları Güncelleme
      tags:
      - Ajanda Notlar
  /api/ApiKullanici/add:
    post:
      description: Yeni bir ApiKullanıcı ekler. Bu işlem, sistemde yeni kullanıcılar
        oluşturmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApiKullanici'
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKullanici'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApiKullanici'
          text/json:
            schema:
              $ref: '#/components/schemas/ApiKullanici'
        required: true
      responses:
        '200':
          description: Success
      summary: ApiKullanıcı Ekleme
      tags:
      - Api Kullanici
  /api/ApiKullanici/addrange:
    post:
      description: Belirtilen aralıkta birden fazla ApiKullanıcı ekler. Bu işlem,
        toplu kullanıcı eklemeleri yapmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/ApiKullanici'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ApiKullanici'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/ApiKullanici'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ApiKullanici'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: ApiKullanıcı Aralığı Ekleme
      tags:
      - Api Kullanici
  /api/ApiKullanici/delete:
    post:
      description: Belirtilen ID'ye sahip ApiKullanıcıyı siler. Bu işlem, kullanıcıları
        sistemden kaldırmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApiKullanici'
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKullanici'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApiKullanici'
          text/json:
            schema:
              $ref: '#/components/schemas/ApiKullanici'
        required: true
      responses:
        '200':
          description: Success
      summary: ApiKullanıcı Silme
      tags:
      - Api Kullanici
  /api/ApiKullanici/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip ApiKullanıcıyı siler. Bu işlem, belirli
        bir kullanıcıyı sistemden kaldırmak için kullanılır.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile ApiKullanıcı Silme
      tags:
      - Api Kullanici
  /api/ApiKullanici/deleterange:
    post:
      description: Belirtilen aralıkta bulunan ApiKullanıcıları toplu olarak siler.
        Bu işlem, birden fazla kullanıcıyı aynı anda kaldırmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/ApiKullanici'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ApiKullanici'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/ApiKullanici'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ApiKullanici'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu ApiKullanıcı Silme
      tags:
      - Api Kullanici
  /api/ApiKullanici/getall:
    post:
      description: Veritabanındaki tüm ApiKullanıcıları getirir. Bu işlem, tüm kullanıcıları
        listelemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApiKullaniciFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKullaniciFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApiKullaniciFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/ApiKullaniciFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm ApiKullanıcıları Getir
      tags:
      - Api Kullanici
  /api/ApiKullanici/getbyid:
    get:
      description: Belirtilen ID'ye sahip ApiKullanıcıyı getirir. Bu işlem, belirli
        bir kullanıcıyı görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile ApiKullanıcı Getir
      tags:
      - Api Kullanici
  /api/ApiKullanici/update:
    put:
      description: Belirtilen ID'ye sahip ApiKullanıcıyı günceller. Bu işlem, mevcut
        bir kullanıcının bilgilerini güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/ApiKullanici'
          application/json:
            schema:
              $ref: '#/components/schemas/ApiKullanici'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/ApiKullanici'
          text/json:
            schema:
              $ref: '#/components/schemas/ApiKullanici'
        required: true
      responses:
        '200':
          description: Success
      summary: ApiKullanıcı Güncelle
      tags:
      - Api Kullanici
  /api/ApiKullanici/updaterange:
    put:
      description: Belirtilen aralıkta bulunan ApiKullanıcıları toplu olarak günceller.
        Bu işlem, birden fazla kullanıcının aynı anda güncellenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/ApiKullanici'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ApiKullanici'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/ApiKullanici'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/ApiKullanici'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu ApiKullanıcı Güncelleme
      tags:
      - Api Kullanici
  /api/Auth/GirisYap:
    post:
      description: Kullanıcıların sisteme giriş yapmalarını sağlar. Bu işlem, kullanıcı
        kimlik doğrulama ve oturum açma işlemleri için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/GirisYapRequestDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/GirisYapRequestDTO'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GirisYapRequestDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/GirisYapRequestDTO'
        required: true
      responses:
        '200':
          description: Success
      summary: Giriş Yap
      tags:
      - Auth
  /api/Auth/GirisYapDonemGetir:
    post:
      description: Kullanıcının giriş yaptığı dönemi getirir. Bu işlem, oturum açma
        tarihlerini veya dönemlerini kontrol etmek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/GirisYapDonemGetirRequestDTO'
          application/json:
            schema:
              $ref: '#/components/schemas/GirisYapDonemGetirRequestDTO'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/GirisYapDonemGetirRequestDTO'
          text/json:
            schema:
              $ref: '#/components/schemas/GirisYapDonemGetirRequestDTO'
        required: true
      responses:
        '200':
          description: Success
      summary: Giriş Yap Dönem Getir
      tags:
      - Auth
  /api/Auth/SifreUnuttum:
    post:
      description: Kullanıcının şifresini unuttuğu durumda yeni bir şifre talep eder.
        Bu işlem, şifre sıfırlama sürecini başlatır.
      parameters:
      - explode: true
        in: query
        name: mail
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: vergiNo
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          description: Success
      summary: Şifre Unuttum
      tags:
      - Auth
  /api/Auth/smsDogrulama:
    post:
      description: Kullanıcının telefon numarasına gönderilen SMS kodunu doğrular.
        Bu işlem, kullanıcıların kimliklerini doğrulamak için kullanılır.
      parameters:
      - explode: true
        in: query
        name: Cep
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: smsKod
        required: false
        schema:
          type: string
        style: form
      responses:
        '200':
          description: Success
      summary: SMS Doğrulama
      tags:
      - Auth
  /api/Auth/smsKodGonder:
    post:
      description: Kullanıcının telefon numarasına bir SMS kodu gönderir. Bu işlem,
        kimlik doğrulama veya şifre sıfırlama için kullanılan bir kodu kullanıcıya
        iletir.
      parameters:
      - explode: true
        in: query
        name: kullaniciSifre
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: Ip
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Firma'
          application/json:
            schema:
              $ref: '#/components/schemas/Firma'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Firma'
          text/json:
            schema:
              $ref: '#/components/schemas/Firma'
        required: true
      responses:
        '200':
          description: Success
      summary: SMS Kod Gönder
      tags:
      - Auth
  /api/Ayar/add:
    post:
      description: Yeni bir ayar ekler. Bu işlem, sistemde yeni ayarlar oluşturmak
        için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Ayar'
          application/json:
            schema:
              $ref: '#/components/schemas/Ayar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Ayar'
          text/json:
            schema:
              $ref: '#/components/schemas/Ayar'
        required: true
      responses:
        '200':
          description: Success
      summary: Ayar Ekleme
      tags:
      - Ayar
  /api/Ayar/addrange:
    post:
      description: Belirtilen aralıkta birden fazla ayar ekler. Bu işlem, toplu ayar
        eklemeleri yapmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Ayar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Ayar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Ayar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Ayar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Ayar Aralığı Ekleme
      tags:
      - Ayar
  /api/Ayar/delete:
    post:
      description: Belirtilen ID'ye sahip ayarı siler. Bu işlem, kullanıcıların belirli
        ayarları sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Ayar'
          application/json:
            schema:
              $ref: '#/components/schemas/Ayar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Ayar'
          text/json:
            schema:
              $ref: '#/components/schemas/Ayar'
        required: true
      responses:
        '200':
          description: Success
      summary: Ayar Silme
      tags:
      - Ayar
  /api/Ayar/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip ayarı siler. Bu işlem, belirli bir ayarın
        sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Ayar Silme
      tags:
      - Ayar
  /api/Ayar/deleterange:
    post:
      description: Belirtilen aralıkta bulunan ayarları toplu olarak siler. Bu işlem,
        birden fazla ayarın aynı anda temizlenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Ayar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Ayar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Ayar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Ayar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Ayar Silme
      tags:
      - Ayar
  /api/Ayar/getall:
    post:
      description: Veritabanındaki tüm ayarları getirir. Bu işlem, kullanıcıların
        tüm ayarları listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/AyarFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/AyarFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AyarFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/AyarFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Ayarları Getir
      tags:
      - Ayar
  /api/Ayar/getbyid:
    get:
      description: Belirtilen ID'ye sahip ayarı getirir. Bu işlem, belirli bir ayarı
        görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Ayar Getir
      tags:
      - Ayar
  /api/Ayar/update:
    put:
      description: Belirtilen ID'ye sahip ayarı günceller. Bu işlem, mevcut bir ayardaki
        bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Ayar'
          application/json:
            schema:
              $ref: '#/components/schemas/Ayar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Ayar'
          text/json:
            schema:
              $ref: '#/components/schemas/Ayar'
        required: true
      responses:
        '200':
          description: Success
      summary: Ayar Güncelle
      tags:
      - Ayar
  /api/Ayar/updaterange:
    put:
      description: Belirtilen aralıkta bulunan ayarları toplu olarak günceller. Bu
        işlem, birden fazla ayarın aynı anda güncellenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Ayar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Ayar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Ayar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Ayar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Ayar Güncelleme
      tags:
      - Ayar
  /api/Ayarekmodul/add:
    post:
      description: Yeni bir ayar ek modülü ekler. Bu işlem, sistemde yeni modüller
        oluşturmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Ayarekmodul'
          application/json:
            schema:
              $ref: '#/components/schemas/Ayarekmodul'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Ayarekmodul'
          text/json:
            schema:
              $ref: '#/components/schemas/Ayarekmodul'
        required: true
      responses:
        '200':
          description: Success
      summary: Ayar Ek Modül Ekleme
      tags:
      - Ayar Ek Modül
  /api/Ayarekmodul/addrange:
    post:
      description: Belirtilen aralıkta birden fazla ayar ek modülü ekler. Bu işlem,
        toplu modül eklemeleri yapmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Ayarekmodul'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Ayarekmodul'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Ayarekmodul'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Ayarekmodul'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Ayar Ek Modül Aralığı Ekleme
      tags:
      - Ayar Ek Modül
  /api/Ayarekmodul/delete:
    post:
      description: Belirtilen ID'ye sahip ayar ek modülünü siler. Bu işlem, kullanıcıların
        belirli modülleri sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Ayarekmodul'
          application/json:
            schema:
              $ref: '#/components/schemas/Ayarekmodul'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Ayarekmodul'
          text/json:
            schema:
              $ref: '#/components/schemas/Ayarekmodul'
        required: true
      responses:
        '200':
          description: Success
      summary: Ayar Ek Modül Silme
      tags:
      - Ayar Ek Modül
  /api/Ayarekmodul/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip ayar ek modülünü siler. Bu işlem, belirli
        bir modülün sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Ayar Ek Modül Silme
      tags:
      - Ayar Ek Modül
  /api/Ayarekmodul/deleterange:
    post:
      description: Belirtilen aralıkta bulunan ayar ek modüllerini toplu olarak siler.
        Bu işlem, birden fazla modülün aynı anda temizlenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Ayarekmodul'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Ayarekmodul'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Ayarekmodul'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Ayarekmodul'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Ayar Ek Modül Silme
      tags:
      - Ayar Ek Modül
  /api/Ayarekmodul/getall:
    post:
      description: Veritabanındaki tüm ayar ek modüllerini getirir. Bu işlem, kullanıcıların
        tüm modülleri listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/AyarekmodulFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/AyarekmodulFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/AyarekmodulFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/AyarekmodulFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Ayar Ek Modüllerini Getir
      tags:
      - Ayar Ek Modül
  /api/Ayarekmodul/getbyid:
    get:
      description: Belirtilen ID'ye sahip ayar ek modülünü getirir. Bu işlem, belirli
        bir modülü görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Ayar Ek Modül Getir
      tags:
      - Ayar Ek Modül
  /api/Ayarekmodul/update:
    put:
      description: Belirtilen ID'ye sahip ayar ek modülünü günceller. Bu işlem, mevcut
        bir modülde yapılan bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Ayarekmodul'
          application/json:
            schema:
              $ref: '#/components/schemas/Ayarekmodul'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Ayarekmodul'
          text/json:
            schema:
              $ref: '#/components/schemas/Ayarekmodul'
        required: true
      responses:
        '200':
          description: Success
      summary: Ayar Ek Modül Güncelle
      tags:
      - Ayar Ek Modül
  /api/Ayarekmodul/updaterange:
    put:
      description: Belirtilen aralıkta bulunan ayar ek modüllerini toplu olarak günceller.
        Bu işlem, birden fazla modülün aynı anda güncellenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Ayarekmodul'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Ayarekmodul'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Ayarekmodul'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Ayarekmodul'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Ayar Ek Modüllerini Güncelleme
      tags:
      - Ayar Ek Modül
  /api/Banka/ControlDelete:
    post:
      description: Belirtilen kriterlere göre banka kayıtlarını siler. Bu işlem, belirli
        bankaların sistemden kaldırılması için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Banka'
          application/json:
            schema:
              $ref: '#/components/schemas/Banka'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Banka'
          text/json:
            schema:
              $ref: '#/components/schemas/Banka'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka Kontrol Silme
      tags:
      - Banka
  /api/Banka/ControlDeleteById:
    delete:
      description: Belirtilen ID'ye sahip banka kaydını siler. Bu işlem, belirli bir
        bankanın sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Banka Kontrol Silme
      tags:
      - Banka
  /api/Banka/GetListWithBakiye:
    post:
      description: Banka hesaplarını ve bu hesapların bakiye bilgilerini getirir.
        Bu işlem, kullanıcıların banka hesaplarını ve bakiyelerini görüntülemelerini
        sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka Listeleme ve Bakiye Getirme
      tags:
      - Banka
  /api/Banka/add:
    post:
      description: Yeni bir banka kaydı ekler. Bu işlem, sisteme yeni banka bilgileri
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Banka'
          application/json:
            schema:
              $ref: '#/components/schemas/Banka'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Banka'
          text/json:
            schema:
              $ref: '#/components/schemas/Banka'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka Ekleme
      tags:
      - Banka
  /api/Banka/addrange:
    post:
      description: Belirtilen aralıkta birden fazla banka kaydı ekler. Bu işlem, toplu
        banka eklemeleri yapmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Banka'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Banka'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Banka'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Banka'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Banka Aralığı Ekleme
      tags:
      - Banka
  /api/Banka/delete:
    post:
      description: Belirtilen ID'ye sahip banka kaydını siler. Bu işlem, kullanıcıların
        belirli bir banka kaydını sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Banka'
          application/json:
            schema:
              $ref: '#/components/schemas/Banka'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Banka'
          text/json:
            schema:
              $ref: '#/components/schemas/Banka'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka Silme
      tags:
      - Banka
  /api/Banka/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip banka kaydını siler. Bu işlem, belirli bir
        bankanın sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Banka Silme
      tags:
      - Banka
  /api/Banka/deleterange:
    post:
      description: Belirtilen aralıkta bulunan banka kayıtlarını toplu olarak siler.
        Bu işlem, birden fazla bankanın aynı anda kaldırılması gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Banka'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Banka'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Banka'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Banka'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Banka Silme
      tags:
      - Banka
  /api/Banka/getall:
    post:
      description: Veritabanındaki tüm banka kayıtlarını getirir. Bu işlem, kullanıcıların
        tüm bankaları listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Banka Kayıtlarını Getir
      tags:
      - Banka
  /api/Banka/getbyid:
    get:
      description: Belirtilen ID'ye sahip banka kaydını getirir. Bu işlem, belirli
        bir bankayı görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Banka Getir
      tags:
      - Banka
  /api/Banka/update:
    put:
      description: Belirtilen ID'ye sahip banka kaydını günceller. Bu işlem, mevcut
        bir bankadaki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Banka'
          application/json:
            schema:
              $ref: '#/components/schemas/Banka'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Banka'
          text/json:
            schema:
              $ref: '#/components/schemas/Banka'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka Güncelle
      tags:
      - Banka
  /api/Banka/updaterange:
    put:
      description: Belirtilen aralıkta bulunan banka kayıtlarını toplu olarak günceller.
        Bu işlem, birden fazla bankanın aynı anda güncellenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Banka'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Banka'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Banka'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Banka'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Banka Güncelleme
      tags:
      - Banka
  /api/BankaIsl/BankaIslBorcAlacakBakiye:
    post:
      description: Banka işlemlerinin borç ve alacak bakiyelerini getirir. Bu işlem,
        bankadaki borç ve alacak durumunu incelemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka İşlem Borç/Alacak Bakiye Getirme
      tags:
      - BankaIsl
  /api/BankaIsl/BankaIslemYap:
    post:
      description: Banka üzerinde bir işlem gerçekleştirir. Bu işlem, banka hesapları
        arasında para transferi veya diğer işlemleri yönetmek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka İşlemi Yapma
      tags:
      - BankaIsl
  /api/BankaIsl/GetListAll:
    post:
      description: Veritabanındaki tüm banka işlemlerini listeler. Bu işlem, tüm banka
        işlemlerinin dökümünü almak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Banka İşlemlerini Listeleme
      tags:
      - BankaIsl
  /api/BankaIsl/GetListAllWithBakiye:
    post:
      description: Banka işlemlerini ve ilgili bakiyeleri getirir. Bu işlem, işlemlerle
        birlikte bakiye bilgilerini de gösterir.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Banka İşlemlerini ve Bakiyelerini Getirme
      tags:
      - BankaIsl
  /api/BankaIsl/GetListWithBakiye:
    post:
      description: Belirtilen banka işlemlerini ve ilgili bakiyeleri getirir. Bu işlem,
        belirli işlemlerle ilişkili bakiye bilgilerini görüntülemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka İşlemlerini ve Bakiyelerini Getirme
      tags:
      - BankaIsl
  /api/BankaIsl/add:
    post:
      description: Yeni bir banka işlemi ekler. Bu işlem, sisteme yeni banka işlemleri
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka İşlemi Ekleme
      tags:
      - BankaIsl
  /api/BankaIsl/addrange:
    post:
      description: Belirtilen aralıkta birden fazla banka işlemi ekler. Bu işlem,
        toplu banka işlemleri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/BankaIsl'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/BankaIsl'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/BankaIsl'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/BankaIsl'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Banka İşlemi Aralığı Ekleme
      tags:
      - BankaIsl
  /api/BankaIsl/delete:
    post:
      description: Belirtilen ID'ye sahip banka işlemini siler. Bu işlem, belirli
        bir banka işlemini sistemden kaldırmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka İşlemi Silme
      tags:
      - BankaIsl
  /api/BankaIsl/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip banka işlemini siler. Bu işlem, belirli
        bir işlemin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Banka İşlemi Silme
      tags:
      - BankaIsl
  /api/BankaIsl/deleterange:
    post:
      description: Belirtilen aralıkta bulunan banka işlemlerini toplu olarak siler.
        Bu işlem, birden fazla işlemi aynı anda kaldırmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/BankaIsl'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/BankaIsl'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/BankaIsl'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/BankaIsl'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Banka İşlemi Silme
      tags:
      - BankaIsl
  /api/BankaIsl/getall:
    post:
      description: Veritabanındaki tüm banka işlemlerini getirir. Bu işlem, kullanıcıların
        tüm banka işlemlerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Banka İşlemlerini Getir
      tags:
      - BankaIsl
  /api/BankaIsl/getbyid:
    get:
      description: Belirtilen ID'ye sahip banka işlemini getirir. Bu işlem, belirli
        bir işlemi görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Banka İşlemi Getir
      tags:
      - BankaIsl
  /api/BankaIsl/update:
    put:
      description: Belirtilen ID'ye sahip banka işlemini günceller. Bu işlem, mevcut
        bir bankadaki işlemin bilgilerini güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka İşlemi Güncelle
      tags:
      - BankaIsl
  /api/BankaIsl/updaterange:
    put:
      description: Belirtilen aralıkta bulunan banka işlemlerini toplu olarak günceller.
        Bu işlem, birden fazla bankanın aynı anda güncellenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/BankaIsl'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/BankaIsl'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/BankaIsl'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/BankaIsl'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Banka İşlemi Güncelleme
      tags:
      - BankaIsl
  /api/BankaKullanicisifre/add:
    post:
      description: Yeni bir banka kullanıcı şifresi ekler. Bu işlem, sistemde yeni
        kullanıcı şifreleri oluşturmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifre'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifre'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifre'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifre'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka Kullanıcı Şifresi Ekleme
      tags:
      - Banka Kullanici Şifre İşlemleri
  /api/BankaKullanicisifre/addrange:
    post:
      description: Belirtilen aralıkta birden fazla banka kullanıcı şifresi ekler.
        Bu işlem, toplu kullanıcı şifreleri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/BankaKullanicisifre'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/BankaKullanicisifre'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/BankaKullanicisifre'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/BankaKullanicisifre'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Banka Kullanıcı Şifresi Aralığı Ekleme
      tags:
      - Banka Kullanici Şifre İşlemleri
  /api/BankaKullanicisifre/delete:
    post:
      description: Belirtilen ID'ye sahip banka kullanıcı şifresini siler. Bu işlem,
        kullanıcıların belirli şifreleri sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifre'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifre'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifre'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifre'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka Kullanıcı Şifresi Silme
      tags:
      - Banka Kullanici Şifre İşlemleri
  /api/BankaKullanicisifre/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip banka kullanıcı şifresini siler. Bu işlem,
        belirli bir şifrenin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Banka Kullanıcı Şifresi Silme
      tags:
      - Banka Kullanici Şifre İşlemleri
  /api/BankaKullanicisifre/deleterange:
    post:
      description: Belirtilen aralıkta bulunan banka kullanıcı şifrelerini toplu olarak
        siler. Bu işlem, birden fazla şifrenin aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/BankaKullanicisifre'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/BankaKullanicisifre'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/BankaKullanicisifre'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/BankaKullanicisifre'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Banka Kullanıcı Şifresi Silme
      tags:
      - Banka Kullanici Şifre İşlemleri
  /api/BankaKullanicisifre/getall:
    post:
      description: Veritabanındaki tüm banka kullanıcı şifrelerini getirir. Bu işlem,
        kullanıcıların tüm şifreleri listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifreFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifreFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifreFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifreFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Banka Kullanıcı Şifrelerini Getir
      tags:
      - Banka Kullanici Şifre İşlemleri
  /api/BankaKullanicisifre/getbyid:
    get:
      description: Belirtilen ID'ye sahip banka kullanıcı şifresini getirir. Bu işlem,
        belirli bir şifreyi görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Banka Kullanıcı Şifresi Getir
      tags:
      - Banka Kullanici Şifre İşlemleri
  /api/BankaKullanicisifre/update:
    put:
      description: Belirtilen ID'ye sahip banka kullanıcı şifresini günceller. Bu
        işlem, mevcut bir şifrede yapılan değişiklikleri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifre'
          application/json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifre'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifre'
          text/json:
            schema:
              $ref: '#/components/schemas/BankaKullanicisifre'
        required: true
      responses:
        '200':
          description: Success
      summary: Banka Kullanıcı Şifresi Güncelle
      tags:
      - Banka Kullanici Şifre İşlemleri
  /api/BankaKullanicisifre/updaterange:
    put:
      description: Belirtilen aralıkta bulunan banka kullanıcı şifrelerini toplu olarak
        günceller. Bu işlem, birden fazla şifrenin aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/BankaKullanicisifre'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/BankaKullanicisifre'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/BankaKullanicisifre'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/BankaKullanicisifre'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Banka Kullanıcı Şifrelerini Güncelleme
      tags:
      - Banka Kullanici Şifre İşlemleri
  /api/Bodrotablo/add:
    post:
      description: Yeni bir bordro tablosu ekler. Bu işlem, sisteme yeni bordro kayıtları
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Bodrotablo'
          application/json:
            schema:
              $ref: '#/components/schemas/Bodrotablo'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Bodrotablo'
          text/json:
            schema:
              $ref: '#/components/schemas/Bodrotablo'
        required: true
      responses:
        '200':
          description: Success
      summary: Bordro Tablosu Ekleme
      tags:
      - Bodro Tablo
  /api/Bodrotablo/addrange:
    post:
      description: Belirtilen aralıkta birden fazla bordro tablosu ekler. Bu işlem,
        toplu bordro eklemeleri yapmak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Bodrotablo'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Bodrotablo'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Bodrotablo'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Bodrotablo'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Bordro Tablosu Aralığı Ekleme
      tags:
      - Bodro Tablo
  /api/Bodrotablo/delete:
    post:
      description: Belirtilen ID'ye sahip bordro tablosunu siler. Bu işlem, kullanıcıların
        belirli bordro tablolarını sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Bodrotablo'
          application/json:
            schema:
              $ref: '#/components/schemas/Bodrotablo'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Bodrotablo'
          text/json:
            schema:
              $ref: '#/components/schemas/Bodrotablo'
        required: true
      responses:
        '200':
          description: Success
      summary: Bordro Tablosu Silme
      tags:
      - Bodro Tablo
  /api/Bodrotablo/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip bordro tablosunu siler. Bu işlem, belirli
        bir bordro kaydının sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Bordro Tablosu Silme
      tags:
      - Bodro Tablo
  /api/Bodrotablo/deleterange:
    post:
      description: Belirtilen aralıkta bulunan bordro tablolarını toplu olarak siler.
        Bu işlem, birden fazla bordro kaydının aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Bodrotablo'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Bodrotablo'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Bodrotablo'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Bodrotablo'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Bordro Tablosu Silme
      tags:
      - Bodro Tablo
  /api/Bodrotablo/getall:
    post:
      description: Veritabanındaki tüm bordro tablolarını getirir. Bu işlem, kullanıcıların
        tüm bordro kayıtlarını listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BodrotabloFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/BodrotabloFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BodrotabloFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/BodrotabloFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Bordro Tablolarını Getir
      tags:
      - Bodro Tablo
  /api/Bodrotablo/getbyid:
    get:
      description: Belirtilen ID'ye sahip bordro tablosunu getirir. Bu işlem, belirli
        bir bordro kaydını görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Bordro Tablosu Getir
      tags:
      - Bodro Tablo
  /api/Bodrotablo/update:
    put:
      description: Belirtilen ID'ye sahip bordro tablosunu günceller. Bu işlem, mevcut
        bir bordro kaydındaki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Bodrotablo'
          application/json:
            schema:
              $ref: '#/components/schemas/Bodrotablo'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Bodrotablo'
          text/json:
            schema:
              $ref: '#/components/schemas/Bodrotablo'
        required: true
      responses:
        '200':
          description: Success
      summary: Bordro Tablosu Güncelle
      tags:
      - Bodro Tablo
  /api/Bodrotablo/updaterange:
    put:
      description: Belirtilen aralıkta bulunan bordro tablolarını toplu olarak günceller.
        Bu işlem, birden fazla bordro kaydının aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Bodrotablo'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Bodrotablo'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Bodrotablo'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Bodrotablo'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Bordro Tablosu Güncelleme
      tags:
      - Bodro Tablo
  /api/Bordroayar/add:
    post:
      description: Yeni bir bordro ayarı ekler. Bu işlem, sisteme yeni bordro ayarları
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Bordroayar'
          application/json:
            schema:
              $ref: '#/components/schemas/Bordroayar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Bordroayar'
          text/json:
            schema:
              $ref: '#/components/schemas/Bordroayar'
        required: true
      responses:
        '200':
          description: Success
      summary: Bordro Ayarı Ekleme
      tags:
      - Bordro Ayar
  /api/Bordroayar/addrange:
    post:
      description: Belirtilen aralıkta birden fazla bordro ayarı ekler. Bu işlem,
        toplu bordro ayarları eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Bordroayar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Bordroayar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Bordroayar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Bordroayar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Bordro Ayarı Aralığı Ekleme
      tags:
      - Bordro Ayar
  /api/Bordroayar/delete:
    post:
      description: Belirtilen ID'ye sahip bordro ayarını siler. Bu işlem, kullanıcıların
        belirli bordro ayarlarını sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Bordroayar'
          application/json:
            schema:
              $ref: '#/components/schemas/Bordroayar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Bordroayar'
          text/json:
            schema:
              $ref: '#/components/schemas/Bordroayar'
        required: true
      responses:
        '200':
          description: Success
      summary: Bordro Ayarı Silme
      tags:
      - Bordro Ayar
  /api/Bordroayar/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip bordro ayarını siler. Bu işlem, belirli
        bir bordro ayarının sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Bordro Ayarı Silme
      tags:
      - Bordro Ayar
  /api/Bordroayar/deleterange:
    post:
      description: Belirtilen aralıkta bulunan bordro ayarlarını toplu olarak siler.
        Bu işlem, birden fazla bordro ayarının aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Bordroayar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Bordroayar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Bordroayar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Bordroayar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Bordro Ayarı Silme
      tags:
      - Bordro Ayar
  /api/Bordroayar/getall:
    post:
      description: Veritabanındaki tüm bordro ayarlarını getirir. Bu işlem, kullanıcıların
        tüm bordro ayarlarını listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BordroayarFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/BordroayarFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BordroayarFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/BordroayarFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Bordro Ayarlarını Getir
      tags:
      - Bordro Ayar
  /api/Bordroayar/getbyid:
    get:
      description: Belirtilen ID'ye sahip bordro ayarını getirir. Bu işlem, belirli
        bir bordro ayarını görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Bordro Ayarı Getir
      tags:
      - Bordro Ayar
  /api/Bordroayar/update:
    put:
      description: Belirtilen ID'ye sahip bordro ayarını günceller. Bu işlem, mevcut
        bir bordro ayarındaki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Bordroayar'
          application/json:
            schema:
              $ref: '#/components/schemas/Bordroayar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Bordroayar'
          text/json:
            schema:
              $ref: '#/components/schemas/Bordroayar'
        required: true
      responses:
        '200':
          description: Success
      summary: Bordro Ayarı Güncelle
      tags:
      - Bordro Ayar
  /api/Bordroayar/updaterange:
    put:
      description: Belirtilen aralıkta bulunan bordro ayarlarını toplu olarak günceller.
        Bu işlem, birden fazla bordro ayarının aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Bordroayar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Bordroayar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Bordroayar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Bordroayar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Bordro Ayarlarını Güncelleme
      tags:
      - Bordro Ayar
  /api/Bordrovergidilimayar/add:
    post:
      description: Yeni bir bordro vergi dilimi ayarı ekler. Bu işlem, sisteme yeni
        vergi dilimi ayarları eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Bordrovergidilimayar'
          application/json:
            schema:
              $ref: '#/components/schemas/Bordrovergidilimayar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Bordrovergidilimayar'
          text/json:
            schema:
              $ref: '#/components/schemas/Bordrovergidilimayar'
        required: true
      responses:
        '200':
          description: Success
      summary: Bordro Vergi Dilimi Ayarı Ekleme
      tags:
      - Bordro Vergi Dilim Ayar
  /api/Bordrovergidilimayar/addrange:
    post:
      description: Belirtilen aralıkta birden fazla bordro vergi dilimi ayarı ekler.
        Bu işlem, toplu vergi dilimi ayarları eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Bordrovergidilimayar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Bordrovergidilimayar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Bordrovergidilimayar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Bordrovergidilimayar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Bordro Vergi Dilimi Ayarı Aralığı Ekleme
      tags:
      - Bordro Vergi Dilim Ayar
  /api/Bordrovergidilimayar/delete:
    post:
      description: Belirtilen ID'ye sahip bordro vergi dilimi ayarını siler. Bu işlem,
        kullanıcıların belirli vergi dilimi ayarlarını sistemden kaldırmalarına olanak
        tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Bordrovergidilimayar'
          application/json:
            schema:
              $ref: '#/components/schemas/Bordrovergidilimayar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Bordrovergidilimayar'
          text/json:
            schema:
              $ref: '#/components/schemas/Bordrovergidilimayar'
        required: true
      responses:
        '200':
          description: Success
      summary: Bordro Vergi Dilimi Ayarı Silme
      tags:
      - Bordro Vergi Dilim Ayar
  /api/Bordrovergidilimayar/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip bordro vergi dilimi ayarını siler. Bu işlem,
        belirli bir vergi dilimi ayarının sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Bordro Vergi Dilimi Ayarı Silme
      tags:
      - Bordro Vergi Dilim Ayar
  /api/Bordrovergidilimayar/deleterange:
    post:
      description: Belirtilen aralıkta bulunan bordro vergi dilimi ayarlarını toplu
        olarak siler. Bu işlem, birden fazla vergi dilimi ayarının aynı anda kaldırılması
        gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Bordrovergidilimayar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Bordrovergidilimayar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Bordrovergidilimayar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Bordrovergidilimayar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Bordro Vergi Dilimi Ayarı Silme
      tags:
      - Bordro Vergi Dilim Ayar
  /api/Bordrovergidilimayar/getall:
    post:
      description: Veritabanındaki tüm bordro vergi dilimi ayarlarını getirir. Bu
        işlem, kullanıcıların tüm vergi dilimi ayarlarını listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/BordrovergidilimayarFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/BordrovergidilimayarFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/BordrovergidilimayarFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/BordrovergidilimayarFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Bordro Vergi Dilimi Ayarlarını Getir
      tags:
      - Bordro Vergi Dilim Ayar
  /api/Bordrovergidilimayar/getbyid:
    get:
      description: Belirtilen ID'ye sahip bordro vergi dilimi ayarını getirir. Bu
        işlem, belirli bir vergi dilimi ayarını görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Bordro Vergi Dilimi Ayarı Getir
      tags:
      - Bordro Vergi Dilim Ayar
  /api/Bordrovergidilimayar/update:
    put:
      description: Belirtilen ID'ye sahip bordro vergi dilimi ayarını günceller. Bu
        işlem, mevcut bir vergi dilimi ayarındaki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Bordrovergidilimayar'
          application/json:
            schema:
              $ref: '#/components/schemas/Bordrovergidilimayar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Bordrovergidilimayar'
          text/json:
            schema:
              $ref: '#/components/schemas/Bordrovergidilimayar'
        required: true
      responses:
        '200':
          description: Success
      summary: Bordro Vergi Dilimi Ayarı Güncelle
      tags:
      - Bordro Vergi Dilim Ayar
  /api/Bordrovergidilimayar/updaterange:
    put:
      description: Belirtilen aralıkta bulunan bordro vergi dilimi ayarlarını toplu
        olarak günceller. Bu işlem, birden fazla vergi dilimi ayarının aynı anda güncellenmesi
        gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Bordrovergidilimayar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Bordrovergidilimayar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Bordrovergidilimayar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Bordrovergidilimayar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Bordro Vergi Dilimi Ayarlarını Güncelleme
      tags:
      - Bordro Vergi Dilim Ayar
  /api/CariAdresler/add:
    post:
      description: Yeni bir cari adres ekler. Bu işlem, sisteme yeni müşteri adresleri
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariAdresler'
          application/json:
            schema:
              $ref: '#/components/schemas/CariAdresler'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariAdresler'
          text/json:
            schema:
              $ref: '#/components/schemas/CariAdresler'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Adres Ekleme
      tags:
      - Cari Adresler
  /api/CariAdresler/addrange:
    post:
      description: Belirtilen aralıkta birden fazla cari adres ekler. Bu işlem, toplu
        müşteri adresleri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariAdresler'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariAdresler'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariAdresler'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariAdresler'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Adres Aralığı Ekleme
      tags:
      - Cari Adresler
  /api/CariAdresler/delete:
    post:
      description: Belirtilen ID'ye sahip cari adresi siler. Bu işlem, kullanıcıların
        belirli müşteri adreslerini sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariAdresler'
          application/json:
            schema:
              $ref: '#/components/schemas/CariAdresler'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariAdresler'
          text/json:
            schema:
              $ref: '#/components/schemas/CariAdresler'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Adres Silme
      tags:
      - Cari Adresler
  /api/CariAdresler/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip cari adresi siler. Bu işlem, belirli bir
        müşteri adresinin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Adres Silme
      tags:
      - Cari Adresler
  /api/CariAdresler/deleterange:
    post:
      description: Belirtilen aralıkta bulunan cari adresleri toplu olarak siler.
        Bu işlem, birden fazla müşteri adresinin aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariAdresler'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariAdresler'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariAdresler'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariAdresler'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Adres Silme
      tags:
      - Cari Adresler
  /api/CariAdresler/getall:
    post:
      description: Veritabanındaki tüm cari adresleri getirir. Bu işlem, kullanıcıların
        tüm müşteri adreslerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariAdreslerFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariAdreslerFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariAdreslerFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariAdreslerFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Cari Adresleri Getir
      tags:
      - Cari Adresler
  /api/CariAdresler/getbyid:
    get:
      description: Belirtilen ID'ye sahip cari adresi getirir. Bu işlem, belirli bir
        müşteri adresini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Adres Getir
      tags:
      - Cari Adresler
  /api/CariAdresler/update:
    put:
      description: Belirtilen ID'ye sahip cari adresi günceller. Bu işlem, mevcut
        bir müşteri adresindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariAdresler'
          application/json:
            schema:
              $ref: '#/components/schemas/CariAdresler'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariAdresler'
          text/json:
            schema:
              $ref: '#/components/schemas/CariAdresler'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Adres Güncelle
      tags:
      - Cari Adresler
  /api/CariAdresler/updaterange:
    put:
      description: Belirtilen aralıkta bulunan cari adresleri toplu olarak günceller.
        Bu işlem, birden fazla müşteri adresinin aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariAdresler'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariAdresler'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariAdresler'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariAdresler'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Adres Güncelleme
      tags:
      - Cari Adresler
  /api/CariBanka/add:
    post:
      description: Yeni bir cari banka ekler. Bu işlem, sisteme yeni müşteri banka
        bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariBanka'
          application/json:
            schema:
              $ref: '#/components/schemas/CariBanka'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariBanka'
          text/json:
            schema:
              $ref: '#/components/schemas/CariBanka'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Banka Ekleme
      tags:
      - Cari Banka
  /api/CariBanka/addrange:
    post:
      description: Belirtilen aralıkta birden fazla cari banka ekler. Bu işlem, toplu
        müşteri banka bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariBanka'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariBanka'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariBanka'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariBanka'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Banka Aralığı Ekleme
      tags:
      - Cari Banka
  /api/CariBanka/delete:
    post:
      description: Belirtilen ID'ye sahip cari banka bilgisini siler. Bu işlem, kullanıcıların
        belirli müşteri banka bilgilerini sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariBanka'
          application/json:
            schema:
              $ref: '#/components/schemas/CariBanka'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariBanka'
          text/json:
            schema:
              $ref: '#/components/schemas/CariBanka'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Banka Silme
      tags:
      - Cari Banka
  /api/CariBanka/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip cari banka bilgisini siler. Bu işlem, belirli
        bir müşteri banka bilgisinin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Banka Silme
      tags:
      - Cari Banka
  /api/CariBanka/deleterange:
    post:
      description: Belirtilen aralıkta bulunan cari banka bilgilerini toplu olarak
        siler. Bu işlem, birden fazla müşteri banka bilgisinin aynı anda kaldırılması
        gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariBanka'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariBanka'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariBanka'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariBanka'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Banka Silme
      tags:
      - Cari Banka
  /api/CariBanka/getall:
    post:
      description: Veritabanındaki tüm cari banka bilgilerini getirir. Bu işlem, kullanıcıların
        tüm müşteri banka bilgilerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariBankaFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariBankaFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariBankaFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariBankaFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Cari Banka Bilgilerini Getir
      tags:
      - Cari Banka
  /api/CariBanka/getbyid:
    get:
      description: Belirtilen ID'ye sahip cari banka bilgisini getirir. Bu işlem,
        belirli bir müşteri banka bilgisini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Banka Bilgisi Getir
      tags:
      - Cari Banka
  /api/CariBanka/update:
    put:
      description: Belirtilen ID'ye sahip cari banka bilgisini günceller. Bu işlem,
        mevcut bir müşteri banka bilgisindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariBanka'
          application/json:
            schema:
              $ref: '#/components/schemas/CariBanka'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariBanka'
          text/json:
            schema:
              $ref: '#/components/schemas/CariBanka'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Banka Bilgisi Güncelle
      tags:
      - Cari Banka
  /api/CariBanka/updaterange:
    put:
      description: Belirtilen aralıkta bulunan cari banka bilgilerini toplu olarak
        günceller. Bu işlem, birden fazla müşteri banka bilgisinin aynı anda güncellenmesi
        gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariBanka'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariBanka'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariBanka'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariBanka'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Banka Bilgilerini Güncelleme
      tags:
      - Cari Banka
  /api/CariGrup/add:
    post:
      description: Yeni bir cari grup ekler. Bu işlem, sisteme yeni müşteri grupları
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariGrup'
          application/json:
            schema:
              $ref: '#/components/schemas/CariGrup'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariGrup'
          text/json:
            schema:
              $ref: '#/components/schemas/CariGrup'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Grup Ekleme
      tags:
      - Cari Grup
  /api/CariGrup/addrange:
    post:
      description: Belirtilen aralıkta birden fazla cari grup ekler. Bu işlem, toplu
        müşteri grupları eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariGrup'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariGrup'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariGrup'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariGrup'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Grup Aralığı Ekleme
      tags:
      - Cari Grup
  /api/CariGrup/delete:
    post:
      description: Belirtilen ID'ye sahip cari grubu siler. Bu işlem, kullanıcıların
        belirli müşteri gruplarını sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariGrup'
          application/json:
            schema:
              $ref: '#/components/schemas/CariGrup'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariGrup'
          text/json:
            schema:
              $ref: '#/components/schemas/CariGrup'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Grup Silme
      tags:
      - Cari Grup
  /api/CariGrup/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip cari grubu siler. Bu işlem, belirli bir
        müşteri grubunun sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Grup Silme
      tags:
      - Cari Grup
  /api/CariGrup/deleterange:
    post:
      description: Belirtilen aralıkta bulunan cari grupları toplu olarak siler. Bu
        işlem, birden fazla müşteri grubunun aynı anda kaldırılması gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariGrup'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariGrup'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariGrup'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariGrup'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Grup Silme
      tags:
      - Cari Grup
  /api/CariGrup/getall:
    post:
      description: Veritabanındaki tüm cari grupları getirir. Bu işlem, kullanıcıların
        tüm müşteri gruplarını listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariGrupFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariGrupFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariGrupFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariGrupFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Cari Grupları Getir
      tags:
      - Cari Grup
  /api/CariGrup/getbyid:
    get:
      description: Belirtilen ID'ye sahip cari grubu getirir. Bu işlem, belirli bir
        müşteri grubunu görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Grup Getir
      tags:
      - Cari Grup
  /api/CariGrup/update:
    put:
      description: Belirtilen ID'ye sahip cari grubu günceller. Bu işlem, mevcut bir
        müşteri grubundaki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariGrup'
          application/json:
            schema:
              $ref: '#/components/schemas/CariGrup'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariGrup'
          text/json:
            schema:
              $ref: '#/components/schemas/CariGrup'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Grup Güncelle
      tags:
      - Cari Grup
  /api/CariGrup/updaterange:
    put:
      description: Belirtilen aralıkta bulunan cari grupları toplu olarak günceller.
        Bu işlem, birden fazla müşteri grubunun aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariGrup'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariGrup'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariGrup'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariGrup'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Grupları Güncelleme
      tags:
      - Cari Grup
  /api/CariIsl/CariIslemBorcAlacakBakiye:
    post:
      description: Cari işlemler için borç, alacak ve bakiye bilgilerini getirir.
        Bu işlem, müşterilerin finansal durumunu görüntülemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari İşlem Borç Alacak Bakiye
      tags:
      - CariIsl
  /api/CariIsl/CariIslemRapor:
    post:
      description: Cari işlemler için detaylı bir rapor oluşturur. Bu işlem, müşteri
        işlemlerinin analiz edilmesi için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari İşlem Raporu
      tags:
      - CariIsl
  /api/CariIsl/CariIslemYap:
    post:
      description: Yeni bir cari işlem gerçekleştirir. Bu işlem, sisteme yeni müşteri
        işlemleri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/CariIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/CariIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari İşlem Yapma
      tags:
      - CariIsl
  /api/CariIsl/GetListAll:
    post:
      description: Veritabanındaki tüm cari işlemleri listeler. Bu işlem, kullanıcıların
        tüm müşteri işlemlerini görüntülemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Cari İşlemleri Listele
      tags:
      - CariIsl
  /api/CariIsl/GetListAllWithBakiye:
    post:
      description: Cari işlemleri bakiye bilgileri ile birlikte listeler. Bu işlem,
        müşterilerin bakiye durumlarını incelemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Bakiye ile Tüm Cari İşlemleri Listele
      tags:
      - CariIsl
  /api/CariIsl/GetListWithBakiye:
    post:
      description: Belirtilen kriterlere göre cari işlemleri bakiye bilgileri ile
        birlikte listeler. Bu işlem, belirli müşteri işlemlerini bakiye durumları
        ile birlikte görüntülemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Bakiye ile Cari İşlemleri Listele
      tags:
      - CariIsl
  /api/CariIsl/add:
    post:
      description: Yeni bir cari işlem ekler. Bu işlem, sisteme yeni müşteri işlemleri
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/CariIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/CariIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari İşlem Ekleme
      tags:
      - CariIsl
  /api/CariIsl/addrange:
    post:
      description: Belirtilen aralıkta birden fazla cari işlem ekler. Bu işlem, toplu
        müşteri işlemleri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariIsl'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariIsl'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariIsl'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariIsl'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Cari İşlem Aralığı Ekleme
      tags:
      - CariIsl
  /api/CariIsl/delete:
    post:
      description: Belirtilen ID'ye sahip cari işlemi siler. Bu işlem, kullanıcıların
        belirli müşteri işlemlerini sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/CariIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/CariIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari İşlem Silme
      tags:
      - CariIsl
  /api/CariIsl/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip cari işlemi siler. Bu işlem, belirli bir
        müşteri işleminin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari İşlem Silme
      tags:
      - CariIsl
  /api/CariIsl/deleterange:
    post:
      description: Belirtilen aralıkta bulunan cari işlemleri toplu olarak siler.
        Bu işlem, birden fazla müşteri işleminin aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariIsl'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariIsl'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariIsl'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariIsl'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari İşlem Silme
      tags:
      - CariIsl
  /api/CariIsl/getall:
    post:
      description: Veritabanındaki tüm cari işlemleri getirir. Bu işlem, kullanıcıların
        tüm müşteri işlemlerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Cari İşlemleri Getir
      tags:
      - CariIsl
  /api/CariIsl/getbyid:
    get:
      description: Belirtilen ID'ye sahip cari işlemi getirir. Bu işlem, belirli bir
        müşteri işlemini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari İşlem Getir
      tags:
      - CariIsl
  /api/CariIsl/update:
    put:
      description: Belirtilen ID'ye sahip cari işlemi günceller. Bu işlem, mevcut
        bir müşteri işlemindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/CariIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/CariIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari İşlem Güncelle
      tags:
      - CariIsl
  /api/CariIsl/updaterange:
    put:
      description: Belirtilen aralıkta bulunan cari işlemleri toplu olarak günceller.
        Bu işlem, birden fazla müşteri işleminin aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariIsl'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariIsl'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariIsl'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariIsl'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari İşlemleri Güncelleme
      tags:
      - CariIsl
  /api/CariKart/CariEkstre:
    post:
      description: Cari ekstre oluşturur. Bu işlem, müşterilerin hesap özetlerini
        görüntülemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Ekstre
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/CariRapor:
    post:
      description: Cari rapor oluşturur. Bu işlem, müşterilerin finansal durumunu
        analiz etmek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Rapor
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/ControlDelete:
    post:
      description: Cari kart silme işlemi öncesinde kontrol yapar. Bu işlem, silme
        işlemi öncesinde gerekli kontrollerin yapılmasını sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKart'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKart'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKart'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKart'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kart Silme Kontrolü
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/ControlDeleteById:
    delete:
      description: Belirtilen ID'ye sahip cari kartın silinmesi öncesinde kontrol
        yapar. Bu işlem, belirli bir cari kartın silinmesi öncesinde gerekli kontrollerin
        yapılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Kart Silme Kontrolü
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/GetListWithBakiye:
    post:
      description: Cari kartları bakiye bilgileri ile birlikte listeler. Bu işlem,
        müşterilerin bakiye durumlarını incelemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Bakiye ile Cari Kart Listele
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/add:
    post:
      description: Yeni bir cari kart ekler. Bu işlem, sisteme yeni müşteri kartları
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKart'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKart'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKart'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKart'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kart Ekleme
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/addrange:
    post:
      description: Belirtilen aralıkta birden fazla cari kart ekler. Bu işlem, toplu
        müşteri kartları eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKart'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKart'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKart'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKart'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kart Aralığı Ekleme
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/delete:
    post:
      description: Belirtilen ID'ye sahip cari kartı siler. Bu işlem, kullanıcıların
        belirli müşteri kartlarını sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKart'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKart'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKart'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKart'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kart Silme
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip cari kartı siler. Bu işlem, belirli bir
        müşteri kartının sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Kart Silme
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/deleterange:
    post:
      description: Belirtilen aralıkta bulunan cari kartları toplu olarak siler. Bu
        işlem, birden fazla müşteri kartının aynı anda kaldırılması gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKart'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKart'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKart'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKart'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Kart Silme
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/getall:
    post:
      description: Veritabanındaki tüm cari kartları getirir. Bu işlem, kullanıcıların
        tüm müşteri kartlarını listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKartFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Cari Kartları Getir
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/getbyid:
    get:
      description: Belirtilen ID'ye sahip cari kartı getirir. Bu işlem, belirli bir
        müşteri kartını görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Kart Getir
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/update:
    put:
      description: Belirtilen ID'ye sahip cari kartı günceller. Bu işlem, mevcut bir
        müşteri kartındaki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKart'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKart'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKart'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKart'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kart Güncelle
      tags:
      - Cari Kart İşlemleri
  /api/CariKart/updaterange:
    put:
      description: Belirtilen aralıkta bulunan cari kartları toplu olarak günceller.
        Bu işlem, birden fazla müşteri kartının aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKart'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKart'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKart'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKart'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Kart Güncelleme
      tags:
      - Cari Kart İşlemleri
  /api/CariKartEticaret/add:
    post:
      description: Yeni bir cari kart e-ticaret bilgisi ekler. Bu işlem, e-ticaret
        işlemleri için müşteri kart bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKartEticaret'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKartEticaret'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKartEticaret'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKartEticaret'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kart E-ticaret Ekleme
      tags:
      - Cari Kart Eticaret
  /api/CariKartEticaret/addrange:
    post:
      description: Belirtilen aralıkta birden fazla cari kart e-ticaret bilgisi ekler.
        Bu işlem, toplu e-ticaret müşteri kart bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKartEticaret'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKartEticaret'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKartEticaret'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKartEticaret'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kart E-ticaret Aralığı Ekleme
      tags:
      - Cari Kart Eticaret
  /api/CariKartEticaret/delete:
    post:
      description: Belirtilen ID'ye sahip cari kart e-ticaret bilgisini siler. Bu
        işlem, kullanıcıların belirli e-ticaret müşteri kart bilgilerini sistemden
        kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKartEticaret'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKartEticaret'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKartEticaret'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKartEticaret'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kart E-ticaret Silme
      tags:
      - Cari Kart Eticaret
  /api/CariKartEticaret/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip cari kart e-ticaret bilgisini siler. Bu
        işlem, belirli bir e-ticaret müşteri kart bilgisinin sistemden kaldırılmasını
        sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Kart E-ticaret Silme
      tags:
      - Cari Kart Eticaret
  /api/CariKartEticaret/deleterange:
    post:
      description: Belirtilen aralıkta bulunan cari kart e-ticaret bilgilerini toplu
        olarak siler. Bu işlem, birden fazla e-ticaret müşteri kart bilgisinin aynı
        anda kaldırılması gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKartEticaret'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKartEticaret'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKartEticaret'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKartEticaret'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Kart E-ticaret Silme
      tags:
      - Cari Kart Eticaret
  /api/CariKartEticaret/getall:
    post:
      description: Veritabanındaki tüm cari kart e-ticaret bilgilerini getirir. Bu
        işlem, kullanıcıların tüm e-ticaret müşteri kart bilgilerini listelemelerini
        sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKartEticaretFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKartEticaretFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKartEticaretFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKartEticaretFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Cari Kart E-ticaret Bilgilerini Getir
      tags:
      - Cari Kart Eticaret
  /api/CariKartEticaret/getbyid:
    get:
      description: Belirtilen ID'ye sahip cari kart e-ticaret bilgisini getirir. Bu
        işlem, belirli bir e-ticaret müşteri kart bilgisini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Kart E-ticaret Bilgisi Getir
      tags:
      - Cari Kart Eticaret
  /api/CariKartEticaret/update:
    put:
      description: Belirtilen ID'ye sahip cari kart e-ticaret bilgisini günceller.
        Bu işlem, mevcut bir e-ticaret müşteri kart bilgisindeki bilgileri güncellemek
        için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKartEticaret'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKartEticaret'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKartEticaret'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKartEticaret'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kart E-ticaret Güncelle
      tags:
      - Cari Kart Eticaret
  /api/CariKartEticaret/updaterange:
    put:
      description: Belirtilen aralıkta bulunan cari kart e-ticaret bilgilerini toplu
        olarak günceller. Bu işlem, birden fazla e-ticaret müşteri kart bilgisinin
        aynı anda güncellenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKartEticaret'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKartEticaret'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKartEticaret'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKartEticaret'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Kart E-ticaret Güncelleme
      tags:
      - Cari Kart Eticaret
  /api/CariKodlar/add:
    post:
      description: Yeni bir cari kod ekler. Bu işlem, sisteme yeni müşteri kodları
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKodlar'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKodlar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKodlar'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKodlar'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kod Ekleme
      tags:
      - Cari Kodlar
  /api/CariKodlar/addrange:
    post:
      description: Belirtilen aralıkta birden fazla cari kod ekler. Bu işlem, toplu
        müşteri kodları eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKodlar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKodlar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKodlar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKodlar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kod Aralığı Ekleme
      tags:
      - Cari Kodlar
  /api/CariKodlar/delete:
    post:
      description: Belirtilen ID'ye sahip cari kodu siler. Bu işlem, kullanıcıların
        belirli müşteri kodlarını sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKodlar'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKodlar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKodlar'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKodlar'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kod Silme
      tags:
      - Cari Kodlar
  /api/CariKodlar/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip cari kodu siler. Bu işlem, belirli bir müşteri
        kodunun sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Kod Silme
      tags:
      - Cari Kodlar
  /api/CariKodlar/deleterange:
    post:
      description: Belirtilen aralıkta bulunan cari kodları toplu olarak siler. Bu
        işlem, birden fazla müşteri kodunun aynı anda kaldırılması gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKodlar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKodlar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKodlar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKodlar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Kod Silme
      tags:
      - Cari Kodlar
  /api/CariKodlar/getall:
    post:
      description: Veritabanındaki tüm cari kodları getirir. Bu işlem, kullanıcıların
        tüm müşteri kodlarını listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKodlarFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKodlarFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKodlarFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKodlarFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Cari Kodları Getir
      tags:
      - Cari Kodlar
  /api/CariKodlar/getbyid:
    get:
      description: Belirtilen ID'ye sahip cari kodu getirir. Bu işlem, belirli bir
        müşteri kodunu görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Kod Getir
      tags:
      - Cari Kodlar
  /api/CariKodlar/update:
    put:
      description: Belirtilen ID'ye sahip cari kodu günceller. Bu işlem, mevcut bir
        müşteri kodundaki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariKodlar'
          application/json:
            schema:
              $ref: '#/components/schemas/CariKodlar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariKodlar'
          text/json:
            schema:
              $ref: '#/components/schemas/CariKodlar'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Kod Güncelle
      tags:
      - Cari Kodlar
  /api/CariKodlar/updaterange:
    put:
      description: Belirtilen aralıkta bulunan cari kodları toplu olarak günceller.
        Bu işlem, birden fazla müşteri kodunun aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKodlar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKodlar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariKodlar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariKodlar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Kod Güncelleme
      tags:
      - Cari Kodlar
  /api/CariNot/add:
    post:
      description: Yeni bir cari not ekler. Bu işlem, sisteme yeni müşteri notları
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariNot'
          application/json:
            schema:
              $ref: '#/components/schemas/CariNot'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariNot'
          text/json:
            schema:
              $ref: '#/components/schemas/CariNot'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Not Ekleme
      tags:
      - Cari Not
  /api/CariNot/addrange:
    post:
      description: Belirtilen aralıkta birden fazla cari not ekler. Bu işlem, toplu
        müşteri notları eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariNot'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariNot'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariNot'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariNot'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Not Aralığı Ekleme
      tags:
      - Cari Not
  /api/CariNot/delete:
    post:
      description: Belirtilen ID'ye sahip cari notu siler. Bu işlem, kullanıcıların
        belirli müşteri notlarını sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariNot'
          application/json:
            schema:
              $ref: '#/components/schemas/CariNot'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariNot'
          text/json:
            schema:
              $ref: '#/components/schemas/CariNot'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Not Silme
      tags:
      - Cari Not
  /api/CariNot/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip cari notu siler. Bu işlem, belirli bir müşteri
        notunun sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Not Silme
      tags:
      - Cari Not
  /api/CariNot/deleterange:
    post:
      description: Belirtilen aralıkta bulunan cari notları toplu olarak siler. Bu
        işlem, birden fazla müşteri notunun aynı anda kaldırılması gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariNot'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariNot'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariNot'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariNot'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Not Silme
      tags:
      - Cari Not
  /api/CariNot/getall:
    post:
      description: Veritabanındaki tüm cari notları getirir. Bu işlem, kullanıcıların
        tüm müşteri notlarını listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariNotFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CariNotFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariNotFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CariNotFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Cari Notları Getir
      tags:
      - Cari Not
  /api/CariNot/getbyid:
    get:
      description: Belirtilen ID'ye sahip cari notu getirir. Bu işlem, belirli bir
        müşteri notunu görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Cari Not Getir
      tags:
      - Cari Not
  /api/CariNot/update:
    put:
      description: Belirtilen ID'ye sahip cari notu günceller. Bu işlem, mevcut bir
        müşteri notundaki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CariNot'
          application/json:
            schema:
              $ref: '#/components/schemas/CariNot'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CariNot'
          text/json:
            schema:
              $ref: '#/components/schemas/CariNot'
        required: true
      responses:
        '200':
          description: Success
      summary: Cari Not Güncelle
      tags:
      - Cari Not
  /api/CariNot/updaterange:
    put:
      description: Belirtilen aralıkta bulunan cari notları toplu olarak günceller.
        Bu işlem, birden fazla müşteri notunun aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/CariNot'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CariNot'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/CariNot'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/CariNot'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Cari Not Güncelleme
      tags:
      - Cari Not
  /api/Cek/add:
    post:
      description: Yeni bir çek ekler. Bu işlem, sisteme yeni çek bilgileri eklemek
        için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Cek'
          application/json:
            schema:
              $ref: '#/components/schemas/Cek'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Cek'
          text/json:
            schema:
              $ref: '#/components/schemas/Cek'
        required: true
      responses:
        '200':
          description: Success
      summary: Çek Ekleme
      tags:
      - Cek
  /api/Cek/addrange:
    post:
      description: Belirtilen aralıkta birden fazla çek ekler. Bu işlem, toplu çek
        bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Cek'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Cek'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Cek'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Cek'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Çek Aralığı Ekleme
      tags:
      - Cek
  /api/Cek/delete:
    post:
      description: Belirtilen ID'ye sahip çeki siler. Bu işlem, kullanıcıların belirli
        çek bilgilerini sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Cek'
          application/json:
            schema:
              $ref: '#/components/schemas/Cek'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Cek'
          text/json:
            schema:
              $ref: '#/components/schemas/Cek'
        required: true
      responses:
        '200':
          description: Success
      summary: Çek Silme
      tags:
      - Cek
  /api/Cek/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip çeki siler. Bu işlem, belirli bir çek bilgisinin
        sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Çek Silme
      tags:
      - Cek
  /api/Cek/deleterange:
    post:
      description: Belirtilen aralıkta bulunan çekleri toplu olarak siler. Bu işlem,
        birden fazla çek bilgisinin aynı anda kaldırılması gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Cek'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Cek'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Cek'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Cek'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Çek Silme
      tags:
      - Cek
  /api/Cek/getall:
    post:
      description: Veritabanındaki tüm çekleri getirir. Bu işlem, kullanıcıların tüm
        çek bilgilerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/CekFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/CekFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/CekFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/CekFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Çekleri Getir
      tags:
      - Cek
  /api/Cek/getbyid:
    get:
      description: Belirtilen ID'ye sahip çeki getirir. Bu işlem, belirli bir çek
        bilgisini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Çek Getir
      tags:
      - Cek
  /api/Cek/update:
    put:
      description: Belirtilen ID'ye sahip çeki günceller. Bu işlem, mevcut bir çek
        bilgisindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Cek'
          application/json:
            schema:
              $ref: '#/components/schemas/Cek'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Cek'
          text/json:
            schema:
              $ref: '#/components/schemas/Cek'
        required: true
      responses:
        '200':
          description: Success
      summary: Çek Güncelle
      tags:
      - Cek
  /api/Cek/updaterange:
    put:
      description: Belirtilen aralıkta bulunan çekleri toplu olarak günceller. Bu
        işlem, birden fazla çek bilgisinin aynı anda güncellenmesi gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Cek'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Cek'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Cek'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Cek'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Çek Güncelleme
      tags:
      - Cek
  /api/Efaturaayari/add:
    post:
      description: Yeni bir e-fatura ayarı ekler. Bu işlem, sisteme yeni e-fatura
        ayar bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Efaturaayari'
          application/json:
            schema:
              $ref: '#/components/schemas/Efaturaayari'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Efaturaayari'
          text/json:
            schema:
              $ref: '#/components/schemas/Efaturaayari'
        required: true
      responses:
        '200':
          description: Success
      summary: E-fatura Ayarı Ekleme
      tags:
      - Efatura Ayarı
  /api/Efaturaayari/addrange:
    post:
      description: Belirtilen aralıkta birden fazla e-fatura ayarı ekler. Bu işlem,
        toplu e-fatura ayar bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Efaturaayari'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Efaturaayari'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Efaturaayari'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Efaturaayari'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: E-fatura Ayarı Aralığı Ekleme
      tags:
      - Efatura Ayarı
  /api/Efaturaayari/delete:
    post:
      description: Belirtilen ID'ye sahip e-fatura ayarını siler. Bu işlem, kullanıcıların
        belirli e-fatura ayar bilgilerini sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Efaturaayari'
          application/json:
            schema:
              $ref: '#/components/schemas/Efaturaayari'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Efaturaayari'
          text/json:
            schema:
              $ref: '#/components/schemas/Efaturaayari'
        required: true
      responses:
        '200':
          description: Success
      summary: E-fatura Ayarı Silme
      tags:
      - Efatura Ayarı
  /api/Efaturaayari/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip e-fatura ayarını siler. Bu işlem, belirli
        bir e-fatura ayar bilgisinin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile E-fatura Ayarı Silme
      tags:
      - Efatura Ayarı
  /api/Efaturaayari/deleterange:
    post:
      description: Belirtilen aralıkta bulunan e-fatura ayarlarını toplu olarak siler.
        Bu işlem, birden fazla e-fatura ayar bilgisinin aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Efaturaayari'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Efaturaayari'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Efaturaayari'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Efaturaayari'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu E-fatura Ayarı Silme
      tags:
      - Efatura Ayarı
  /api/Efaturaayari/getall:
    post:
      description: Veritabanındaki tüm e-fatura ayarlarını getirir. Bu işlem, kullanıcıların
        tüm e-fatura ayar bilgilerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/EfaturaayariFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/EfaturaayariFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EfaturaayariFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/EfaturaayariFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm E-fatura Ayarlarını Getir
      tags:
      - Efatura Ayarı
  /api/Efaturaayari/getbyid:
    get:
      description: Belirtilen ID'ye sahip e-fatura ayarını getirir. Bu işlem, belirli
        bir e-fatura ayar bilgisini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile E-fatura Ayarı Getir
      tags:
      - Efatura Ayarı
  /api/Efaturaayari/update:
    put:
      description: Belirtilen ID'ye sahip e-fatura ayarını günceller. Bu işlem, mevcut
        bir e-fatura ayar bilgisindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Efaturaayari'
          application/json:
            schema:
              $ref: '#/components/schemas/Efaturaayari'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Efaturaayari'
          text/json:
            schema:
              $ref: '#/components/schemas/Efaturaayari'
        required: true
      responses:
        '200':
          description: Success
      summary: E-fatura Ayarı Güncelle
      tags:
      - Efatura Ayarı
  /api/Efaturaayari/updaterange:
    put:
      description: Belirtilen aralıkta bulunan e-fatura ayarlarını toplu olarak günceller.
        Bu işlem, birden fazla e-fatura ayar bilgisinin aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Efaturaayari'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Efaturaayari'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Efaturaayari'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Efaturaayari'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu E-fatura Ayarı Güncelleme
      tags:
      - Efatura Ayarı
  /api/Eticaretayarlar/add:
    post:
      description: Yeni bir e-ticaret ayarı ekler. Bu işlem, sisteme yeni e-ticaret
        ayar bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Eticaretayarlar'
          application/json:
            schema:
              $ref: '#/components/schemas/Eticaretayarlar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Eticaretayarlar'
          text/json:
            schema:
              $ref: '#/components/schemas/Eticaretayarlar'
        required: true
      responses:
        '200':
          description: Success
      summary: E-ticaret Ayarları Ekleme
      tags:
      - Eticaret Ayarlar
  /api/Eticaretayarlar/addrange:
    post:
      description: Belirtilen aralıkta birden fazla e-ticaret ayarı ekler. Bu işlem,
        toplu e-ticaret ayar bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Eticaretayarlar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Eticaretayarlar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Eticaretayarlar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Eticaretayarlar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: E-ticaret Ayarları Aralığı Ekleme
      tags:
      - Eticaret Ayarlar
  /api/Eticaretayarlar/delete:
    post:
      description: Belirtilen ID'ye sahip e-ticaret ayarını siler. Bu işlem, kullanıcıların
        belirli e-ticaret ayar bilgilerini sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Eticaretayarlar'
          application/json:
            schema:
              $ref: '#/components/schemas/Eticaretayarlar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Eticaretayarlar'
          text/json:
            schema:
              $ref: '#/components/schemas/Eticaretayarlar'
        required: true
      responses:
        '200':
          description: Success
      summary: E-ticaret Ayarları Silme
      tags:
      - Eticaret Ayarlar
  /api/Eticaretayarlar/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip e-ticaret ayarını siler. Bu işlem, belirli
        bir e-ticaret ayar bilgisinin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile E-ticaret Ayarları Silme
      tags:
      - Eticaret Ayarlar
  /api/Eticaretayarlar/deleterange:
    post:
      description: Belirtilen aralıkta bulunan e-ticaret ayarlarını toplu olarak siler.
        Bu işlem, birden fazla e-ticaret ayar bilgisinin aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Eticaretayarlar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Eticaretayarlar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Eticaretayarlar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Eticaretayarlar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu E-ticaret Ayarları Silme
      tags:
      - Eticaret Ayarlar
  /api/Eticaretayarlar/getall:
    post:
      description: Veritabanındaki tüm e-ticaret ayarlarını getirir. Bu işlem, kullanıcıların
        tüm e-ticaret ayar bilgilerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/EticaretayarlarFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/EticaretayarlarFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/EticaretayarlarFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/EticaretayarlarFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm E-ticaret Ayarlarını Getir
      tags:
      - Eticaret Ayarlar
  /api/Eticaretayarlar/getbyid:
    get:
      description: Belirtilen ID'ye sahip e-ticaret ayarını getirir. Bu işlem, belirli
        bir e-ticaret ayar bilgisini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile E-ticaret Ayarları Getir
      tags:
      - Eticaret Ayarlar
  /api/Eticaretayarlar/update:
    put:
      description: Belirtilen ID'ye sahip e-ticaret ayarını günceller. Bu işlem, mevcut
        bir e-ticaret ayar bilgisindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Eticaretayarlar'
          application/json:
            schema:
              $ref: '#/components/schemas/Eticaretayarlar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Eticaretayarlar'
          text/json:
            schema:
              $ref: '#/components/schemas/Eticaretayarlar'
        required: true
      responses:
        '200':
          description: Success
      summary: E-ticaret Ayarları Güncelle
      tags:
      - Eticaret Ayarlar
  /api/Eticaretayarlar/updaterange:
    put:
      description: Belirtilen aralıkta bulunan e-ticaret ayarlarını toplu olarak günceller.
        Bu işlem, birden fazla e-ticaret ayar bilgisinin aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Eticaretayarlar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Eticaretayarlar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Eticaretayarlar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Eticaretayarlar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu E-ticaret Ayarları Güncelleme
      tags:
      - Eticaret Ayarlar
  /api/FatHammeIsl/add:
    post:
      description: Yeni bir FatHammeIsl kaydı ekler. Bu işlem, sisteme yeni FatHammeIsl
        bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: FatHammeIsl Ekleme
      tags:
      - FatHammeIsl
  /api/FatHammeIsl/addrange:
    post:
      description: Belirtilen aralıkta birden fazla FatHammeIsl kaydı ekler. Bu işlem,
        toplu FatHammeIsl bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FatHammaddeIsl'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FatHammaddeIsl'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FatHammaddeIsl'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FatHammaddeIsl'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: FatHammeIsl Aralığı Ekleme
      tags:
      - FatHammeIsl
  /api/FatHammeIsl/delete:
    post:
      description: Belirtilen ID'ye sahip FatHammeIsl kaydını siler. Bu işlem, kullanıcıların
        belirli FatHammeIsl bilgilerini sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: FatHammeIsl Silme
      tags:
      - FatHammeIsl
  /api/FatHammeIsl/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip FatHammeIsl kaydını siler. Bu işlem, belirli
        bir FatHammeIsl bilgisinin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile FatHammeIsl Silme
      tags:
      - FatHammeIsl
  /api/FatHammeIsl/deleterange:
    post:
      description: Belirtilen aralıkta bulunan FatHammeIsl kayıtlarını toplu olarak
        siler. Bu işlem, birden fazla FatHammeIsl bilgisinin aynı anda kaldırılması
        gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FatHammaddeIsl'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FatHammaddeIsl'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FatHammaddeIsl'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FatHammaddeIsl'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu FatHammeIsl Silme
      tags:
      - FatHammeIsl
  /api/FatHammeIsl/getall:
    post:
      description: Veritabanındaki tüm FatHammeIsl kayıtlarını getirir. Bu işlem,
        kullanıcıların tüm FatHammeIsl bilgilerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm FatHammeIsl Kayıtlarını Getir
      tags:
      - FatHammeIsl
  /api/FatHammeIsl/getbyid:
    get:
      description: Belirtilen ID'ye sahip FatHammeIsl kaydını getirir. Bu işlem, belirli
        bir FatHammeIsl bilgisini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile FatHammeIsl Getir
      tags:
      - FatHammeIsl
  /api/FatHammeIsl/update:
    put:
      description: Belirtilen ID'ye sahip FatHammeIsl kaydını günceller. Bu işlem,
        mevcut bir FatHammeIsl bilgisindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/FatHammaddeIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: FatHammeIsl Güncelle
      tags:
      - FatHammeIsl
  /api/FatHammeIsl/updaterange:
    put:
      description: Belirtilen aralıkta bulunan FatHammeIsl kayıtlarını toplu olarak
        günceller. Bu işlem, birden fazla FatHammeIsl bilgisinin aynı anda güncellenmesi
        gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FatHammaddeIsl'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FatHammaddeIsl'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FatHammaddeIsl'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FatHammaddeIsl'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu FatHammeIsl Güncelleme
      tags:
      - FatHammeIsl
  /api/FatIsl/add:
    post:
      description: Yeni bir FatIsl kaydı ekler. Bu işlem, sisteme yeni FatIsl bilgileri
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FatIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/FatIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FatIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/FatIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: FatIsl Ekleme
      tags:
      - FatIsl
  /api/FatIsl/addrange:
    post:
      description: Belirtilen aralıkta birden fazla FatIsl kaydı ekler. Bu işlem,
        toplu FatIsl bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FatIsl'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FatIsl'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FatIsl'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FatIsl'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: FatIsl Aralığı Ekleme
      tags:
      - FatIsl
  /api/FatIsl/delete:
    post:
      description: Belirtilen ID'ye sahip FatIsl kaydını siler. Bu işlem, kullanıcıların
        belirli FatIsl bilgilerini sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FatIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/FatIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FatIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/FatIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: FatIsl Silme
      tags:
      - FatIsl
  /api/FatIsl/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip FatIsl kaydını siler. Bu işlem, belirli
        bir FatIsl bilgisinin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile FatIsl Silme
      tags:
      - FatIsl
  /api/FatIsl/deleterange:
    post:
      description: Belirtilen aralıkta bulunan FatIsl kayıtlarını toplu olarak siler.
        Bu işlem, birden fazla FatIsl bilgisinin aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FatIsl'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FatIsl'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FatIsl'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FatIsl'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu FatIsl Silme
      tags:
      - FatIsl
  /api/FatIsl/getall:
    post:
      description: Veritabanındaki tüm FatIsl kayıtlarını getirir. Bu işlem, kullanıcıların
        tüm FatIsl bilgilerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FatIslFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/FatIslFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FatIslFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/FatIslFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm FatIsl Kayıtlarını Getir
      tags:
      - FatIsl
  /api/FatIsl/getbyid:
    get:
      description: Belirtilen ID'ye sahip FatIsl kaydını getirir. Bu işlem, belirli
        bir FatIsl bilgisini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile FatIsl Getir
      tags:
      - FatIsl
  /api/FatIsl/update:
    put:
      description: Belirtilen ID'ye sahip FatIsl kaydını günceller. Bu işlem, mevcut
        bir FatIsl bilgisindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FatIsl'
          application/json:
            schema:
              $ref: '#/components/schemas/FatIsl'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FatIsl'
          text/json:
            schema:
              $ref: '#/components/schemas/FatIsl'
        required: true
      responses:
        '200':
          description: Success
      summary: FatIsl Güncelle
      tags:
      - FatIsl
  /api/FatIsl/updaterange:
    put:
      description: Belirtilen aralıkta bulunan FatIsl kayıtlarını toplu olarak günceller.
        Bu işlem, birden fazla FatIsl bilgisinin aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FatIsl'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FatIsl'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FatIsl'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FatIsl'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu FatIsl Güncelleme
      tags:
      - FatIsl
  /api/FatIslEtic/add:
    post:
      description: Yeni bir FatIslEtic kaydı ekler. Bu işlem, sisteme yeni FatIslEtic
        bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FatIslEtic'
          application/json:
            schema:
              $ref: '#/components/schemas/FatIslEtic'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FatIslEtic'
          text/json:
            schema:
              $ref: '#/components/schemas/FatIslEtic'
        required: true
      responses:
        '200':
          description: Success
      summary: FatIslEtic Ekleme
      tags:
      - FatIslEtic
  /api/FatIslEtic/addrange:
    post:
      description: Belirtilen aralıkta birden fazla FatIslEtic kaydı ekler. Bu işlem,
        toplu FatIslEtic bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FatIslEtic'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FatIslEtic'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FatIslEtic'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FatIslEtic'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: FatIslEtic Aralığı Ekleme
      tags:
      - FatIslEtic
  /api/FatIslEtic/delete:
    post:
      description: Belirtilen ID'ye sahip FatIslEtic kaydını siler. Bu işlem, kullanıcıların
        belirli FatIslEtic bilgilerini sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FatIslEtic'
          application/json:
            schema:
              $ref: '#/components/schemas/FatIslEtic'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FatIslEtic'
          text/json:
            schema:
              $ref: '#/components/schemas/FatIslEtic'
        required: true
      responses:
        '200':
          description: Success
      summary: FatIslEtic Silme
      tags:
      - FatIslEtic
  /api/FatIslEtic/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip FatIslEtic kaydını siler. Bu işlem, belirli
        bir FatIslEtic bilgisinin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile FatIslEtic Silme
      tags:
      - FatIslEtic
  /api/FatIslEtic/deleterange:
    post:
      description: Belirtilen aralıkta bulunan FatIslEtic kayıtlarını toplu olarak
        siler. Bu işlem, birden fazla FatIslEtic bilgisinin aynı anda kaldırılması
        gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FatIslEtic'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FatIslEtic'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FatIslEtic'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FatIslEtic'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu FatIslEtic Silme
      tags:
      - FatIslEtic
  /api/FatIslEtic/getall:
    post:
      description: Veritabanındaki tüm FatIslEtic kayıtlarını getirir. Bu işlem, kullanıcıların
        tüm FatIslEtic bilgilerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FatIslEticFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/FatIslEticFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FatIslEticFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/FatIslEticFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm FatIslEtic Kayıtlarını Getir
      tags:
      - FatIslEtic
  /api/FatIslEtic/getbyid:
    get:
      description: Belirtilen ID'ye sahip FatIslEtic kaydını getirir. Bu işlem, belirli
        bir FatIslEtic bilgisini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile FatIslEtic Getir
      tags:
      - FatIslEtic
  /api/FatIslEtic/update:
    put:
      description: Belirtilen ID'ye sahip FatIslEtic kaydını günceller. Bu işlem,
        mevcut bir FatIslEtic bilgisindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FatIslEtic'
          application/json:
            schema:
              $ref: '#/components/schemas/FatIslEtic'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FatIslEtic'
          text/json:
            schema:
              $ref: '#/components/schemas/FatIslEtic'
        required: true
      responses:
        '200':
          description: Success
      summary: FatIslEtic Güncelle
      tags:
      - FatIslEtic
  /api/FatIslEtic/updaterange:
    put:
      description: Belirtilen aralıkta bulunan FatIslEtic kayıtlarını toplu olarak
        günceller. Bu işlem, birden fazla FatIslEtic bilgisinin aynı anda güncellenmesi
        gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FatIslEtic'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FatIslEtic'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FatIslEtic'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FatIslEtic'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu FatIslEtic Güncelleme
      tags:
      - FatIslEtic
  /api/Fatura/Add:
    post:
      description: Sisteme yeni bir Fatura ekler. Bu işlem, belirtilen Fatura bilgilerini
        kaydeder ve başarılı olduğunu belirtir.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Fatura'
          application/json:
            schema:
              $ref: '#/components/schemas/Fatura'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Fatura'
          text/json:
            schema:
              $ref: '#/components/schemas/Fatura'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Ekleme
      tags:
      - Fatura İşlemleri
  /api/Fatura/ControlDelete:
    post:
      description: Belirtilen ID'ye sahip Fatura kaydını silmek için kontrol işlemi
        yapar. Bu işlem, belirli bir Fatura kaydının sistemden kaldırılması gerekip
        gerekmediğini kontrol eder.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Fatura'
          application/json:
            schema:
              $ref: '#/components/schemas/Fatura'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Fatura'
          text/json:
            schema:
              $ref: '#/components/schemas/Fatura'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Kontrol Silme
      tags:
      - Fatura İşlemleri
  /api/Fatura/ControlDeleteById:
    delete:
      description: Belirtilen ID'ye sahip Fatura kaydını siler. Bu işlem, belirli
        bir Fatura bilgisinin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Fatura Silme
      tags:
      - Fatura İşlemleri
  /api/Fatura/GetByIdAll:
    get:
      description: Belirtilen ID'ye sahip tüm Fatura kayıtlarını getirir. Bu işlem,
        belirli bir Fatura bilgisiyle ilişkili tüm verileri görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: Fatura Tüm Kayıtlarını Getir (ID ile)
      tags:
      - Fatura İşlemleri
  /api/Fatura/GetListAll:
    post:
      description: Sistemdeki tüm Fatura kayıtlarını getirir. Bu işlem, kullanıcıların
        tüm Fatura bilgilerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Listesini Getir
      tags:
      - Fatura İşlemleri
  /api/Fatura/SatisBilgileriRapor:
    post:
      description: Satış bilgilerini içeren Fatura raporunu oluşturur. Bu işlem, satış
        verilerini içeren ayrıntılı bir rapor hazırlamak için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Satış Bilgileri Raporu
      tags:
      - Fatura İşlemleri
  /api/Fatura/Update:
    post:
      description: Belirtilen ID'ye sahip Fatura kaydını günceller. Bu işlem, mevcut
        bir Fatura bilgisindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Fatura'
          application/json:
            schema:
              $ref: '#/components/schemas/Fatura'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Fatura'
          text/json:
            schema:
              $ref: '#/components/schemas/Fatura'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Güncelleme
      tags:
      - Fatura İşlemleri
  /api/Fatura/addrange:
    post:
      description: Belirtilen aralıkta birden fazla Fatura kaydı ekler. Bu işlem,
        toplu Fatura bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Fatura'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Fatura'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Fatura'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Fatura'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Aralığı Ekleme
      tags:
      - Fatura İşlemleri
  /api/Fatura/delete:
    post:
      description: Belirtilen ID'ye sahip Fatura kaydını siler. Bu işlem, kullanıcıların
        belirli Fatura bilgilerini sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Fatura'
          application/json:
            schema:
              $ref: '#/components/schemas/Fatura'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Fatura'
          text/json:
            schema:
              $ref: '#/components/schemas/Fatura'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Silme
      tags:
      - Fatura İşlemleri
  /api/Fatura/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip Fatura kaydını siler. Bu işlem, belirli
        bir Fatura bilgisinin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Fatura Silme
      tags:
      - Fatura İşlemleri
  /api/Fatura/deleterange:
    post:
      description: Belirtilen aralıkta bulunan Fatura kayıtlarını toplu olarak siler.
        Bu işlem, birden fazla Fatura bilgisinin aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Fatura'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Fatura'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Fatura'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Fatura'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Fatura Silme
      tags:
      - Fatura İşlemleri
  /api/Fatura/getall:
    post:
      description: Veritabanındaki tüm Fatura kayıtlarını getirir. Bu işlem, kullanıcıların
        tüm Fatura bilgilerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Fatura Kayıtlarını Getir
      tags:
      - Fatura İşlemleri
  /api/Fatura/getbyid:
    get:
      description: Belirtilen ID'ye sahip Fatura kaydını getirir. Bu işlem, belirli
        bir Fatura bilgisini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Fatura Getir
      tags:
      - Fatura İşlemleri
  /api/Fatura/getevrakno:
    post:
      description: Belirtilen evrak numarasına sahip Fatura kaydını getirir. Bu işlem,
        belirli bir evrak numarasıyla ilişkili Fatura bilgisini görüntülemek için
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Evrak Numarası Getir
      tags:
      - Fatura İşlemleri
  /api/Fatura/update:
    put:
      description: Belirtilen ID'ye sahip Fatura kaydını günceller. Bu işlem, mevcut
        bir Fatura bilgisindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Fatura'
          application/json:
            schema:
              $ref: '#/components/schemas/Fatura'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Fatura'
          text/json:
            schema:
              $ref: '#/components/schemas/Fatura'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Güncelleme
      tags:
      - Fatura İşlemleri
  /api/Fatura/updaterange:
    put:
      description: Belirtilen aralıkta bulunan Fatura kayıtlarını toplu olarak günceller.
        Bu işlem, birden fazla Fatura bilgisinin aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Fatura'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Fatura'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Fatura'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Fatura'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Fatura Güncelleme
      tags:
      - Fatura İşlemleri
  /api/FaturaAciklamalari/add:
    post:
      description: Yeni bir Fatura açıklaması ekler. Bu işlem, sisteme yeni açıklama
        bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalari'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalari'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalari'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalari'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Açıklamaları Ekleme
      tags:
      - Fatura Açıklamaları
  /api/FaturaAciklamalari/addrange:
    post:
      description: Belirtilen aralıkta birden fazla Fatura açıklaması ekler. Bu işlem,
        toplu açıklama bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaAciklamalari'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaAciklamalari'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaAciklamalari'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaAciklamalari'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Açıklamaları Aralığı Ekleme
      tags:
      - Fatura Açıklamaları
  /api/FaturaAciklamalari/delete:
    post:
      description: Belirtilen ID'ye sahip Fatura açıklamasını siler. Bu işlem, kullanıcıların
        belirli açıklama bilgilerini sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalari'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalari'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalari'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalari'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Açıklamaları Silme
      tags:
      - Fatura Açıklamaları
  /api/FaturaAciklamalari/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip Fatura açıklamasını siler. Bu işlem, belirli
        bir açıklamanın sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Fatura Açıklaması Silme
      tags:
      - Fatura Açıklamaları
  /api/FaturaAciklamalari/deleterange:
    post:
      description: Belirtilen aralıkta bulunan Fatura açıklamalarını toplu olarak
        siler. Bu işlem, birden fazla açıklamanın aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaAciklamalari'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaAciklamalari'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaAciklamalari'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaAciklamalari'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Fatura Açıklamaları Silme
      tags:
      - Fatura Açıklamaları
  /api/FaturaAciklamalari/getall:
    post:
      description: Veritabanındaki tüm Fatura açıklamaları kayıtlarını getirir. Bu
        işlem, kullanıcıların tüm açıklama bilgilerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalariFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalariFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalariFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalariFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Fatura Açıklamaları Kayıtlarını Getir
      tags:
      - Fatura Açıklamaları
  /api/FaturaAciklamalari/getbyid:
    get:
      description: Belirtilen ID'ye sahip Fatura açıklamasını getirir. Bu işlem, belirli
        bir açıklama bilgisini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Fatura Açıklaması Getir
      tags:
      - Fatura Açıklamaları
  /api/FaturaAciklamalari/update:
    put:
      description: Belirtilen ID'ye sahip Fatura açıklamasını günceller. Bu işlem,
        mevcut bir açıklama bilgisindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalari'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalari'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalari'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaAciklamalari'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Açıklamaları Güncelleme
      tags:
      - Fatura Açıklamaları
  /api/FaturaAciklamalari/updaterange:
    put:
      description: Belirtilen aralıkta bulunan Fatura açıklamalarını toplu olarak
        günceller. Bu işlem, birden fazla açıklamanın aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaAciklamalari'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaAciklamalari'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaAciklamalari'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaAciklamalari'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Fatura Açıklamaları Güncelleme
      tags:
      - Fatura Açıklamaları
  /api/FaturaKodlar/add:
    post:
      description: Yeni bir Fatura kodu ekler. Bu işlem, sisteme yeni Fatura kodları
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaKodlar'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaKodlar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaKodlar'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaKodlar'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Kodları Ekleme
      tags:
      - Fatura Kodlar
  /api/FaturaKodlar/addrange:
    post:
      description: Belirtilen aralıkta birden fazla Fatura kodu ekler. Bu işlem, toplu
        Fatura kodları eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaKodlar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaKodlar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaKodlar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaKodlar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Kodları Aralığı Ekleme
      tags:
      - Fatura Kodlar
  /api/FaturaKodlar/delete:
    post:
      description: Belirtilen ID'ye sahip Fatura kodunu siler. Bu işlem, kullanıcıların
        belirli Fatura kodlarını sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaKodlar'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaKodlar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaKodlar'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaKodlar'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Kodları Silme
      tags:
      - Fatura Kodlar
  /api/FaturaKodlar/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip Fatura kodunu siler. Bu işlem, belirli bir
        Fatura kodunun sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Fatura Kodu Silme
      tags:
      - Fatura Kodlar
  /api/FaturaKodlar/deleterange:
    post:
      description: Belirtilen aralıkta bulunan Fatura kodlarını toplu olarak siler.
        Bu işlem, birden fazla Fatura kodunun aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaKodlar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaKodlar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaKodlar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaKodlar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Fatura Kodları Silme
      tags:
      - Fatura Kodlar
  /api/FaturaKodlar/getall:
    post:
      description: Veritabanındaki tüm Fatura kodları kayıtlarını getirir. Bu işlem,
        kullanıcıların tüm Fatura kodlarını listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaKodlarFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaKodlarFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaKodlarFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaKodlarFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Fatura Kodları Kayıtlarını Getir
      tags:
      - Fatura Kodlar
  /api/FaturaKodlar/getbyid:
    get:
      description: Belirtilen ID'ye sahip Fatura kodunu getirir. Bu işlem, belirli
        bir Fatura kodunu görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Fatura Kodu Getir
      tags:
      - Fatura Kodlar
  /api/FaturaKodlar/update:
    put:
      description: Belirtilen ID'ye sahip Fatura kodunu günceller. Bu işlem, mevcut
        bir Fatura kodundaki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaKodlar'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaKodlar'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaKodlar'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaKodlar'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Kodları Güncelleme
      tags:
      - Fatura Kodlar
  /api/FaturaKodlar/updaterange:
    put:
      description: Belirtilen aralıkta bulunan Fatura kodlarını toplu olarak günceller.
        Bu işlem, birden fazla Fatura kodunun aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaKodlar'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaKodlar'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaKodlar'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaKodlar'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Fatura Kodları Güncelleme
      tags:
      - Fatura Kodlar
  /api/FaturaTeslimAdres/add:
    post:
      description: Yeni bir Fatura teslim adresi ekler. Bu işlem, sisteme yeni teslim
        adresi bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdres'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdres'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdres'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdres'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Teslim Adresi Ekleme
      tags:
      - Fatura Teslim Adres İşlemleri
  /api/FaturaTeslimAdres/addrange:
    post:
      description: Belirtilen aralıkta birden fazla Fatura teslim adresi ekler. Bu
        işlem, toplu teslim adresi bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaTeslimAdres'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaTeslimAdres'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaTeslimAdres'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaTeslimAdres'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Teslim Adresi Aralığı Ekleme
      tags:
      - Fatura Teslim Adres İşlemleri
  /api/FaturaTeslimAdres/delete:
    post:
      description: Belirtilen ID'ye sahip Fatura teslim adresini siler. Bu işlem,
        kullanıcıların belirli teslim adresi bilgilerini sistemden kaldırmalarına
        olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdres'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdres'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdres'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdres'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Teslim Adresi Silme
      tags:
      - Fatura Teslim Adres İşlemleri
  /api/FaturaTeslimAdres/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip Fatura teslim adresini siler. Bu işlem,
        belirli bir teslim adresinin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Fatura Teslim Adresi Silme
      tags:
      - Fatura Teslim Adres İşlemleri
  /api/FaturaTeslimAdres/deleterange:
    post:
      description: Belirtilen aralıkta bulunan Fatura teslim adreslerini toplu olarak
        siler. Bu işlem, birden fazla teslim adresinin aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaTeslimAdres'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaTeslimAdres'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaTeslimAdres'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaTeslimAdres'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Fatura Teslim Adresleri Silme
      tags:
      - Fatura Teslim Adres İşlemleri
  /api/FaturaTeslimAdres/getall:
    post:
      description: Veritabanındaki tüm Fatura teslim adresleri kayıtlarını getirir.
        Bu işlem, kullanıcıların tüm teslim adresi bilgilerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdresFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdresFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdresFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdresFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Fatura Teslim Adresleri Kayıtlarını Getir
      tags:
      - Fatura Teslim Adres İşlemleri
  /api/FaturaTeslimAdres/getbyid:
    get:
      description: Belirtilen ID'ye sahip Fatura teslim adresini getirir. Bu işlem,
        belirli bir teslim adresi bilgisini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Fatura Teslim Adresi Getir
      tags:
      - Fatura Teslim Adres İşlemleri
  /api/FaturaTeslimAdres/update:
    put:
      description: Belirtilen ID'ye sahip Fatura teslim adresini günceller. Bu işlem,
        mevcut bir teslim adresi bilgisindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdres'
          application/json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdres'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdres'
          text/json:
            schema:
              $ref: '#/components/schemas/FaturaTeslimAdres'
        required: true
      responses:
        '200':
          description: Success
      summary: Fatura Teslim Adresi Güncelleme
      tags:
      - Fatura Teslim Adres İşlemleri
  /api/FaturaTeslimAdres/updaterange:
    put:
      description: Belirtilen aralıkta bulunan Fatura teslim adreslerini toplu olarak
        günceller. Bu işlem, birden fazla teslim adresinin aynı anda güncellenmesi
        gerektiğinde kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaTeslimAdres'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaTeslimAdres'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaTeslimAdres'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/FaturaTeslimAdres'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Fatura Teslim Adresleri Güncelleme
      tags:
      - Fatura Teslim Adres İşlemleri
  /api/Firma/add:
    post:
      description: Yeni bir firma kaydı ekler. Bu işlem, sisteme yeni firma bilgileri
        eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Firma'
          application/json:
            schema:
              $ref: '#/components/schemas/Firma'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Firma'
          text/json:
            schema:
              $ref: '#/components/schemas/Firma'
        required: true
      responses:
        '200':
          description: Success
      summary: Firma Ekleme
      tags:
      - Firma
  /api/Firma/addrange:
    post:
      description: Belirtilen aralıkta birden fazla firma kaydı ekler. Bu işlem, toplu
        firma bilgileri eklemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Firma'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Firma'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Firma'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Firma'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Firma Aralığı Ekleme
      tags:
      - Firma
  /api/Firma/delete:
    post:
      description: Belirtilen ID'ye sahip firma kaydını siler. Bu işlem, kullanıcıların
        belirli firma bilgilerini sistemden kaldırmalarına olanak tanır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Firma'
          application/json:
            schema:
              $ref: '#/components/schemas/Firma'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Firma'
          text/json:
            schema:
              $ref: '#/components/schemas/Firma'
        required: true
      responses:
        '200':
          description: Success
      summary: Firma Silme
      tags:
      - Firma
  /api/Firma/deletebyid:
    delete:
      description: Belirtilen ID'ye sahip firma kaydını siler. Bu işlem, belirli bir
        firma bilgisinin sistemden kaldırılmasını sağlar.
      parameters:
      - explode: true
        in: query
        name: entityId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Firma Silme
      tags:
      - Firma
  /api/Firma/deleterange:
    post:
      description: Belirtilen aralıkta bulunan firma kayıtlarını toplu olarak siler.
        Bu işlem, birden fazla firma bilgisinin aynı anda kaldırılması gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Firma'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Firma'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Firma'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Firma'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Firma Silme
      tags:
      - Firma
  /api/Firma/getall:
    post:
      description: Veritabanındaki tüm firma kayıtlarını getirir. Bu işlem, kullanıcıların
        tüm firma bilgilerini listelemelerini sağlar.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/FirmaFilterHelper'
          application/json:
            schema:
              $ref: '#/components/schemas/FirmaFilterHelper'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/FirmaFilterHelper'
          text/json:
            schema:
              $ref: '#/components/schemas/FirmaFilterHelper'
        required: true
      responses:
        '200':
          description: Success
      summary: Tüm Firma Kayıtlarını Getir
      tags:
      - Firma
  /api/Firma/getbyid:
    get:
      description: Belirtilen ID'ye sahip firma kaydını getirir. Bu işlem, belirli
        bir firma bilgisini görüntülemek için kullanılır.
      parameters:
      - explode: true
        in: query
        name: id
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        '200':
          description: Success
      summary: ID ile Firma Getir
      tags:
      - Firma
  /api/Firma/update:
    put:
      description: Belirtilen ID'ye sahip firma kaydını günceller. Bu işlem, mevcut
        bir firma bilgisindeki bilgileri güncellemek için kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              $ref: '#/components/schemas/Firma'
          application/json:
            schema:
              $ref: '#/components/schemas/Firma'
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Firma'
          text/json:
            schema:
              $ref: '#/components/schemas/Firma'
        required: true
      responses:
        '200':
          description: Success
      summary: Firma Güncelleme
      tags:
      - Firma
  /api/Firma/updaterange:
    put:
      description: Belirtilen aralıkta bulunan firma kayıtlarını toplu olarak günceller.
        Bu işlem, birden fazla firma bilgisinin aynı anda güncellenmesi gerektiğinde
        kullanılır.
      requestBody:
        content:
          application/*+json:
            schema:
              items:
                $ref: '#/components/schemas/Firma'
              type: array
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Firma'
              type: array
          application/json-patch+json:
            schema:
              items:
                $ref: '#/components/schemas/Firma'
              type: array
          text/json:
            schema:
              items:
                $ref: '#/components/schemas/Firma'
              type: array
        required: true
      responses:
        '200':
          description: Success
      summary: Toplu Firma Güncelleme
      tags:
      - Firma
security:
- Bearer: []
servers:
- description: SwaggerHub API Auto Mocking
  url: https://apiv3.bilsoft.com/swagger/v1/swagger.json
